<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip4.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ToolStripMenuItem1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <data name="PADVER.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Eliminar.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="txtCrear_base_de_datosEXPRESS2014.Text" xml:space="preserve">
    <value>CREATE DATABASE [BASEADA]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'BASEADA', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\BASEADA.mdf' , SIZE = 5120KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'BASEADA_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\BASEADA_log.ldf' , SIZE = 2048KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)

</value>
  </data>
  <data name="txtCrear_procedimientos.Text" xml:space="preserve">
    <value>USE [master]
GO

ALTER DATABASE [BASEADA] SET COMPATIBILITY_LEVEL = 120
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [BASEADA].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [BASEADA] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [BASEADA] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [BASEADA] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [BASEADA] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [BASEADA] SET ARITHABORT OFF 
GO
ALTER DATABASE [BASEADA] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [BASEADA] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [BASEADA] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [BASEADA] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [BASEADA] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [BASEADA] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [BASEADA] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [BASEADA] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [BASEADA] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [BASEADA] SET  DISABLE_BROKER 
GO
ALTER DATABASE [BASEADA] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [BASEADA] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [BASEADA] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [BASEADA] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [BASEADA] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [BASEADA] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [BASEADA] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [BASEADA] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [BASEADA] SET  MULTI_USER 
GO
ALTER DATABASE [BASEADA] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [BASEADA] SET DB_CHAINING OFF 
GO
ALTER DATABASE [BASEADA] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [BASEADA] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
ALTER DATABASE [BASEADA] SET DELAYED_DURABILITY = DISABLED 
GO
USE [BASEADA]
GO
/****** Object:  User [peruinka]    Script Date: 09/09/2019 18:25:22 ******/
CREATE USER [peruinka] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [magbri]    Script Date: 09/09/2019 18:25:22 ******/
CREATE USER [magbri] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [ferreteria1]    Script Date: 09/09/2019 18:25:22 ******/
CREATE USER [ferreteria1] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
ALTER ROLE [db_owner] ADD MEMBER [peruinka]
GO
ALTER ROLE [db_accessadmin] ADD MEMBER [peruinka]
GO
ALTER ROLE [db_securityadmin] ADD MEMBER [peruinka]
GO
ALTER ROLE [db_ddladmin] ADD MEMBER [peruinka]
GO
ALTER ROLE [db_backupoperator] ADD MEMBER [peruinka]
GO
ALTER ROLE [db_datareader] ADD MEMBER [peruinka]
GO
ALTER ROLE [db_datawriter] ADD MEMBER [peruinka]
GO
ALTER ROLE [db_accessadmin] ADD MEMBER [magbri]
GO
ALTER ROLE [db_ddladmin] ADD MEMBER [magbri]
GO
ALTER ROLE [db_datareader] ADD MEMBER [magbri]
GO
ALTER ROLE [db_datawriter] ADD MEMBER [magbri]
GO
ALTER ROLE [db_denydatareader] ADD MEMBER [magbri]
GO
/****** Object:  Table [dbo].[ASISTENCIAS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ASISTENCIAS](
	[Id_asistencia] [int] IDENTITY(1,1) NOT NULL,
	[Id_personal] [int] NULL,
	[Fecha_entrada] [datetime] NULL,
	[Fecha_salida] [datetime] NULL,
	[Estado] [varchar](50) NULL,
	[Horas] [numeric](18, 2) NULL,
 CONSTRAINT [PK_ASISTENCIAS] PRIMARY KEY CLUSTERED 
(
	[Id_asistencia] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Caja]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Caja](
	[Id_Caja] [int] IDENTITY(1,1) NOT NULL,
	[Descripcion] [varchar](50) NULL,
	[Tema] [varchar](50) NULL,
	[Serial_PC] [varchar](50) NULL,
	[Impresora_Ticket] [varchar](max) NULL,
	[Impresora_A4] [varchar](max) NULL,
 CONSTRAINT [PK_Caja_1] PRIMARY KEY CLUSTERED 
(
	[Id_Caja] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[categoria]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[categoria](
	[idcategoria] [int] IDENTITY(1,1) NOT NULL,
	[nombrecategoria] [varchar](50) NULL,
 CONSTRAINT [PK_categoria] PRIMARY KEY CLUSTERED 
(
	[idcategoria] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CLIENTE_FACTURA_PERU]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CLIENTE_FACTURA_PERU](
	[CLIE_CODIGO] [varchar](8) NOT NULL,
	[TPDC_CODIGO] [varchar](1) NOT NULL,
	[REEC_CODIGO] [varchar](1) NOT NULL,
	[UBDS_CODIGO] [varchar](6) NOT NULL,
	[CLIE_NOMBRES] [varchar](150) NOT NULL,
	[CLIE_APELLIDOPATERNO] [varchar](100) NOT NULL,
	[CLIE_APELLIDOMATERNO] [varchar](100) NOT NULL,
	[CLIE_NRODOCUMENTO] [varchar](18) NOT NULL,
	[CLIE_SEXO] [varchar](15) NOT NULL,
	[CLIE_FECHANACIMIENTO] [datetime] NULL,
	[CLIE_ESTADOCIVIL] [varchar](25) NULL,
	[CLIE_DIRECCION] [varchar](300) NULL,
	[CLIE_REFERENCIA] [varchar](300) NULL,
	[CLIE_TELEFONO] [varchar](75) NULL,
	[CLIE_EMAIL] [varchar](120) NULL,
	[CLIE_OCUPACION] [varchar](150) NULL,
	[CLIE_EMPRESA] [varchar](100) NULL,
	[CLIE_EMPRESADIRECCION] [varchar](300) NULL,
	[CLIE_EMPRESATELEFONO] [varchar](75) NULL,
	[CLIE_ESTADO] [varchar](2) NULL,
	[CLIE_ID_OBRA] [numeric](18, 0) NULL,
	[FlgAnexoConcar] [int] NULL
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[clientes]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[clientes](
	[idclientev] [int] IDENTITY(1,1) NOT NULL,
	[Nombre] [varchar](max) NULL,
	[Direccion_para_factura] [varchar](max) NULL,
	[Ruc] [varchar](max) NULL,
	[movil] [varchar](50) NULL,
	[Cliente] [varchar](50) NULL,
	[Proveedor] [varchar](50) NULL,
	[Estado] [varchar](50) NULL,
	[Saldo] [numeric](18, 2) NULL,
 CONSTRAINT [PK_clientes] PRIMARY KEY CLUSTERED 
(
	[idclientev] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CONCEPTOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CONCEPTOS](
	[Id_concepto] [int] IDENTITY(1,1) NOT NULL,
	[Descripcion] [varchar](max) NULL,
 CONSTRAINT [PK_CONCEPTOS] PRIMARY KEY CLUSTERED 
(
	[Id_concepto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CONEXION]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CONEXION](
	[Id_conexion] [int] IDENTITY(1,1) NOT NULL,
	[Data_source_REMOTO] [varchar](max) NULL,
 CONSTRAINT [PK_CONEXION] PRIMARY KEY CLUSTERED 
(
	[Id_conexion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[CONTROL_DE_COBROS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CONTROL_DE_COBROS](
	[Id_control_de_cobros] [int] IDENTITY(1,1) NOT NULL,
	[Monto] [numeric](18, 2) NULL,
	[Concepto] [varchar](max) NULL,
	[Id_venta] [int] NULL,
 CONSTRAINT [PK_CONTROL_DE_COBROS] PRIMARY KEY CLUSTERED 
(
	[Id_control_de_cobros] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Control_de_L]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Control_de_L](
	[Id_controlar_licencia] [int] IDENTITY(1,1) NOT NULL,
	[Fecha_activacion] [date] NULL,
	[Fecha_finalizacion] [date] NULL,
	[Dias_de_uso] [int] NULL,
	[Fecha_de_registro_de_uso] [date] NULL,
	[Dias_de_licencia] [int] NULL,
 CONSTRAINT [PK_Control_de_L] PRIMARY KEY CLUSTERED 
(
	[Id_controlar_licencia] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[Correo_base]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Correo_base](
	[Id_correo_base] [int] IDENTITY(1,1) NOT NULL,
	[Correo] [varchar](max) NULL,
	[Password] [varchar](max) NULL,
	[Estado_De_envio] [varchar](max) NULL,
 CONSTRAINT [PK_Correo_base] PRIMARY KEY CLUSTERED 
(
	[Id_correo_base] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DETALLE_CONTROL_DE_COBROS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DETALLE_CONTROL_DE_COBROS](
	[Id_detalle_de_control_de_cobros] [int] IDENTITY(1,1) NOT NULL,
	[Pago_realizado] [numeric](18, 2) NULL,
	[Fecha_que_pago] [datetime] NULL,
	[Tipo_de_cobro] [varchar](50) NULL,
	[Detalle] [varchar](max) NULL,
	[Id_cliente] [int] NULL,
	[Id_usuario] [int] NULL,
	[Id_caja] [int] NULL,
	[Comprobante] [varchar](max) NULL,
 CONSTRAINT [PK_DETALLE_CONTROL_DE_COBROS] PRIMARY KEY CLUSTERED 
(
	[Id_detalle_de_control_de_cobros] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[detalle_venta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[detalle_venta](
	[iddetalle_venta] [int] IDENTITY(1,1) NOT NULL,
	[idventa] [int] NOT NULL,
	[Id_producto] [int] NOT NULL,
	[cantidad] [numeric](18, 2) NULL,
	[preciounitario] [numeric](18, 2) NULL,
	[Modena] [varchar](50) NULL,
	[Total_a_pagar]  AS ([preciounitario]*[cantidad]),
	[Unidad_de_medida] [varchar](50) NULL,
	[Cantidad_mostrada] [numeric](18, 2) NULL,
	[Estado] [varchar](50) NULL,
	[Descripcion] [varchar](50) NULL,
	[Codigo] [varchar](50) NULL,
	[Stock] [varchar](50) NULL,
	[Se_vende_a] [varchar](50) NULL,
	[Usa_inventarios] [varchar](50) NULL,
	[Costo] [numeric](18, 2) NULL,
	[Ganancia]  AS ([cantidad]*[preciounitario]-[cantidad]*[Costo]),
 CONSTRAINT [PK_detalle_venta] PRIMARY KEY CLUSTERED 
(
	[iddetalle_venta] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[EMPRESA]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[EMPRESA](
	[Id_empresa] [int] IDENTITY(1,1) NOT NULL,
	[Nombre_Empresa] [varchar](50) NULL,
	[Logo] [image] NULL,
	[Impuesto] [varchar](50) NULL,
	[Porcentaje_impuesto] [numeric](18, 0) NULL,
	[Moneda] [varchar](50) NULL,
	[Trabajas_con_impuestos] [varchar](50) NULL,
	[Modo_de_busqueda] [varchar](50) NULL,
	[Carpeta_para_copias_de_seguridad] [varchar](max) NULL,
	[Correo_para_envio_de_reportes] [varchar](50) NULL,
	[Ultima_fecha_de_copia_de_seguridad] [varchar](50) NULL,
	[Ultima_fecha_de_copia_date] [datetime] NULL,
	[Frecuencia_de_copias] [int] NULL,
	[Estado] [varchar](50) NULL,
	[Tipo_de_empresa] [varchar](50) NULL,
	[Pais] [varchar](max) NULL,
	[Redondeo_de_total] [varchar](50) NULL,
 CONSTRAINT [PK_EMPRESA] PRIMARY KEY CLUSTERED 
(
	[Id_empresa] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[GASTOSVARIOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[GASTOSVARIOS](
	[Idgasto] [int] IDENTITY(1,1) NOT NULL,
	[Fecha_del_Gasto] [datetime] NULL,
	[Nro_Comprobante] [varchar](50) NULL,
	[Tipo_de_Comprobante] [varchar](50) NULL,
	[Importe] [numeric](18, 2) NULL,
	[Descripcion] [varchar](500) NULL,
	[Id_concepto] [int] NULL,
	[Id_usuario] [int] NULL,
	[TIPO] [varchar](50) NULL,
	[Id_caja] [int] NULL,
 CONSTRAINT [PK_GASTOSVARIOS] PRIMARY KEY CLUSTERED 
(
	[Idgasto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Grupo_de_Productos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Grupo_de_Productos](
	[Idline] [int] IDENTITY(1,1) NOT NULL,
	[Linea] [varchar](50) NULL,
	[Por_defecto] [varchar](50) NULL,
 CONSTRAINT [PK_linea] PRIMARY KEY CLUSTERED 
(
	[Idline] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[HORARIOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[HORARIOS](
	[Id_horarios] [int] IDENTITY(1,1) NOT NULL,
	[Cargo] [varchar](50) NULL,
	[Horas_laborales_diarias] [numeric](18, 1) NULL,
	[Costo_hora_normal] [numeric](18, 2) NULL,
	[Costo_hora_extra] [numeric](18, 2) NULL,
	[Horas_libres_diarias] [numeric](18, 1) NULL,
	[lunes] [int] NULL,
	[martes] [int] NULL,
	[miercoles] [int] NULL,
	[jueves] [int] NULL,
	[viernes] [int] NULL,
	[sabado] [int] NULL,
	[domingo] [int] NULL,
 CONSTRAINT [PK_HORARIOS] PRIMARY KEY CLUSTERED 
(
	[Id_horarios] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[INGRESOSVARIOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING OFF
GO
CREATE TABLE [dbo].[INGRESOSVARIOS](
	[Idgasto] [int] IDENTITY(1,1) NOT NULL,
	[Fecha_del_Gasto] [datetime] NULL,
	[Nro_Comprobante] [varchar](50) NULL,
	[Tipo_de_Comprobante] [varchar](50) NULL,
	[Importe] [decimal](18, 2) NULL,
	[Observacion] [varchar](500) NULL,
	[Estado] [varchar](50) NULL,
	[Id_concepto] [int] NULL,
 CONSTRAINT [PK_INGRESOSVARIOS] PRIMARY KEY CLUSTERED 
(
	[Idgasto] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Inicios_de_sesion]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Inicios_de_sesion](
	[Id_inicio_sesion] [int] IDENTITY(1,1) NOT NULL,
	[Id_usuario] [int] NULL,
	[Id_caja] [int] NULL,
 CONSTRAINT [PK_Inicios_de_sesion] PRIMARY KEY CLUSTERED 
(
	[Id_inicio_sesion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[KARDEX]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[KARDEX](
	[Id_kardex] [int] IDENTITY(1,1) NOT NULL,
	[Fecha] [datetime] NULL,
	[Motivo] [varchar](200) NULL,
	[Cantidad] [numeric](18, 0) NULL,
	[Id_producto] [int] NULL,
	[Id_usuario] [int] NULL,
	[Tipo] [varchar](50) NULL,
	[Estado] [varchar](50) NULL,
	[Total]  AS ([Cantidad]*[Costo_unt]),
	[Costo_unt] [numeric](18, 2) NULL,
	[Habia] [numeric](18, 2) NULL,
	[Hay] [numeric](18, 2) NULL,
	[Id_caja] [int] NULL,
 CONSTRAINT [PK_KARDEX] PRIMARY KEY CLUSTERED 
(
	[Id_kardex] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Marcan]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Marcan](
	[Id_marca] [int] IDENTITY(1,1) NOT NULL,
	[S] [varchar](max) NULL,
	[F] [varchar](max) NULL,
	[E] [varchar](max) NULL,
	[FA] [varchar](max) NULL,
 CONSTRAINT [PK_Licencias] PRIMARY KEY CLUSTERED 
(
	[Id_marca] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Monedero_Electronico_del_ahorro]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Monedero_Electronico_del_ahorro](
	[Id_monedero] [int] IDENTITY(1,1) NOT NULL,
	[Puntos_acumulados] [numeric](18, 0) NULL,
	[Id_conversion] [int] NULL,
	[Estado] [varchar](50) NULL,
	[Id_venta] [int] NULL,
 CONSTRAINT [PK_Monedero_Electronico_del_ahorro] PRIMARY KEY CLUSTERED 
(
	[Id_monedero] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MOVIMIENTOCAJA]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MOVIMIENTOCAJA](
	[idmovcaja] [varchar](12) NOT NULL,
	[fechamov] [datetime] NULL,
	[tipomov] [varchar](20) NULL,
	[nombretipomov] [varchar](20) NULL,
	[descripciontipomov] [varchar](120) NULL,
	[totalmov] [real] NULL,
	[movcerrado] [char](2) NULL,
	[estado] [char](1) NULL,
	[mediodepago] [varchar](20) NULL,
	[idcompraventa] [varchar](12) NULL,
	[idusuario] [numeric](18, 0) NULL,
	[idcierrecaja] [varchar](12) NULL
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MOVIMIENTOCAJACIERRE]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[MOVIMIENTOCAJACIERRE](
	[idcierrecaja] [int] IDENTITY(1,1) NOT NULL,
	[fechainicio] [datetime] NULL,
	[fechafin] [datetime] NULL,
	[fechacierre] [datetime] NULL,
	[ingresos] [numeric](18, 2) NULL,
	[egresos] [numeric](18, 2) NULL,
	[Saldo_queda_en_caja] [numeric](18, 2) NULL,
	[Id_usuario] [int] NULL,
	[Total_calculado] [numeric](18, 2) NULL,
	[Total_real] [numeric](18, 2) NULL,
	[Estado] [varchar](50) NULL,
	[Diferencia] [numeric](18, 2) NULL,
	[Id_caja] [int] NULL,
 CONSTRAINT [PK_MOVIMIENTOCAJACIERRE] PRIMARY KEY CLUSTERED 
(
	[idcierrecaja] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OFERTAS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[OFERTAS](
	[Id_oferta] [int] IDENTITY(1,1) NOT NULL,
	[Id_presentacion_fraccionada] [int] NULL,
	[Cantidad_condicional] [numeric](18, 2) NULL,
	[Id_unidad_condicional] [int] NULL,
	[Descuento] [numeric](18, 2) NULL,
 CONSTRAINT [PK_OFERTAS] PRIMARY KEY CLUSTERED 
(
	[Id_oferta] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[permisos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[permisos](
	[Id_Permiso] [int] IDENTITY(1,1) NOT NULL,
	[Id_Usuario] [int] NULL,
	[ventas] [int] NULL,
	[aplicar_descuentos] [int] NULL,
	[Devoluciones] [int] NULL,
	[clientes_proveedores] [int] NULL,
	[productos] [int] NULL,
	[invetarios_kardex] [int] NULL,
	[configuraciones] [int] NULL,
	[usuarios] [int] NULL,
	[reportes] [int] NULL,
	[Manejar_caja] [int] NULL,
	[Herramientas] [int] NULL,
 CONSTRAINT [PK_p] PRIMARY KEY CLUSTERED 
(
	[Id_Permiso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[Producto1]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Producto1](
	[Id_Producto1] [int] IDENTITY(1,1) NOT NULL,
	[Descripcion] [varchar](50) NULL,
	[Imagen] [varchar](50) NULL,
	[Id_grupo] [int] NULL,
	[Usa_inventarios] [varchar](50) NULL,
	[Stock] [varchar](50) NULL,
	[Precio_de_compra] [numeric](18, 2) NULL,
	[Fecha_de_vencimiento] [varchar](50) NULL,
	[Precio_de_venta] [numeric](18, 2) NULL,
	[Codigo] [varchar](50) NULL,
	[Se_vende_a] [varchar](50) NULL,
	[Impuesto] [varchar](50) NULL,
	[Stock_minimo] [numeric](18, 2) NULL,
	[Precio_mayoreo] [numeric](18, 2) NULL,
	[Sub_total_pv]  AS ([Precio_de_venta]-([Precio_de_venta]*[Impuesto])/(100)),
	[Sub_total_pm]  AS ([Precio_mayoreo]-([Precio_mayoreo]*[Impuesto])/(100)),
	[A_partir_de] [numeric](18, 2) NULL,
 CONSTRAINT [PK_Producto1] PRIMARY KEY CLUSTERED 
(
	[Id_Producto1] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[programacion_de_cuotas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[programacion_de_cuotas](
	[Id_Programacion_cuota] [int] IDENTITY(1,1) NOT NULL,
	[Monto_cuota] [decimal](18, 2) NULL,
	[Cuotas] [nchar](10) NULL,
	[Estado] [varchar](50) NULL,
	[Fechas_Programadas] [varchar](50) NULL,
	[Saldo] [decimal](18, 2) NULL,
	[Id_programacion_de_cuota_padre] [int] NULL,
 CONSTRAINT [PK_programacion_de_cuotas] PRIMARY KEY CLUSTERED 
(
	[Id_Programacion_cuota] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PROGRAMACION_DE_CUOTAS_PADRE]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PROGRAMACION_DE_CUOTAS_PADRE](
	[Id_programacion_de_cuota_padre] [int] IDENTITY(1,1) NOT NULL,
	[Monto_total] [numeric](18, 2) NULL,
	[Porcentaje_de_inicial] [varchar](50) NULL,
	[Monto_inicial] [numeric](18, 2) NULL,
	[Total_a_financiar] [numeric](18, 2) NULL,
	[Modalidad_de_cuotas] [varchar](50) NULL,
	[Tasa_de_interes_anual] [varchar](50) NULL,
	[Cuotas_totales] [int] NULL,
	[Id_venta] [int] NULL,
	[Valor_final] [numeric](18, 2) NULL,
	[Banco_financiero] [varchar](50) NULL,
	[Bono_de_buen_pagador] [numeric](18, 2) NULL,
	[Estado_de_cobro_de_bono] [varchar](50) NULL,
 CONSTRAINT [PK_PROGRAMACION_DE_CUOTAS_PADRE] PRIMARY KEY CLUSTERED 
(
	[Id_programacion_de_cuota_padre] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PROMOCIONES]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PROMOCIONES](
	[Id_promocion] [int] IDENTITY(1,1) NOT NULL,
	[Id_Producto] [int] NULL,
	[A_partir_de] [numeric](18, 2) NULL,
	[Precio_de_promocion] [numeric](18, 2) NULL,
 CONSTRAINT [PK_PROMOCIONES] PRIMARY KEY CLUSTERED 
(
	[Id_promocion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[Serializacion]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Serializacion](
	[Id_serializacion] [int] IDENTITY(1,1) NOT NULL,
	[Serie] [varchar](50) NULL,
	[Cantidad_de_numeros] [varchar](50) NULL,
	[numerofin] [varchar](50) NULL,
	[Destino] [varchar](50) NULL,
	[Id_tipodoc] [varchar](50) NULL,
	[Por_defecto] [varchar](50) NULL,
 CONSTRAINT [PK_Serializacion] PRIMARY KEY CLUSTERED 
(
	[Id_serializacion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Ticket]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Ticket](
	[Id_ticket] [int] IDENTITY(1,1) NOT NULL,
	[Id_Empresa] [int] NULL,
	[Identificador_fiscal] [varchar](max) NULL,
	[Direccion] [varchar](max) NULL,
	[Provincia_Departamento_Pais] [varchar](max) NULL,
	[Nombre_de_Moneda] [varchar](max) NULL,
	[Agradecimiento] [varchar](max) NULL,
	[pagina_Web_Facebook] [varchar](max) NULL,
	[Anuncio] [varchar](max) NULL,
	[Datos_fiscales_de_autorizacion] [varchar](max) NULL,
	[Por_defecto] [varchar](max) NULL,
 CONSTRAINT [PK_Ticket] PRIMARY KEY CLUSTERED 
(
	[Id_ticket] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[USUARIO2]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[USUARIO2](
	[idUsuario] [int] IDENTITY(1,1) NOT NULL,
	[Nombre_y_Apelllidos] [varchar](50) NULL,
	[Login] [varchar](50) NULL,
	[Password] [varchar](50) NULL,
	[Icono] [image] NULL,
	[Nombre_de_icono] [varchar](max) NULL,
	[Correo] [varchar](max) NULL,
	[Rol] [varchar](max) NULL,
	[Estado] [varchar](50) NULL,
 CONSTRAINT [PK_USUARIO2] PRIMARY KEY CLUSTERED 
(
	[idUsuario] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ventas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ventas](
	[idventa] [int] IDENTITY(1,1) NOT NULL,
	[idclientev] [int] NULL,
	[fecha_venta] [datetime] NULL,
	[Numero_de_doc] [varchar](50) NULL,
	[Monto_total] [numeric](18, 2) NULL,
	[Tipo_de_pago] [varchar](50) NULL,
	[Estado] [varchar](50) NULL,
	[IGV] [numeric](18, 1) NULL,
	[Comprobante] [varchar](50) NULL,
	[Id_usuario] [int] NULL,
	[Fecha_de_pago] [varchar](50) NULL,
	[ACCION] [varchar](50) NULL,
	[Saldo] [numeric](18, 2) NULL,
	[Pago_con] [numeric](18, 2) NULL,
	[Porcentaje_IGV] [numeric](18, 2) NULL,
	[Id_caja] [int] NULL,
	[Referencia_tarjeta] [varchar](50) NULL,
	[Vuelto] [numeric](18, 2) NULL,
	[Efectivo] [numeric](18, 2) NULL,
 CONSTRAINT [PK_ventas] PRIMARY KEY CLUSTERED 
(
	[idventa] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
ALTER TABLE [dbo].[ASISTENCIAS]  WITH CHECK ADD  CONSTRAINT [FK_ASISTENCIAS_USUARIO2] FOREIGN KEY([Id_personal])
REFERENCES [dbo].[USUARIO2] ([idUsuario])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[ASISTENCIAS] CHECK CONSTRAINT [FK_ASISTENCIAS_USUARIO2]
GO
ALTER TABLE [dbo].[CONTROL_DE_COBROS]  WITH CHECK ADD  CONSTRAINT [FK_CONTROL_DE_COBROS_ventas] FOREIGN KEY([Id_venta])
REFERENCES [dbo].[ventas] ([idventa])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[CONTROL_DE_COBROS] CHECK CONSTRAINT [FK_CONTROL_DE_COBROS_ventas]
GO
ALTER TABLE [dbo].[DETALLE_CONTROL_DE_COBROS]  WITH CHECK ADD  CONSTRAINT [FK_DETALLE_CONTROL_DE_COBROS_clientes] FOREIGN KEY([Id_cliente])
REFERENCES [dbo].[clientes] ([idclientev])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[DETALLE_CONTROL_DE_COBROS] CHECK CONSTRAINT [FK_DETALLE_CONTROL_DE_COBROS_clientes]
GO
ALTER TABLE [dbo].[DETALLE_CONTROL_DE_COBROS]  WITH CHECK ADD  CONSTRAINT [FK_DETALLE_CONTROL_DE_COBROS_USUARIO2] FOREIGN KEY([Id_usuario])
REFERENCES [dbo].[USUARIO2] ([idUsuario])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[DETALLE_CONTROL_DE_COBROS] CHECK CONSTRAINT [FK_DETALLE_CONTROL_DE_COBROS_USUARIO2]
GO
ALTER TABLE [dbo].[detalle_venta]  WITH CHECK ADD  CONSTRAINT [FK_detalle_venta_ventas1] FOREIGN KEY([idventa])
REFERENCES [dbo].[ventas] ([idventa])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[detalle_venta] CHECK CONSTRAINT [FK_detalle_venta_ventas1]
GO
ALTER TABLE [dbo].[INGRESOSVARIOS]  WITH CHECK ADD  CONSTRAINT [FK_INGRESOSVARIOS_CONCEPTOS] FOREIGN KEY([Id_concepto])
REFERENCES [dbo].[CONCEPTOS] ([Id_concepto])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[INGRESOSVARIOS] CHECK CONSTRAINT [FK_INGRESOSVARIOS_CONCEPTOS]
GO
ALTER TABLE [dbo].[KARDEX]  WITH CHECK ADD  CONSTRAINT [FK_KARDEX_Producto1] FOREIGN KEY([Id_producto])
REFERENCES [dbo].[Producto1] ([Id_Producto1])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[KARDEX] CHECK CONSTRAINT [FK_KARDEX_Producto1]
GO
ALTER TABLE [dbo].[KARDEX]  WITH CHECK ADD  CONSTRAINT [FK_KARDEX_USUARIO2] FOREIGN KEY([Id_usuario])
REFERENCES [dbo].[USUARIO2] ([idUsuario])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[KARDEX] CHECK CONSTRAINT [FK_KARDEX_USUARIO2]
GO
ALTER TABLE [dbo].[MOVIMIENTOCAJACIERRE]  WITH CHECK ADD  CONSTRAINT [FK_MOVIMIENTOCAJACIERRE_Caja] FOREIGN KEY([Id_caja])
REFERENCES [dbo].[Caja] ([Id_Caja])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[MOVIMIENTOCAJACIERRE] CHECK CONSTRAINT [FK_MOVIMIENTOCAJACIERRE_Caja]
GO
ALTER TABLE [dbo].[MOVIMIENTOCAJACIERRE]  WITH CHECK ADD  CONSTRAINT [FK_MOVIMIENTOCAJACIERRE_USUARIO2] FOREIGN KEY([Id_usuario])
REFERENCES [dbo].[USUARIO2] ([idUsuario])
ON DELETE SET NULL
GO
ALTER TABLE [dbo].[MOVIMIENTOCAJACIERRE] CHECK CONSTRAINT [FK_MOVIMIENTOCAJACIERRE_USUARIO2]
GO
ALTER TABLE [dbo].[permisos]  WITH CHECK ADD  CONSTRAINT [FK_permisos_USUARIO2] FOREIGN KEY([Id_Usuario])
REFERENCES [dbo].[USUARIO2] ([idUsuario])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[permisos] CHECK CONSTRAINT [FK_permisos_USUARIO2]
GO
ALTER TABLE [dbo].[programacion_de_cuotas]  WITH CHECK ADD  CONSTRAINT [FK_programacion_de_cuotas_PROGRAMACION_DE_CUOTAS_PADRE] FOREIGN KEY([Id_programacion_de_cuota_padre])
REFERENCES [dbo].[PROGRAMACION_DE_CUOTAS_PADRE] ([Id_programacion_de_cuota_padre])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[programacion_de_cuotas] CHECK CONSTRAINT [FK_programacion_de_cuotas_PROGRAMACION_DE_CUOTAS_PADRE]
GO
ALTER TABLE [dbo].[PROGRAMACION_DE_CUOTAS_PADRE]  WITH CHECK ADD  CONSTRAINT [FK_PROGRAMACION_DE_CUOTAS_PADRE_ventas] FOREIGN KEY([Id_venta])
REFERENCES [dbo].[ventas] ([idventa])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[PROGRAMACION_DE_CUOTAS_PADRE] CHECK CONSTRAINT [FK_PROGRAMACION_DE_CUOTAS_PADRE_ventas]
GO
ALTER TABLE [dbo].[ventas]  WITH CHECK ADD  CONSTRAINT [FK_ventas_USUARIO2] FOREIGN KEY([Id_usuario])
REFERENCES [dbo].[USUARIO2] ([idUsuario])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[ventas] CHECK CONSTRAINT [FK_ventas_USUARIO2]
GO
/****** Object:  StoredProcedure [dbo].[activar_la_escritura_de_mdf]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[activar_la_escritura_de_mdf]
as
ALTER DATABASE   BASEMAGBRI Set Read_write
GO
/****** Object:  StoredProcedure [dbo].[actualizar_estado_de_cuota]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[actualizar_estado_de_cuota]
@idprogramacioncuota as integer

as 
update  programacion_de_cuotas  set Estado='PAGADO'
where Id_Programacion_cuota=@idprogramacioncuota AND Saldo  = 0 AND Estado='DEUDA'

GO
/****** Object:  StoredProcedure [dbo].[actualizar_serializacion_mas_uno]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[actualizar_serializacion_mas_uno]

@idserie as int  ,


@numerofin as numeric(18,0)  
as 

update Serializacion set  numerofin=numerofin+1          
where Id_serializacion=@idserie 


GO
/****** Object:  StoredProcedure [dbo].[actualizar_serializacion_mas_uno_en_Cobros]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[actualizar_serializacion_mas_uno_en_Cobros]

as 

update Serializacion set  numerofin=numerofin+1          
where Id_tipodoc='INGRESO'

GO
/****** Object:  StoredProcedure [dbo].[actualizarestado_venta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[actualizarestado_venta]

@resto as decimal(18,2),
@idventa as int
as
if @resto &lt;&gt;0.00
update ventas  set Estado='DEUDA'
where Estado='DEUDA' and idventa  =@idventa
else
update ventas set Estado='CREDITO PAGADO'
where  Estado='DEUDA' and idventa  =@idventa

GO
/****** Object:  StoredProcedure [dbo].[actualizartotal_venta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[actualizartotal_venta]
@idventa int,
@montototal as numeric(18,1),
@IGV as numeric(18,1)

,@Saldo numeric(18,2),
@Tipo_de_pago varchar(50),
@Estado varchar(50),
@Id_series varchar(50),
@Numero_de_doc varchar(50),
@fecha_venta datetime,
@ACCION varchar(50),
@Fecha_de_pago varchar(50),
@idcliente int,
@Pago_con numeric(18,2),
@Referencia_tarjeta varchar(50)
as

   BEGIN
if EXISTS (SELECT Numero_de_doc  FROM ventas  where Numero_de_doc  = @Numero_de_doc  )
RAISERROR ('Ya existe un Numero de Comprobante con ese Numero y Serie', 16,1)
else
BEGIN
update ventas set Monto_total  =@montototal, IGV=@IGV ,Saldo=@Saldo,
Tipo_de_pago=@Tipo_de_pago 
,Estado=@Estado ,
Comprobante =@Id_series ,
Numero_de_doc=@Numero_de_doc ,
fecha_venta=@fecha_venta ,
ACCION=@ACCION ,Fecha_de_pago =@Fecha_de_pago ,idclientev=@idcliente ,
Pago_con=@Pago_con,Referencia_tarjeta=@Referencia_tarjeta
where idventa =@idventa 
END
END

GO
/****** Object:  StoredProcedure [dbo].[actualizartotal_venta_EFECTIVO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[actualizartotal_venta_EFECTIVO]
@idventa int,
@montototal as numeric(18,1),
@IGV as numeric(18,1)

,@Saldo numeric(18,2),
@Tipo_de_pago varchar(50),
@Estado varchar(50),
@Id_series varchar(50),
@Numero_de_doc varchar(50),
@fecha_venta datetime,
@ACCION varchar(50),
@Fecha_de_pago varchar(50),
@idcliente int,
@Pago_con numeric(18,2),
@Referencia_tarjeta varchar(50),
@Vuelto as numeric(18,2)
as

   BEGIN
if EXISTS (SELECT Numero_de_doc  FROM ventas  where Numero_de_doc  = @Numero_de_doc  )
RAISERROR ('Ya existe un Numero de Comprobante con ese Numero y Serie', 16,1)
else
BEGIN
update ventas set Monto_total  =@montototal, IGV=@IGV ,Saldo=@Saldo,
Tipo_de_pago=@Tipo_de_pago 
,Estado=@Estado ,
Comprobante =@Id_series ,
Numero_de_doc=@Numero_de_doc ,
fecha_venta=@fecha_venta ,
ACCION=@ACCION ,Fecha_de_pago =@Fecha_de_pago ,idclientev=@idcliente ,
Pago_con=@Pago_con,Referencia_tarjeta=@Referencia_tarjeta,
Vuelto=@Vuelto 
where idventa =@idventa 
END
END

GO
/****** Object:  StoredProcedure [dbo].[actualizarventasfacturaspagadas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[actualizarventasfacturaspagadas]
@idcliente as integer

as
update ventas set Estado = 'PAGADO'  
where idclientev=@idcliente 




GO
/****** Object:  StoredProcedure [dbo].[aplicar_precio_mayoreo]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[aplicar_precio_mayoreo]
@Id_producto  int

,@Id_venta  as int   	

as 

 DECLARE @APARTIR_DE AS numeric(18,2)
  DECLARE @Precio_normal AS numeric(18,2)
  DECLARE @Precio_pormayor AS numeric(18,2)
SET @APARTIR_DE = (SELECT A_partir_de FROM Producto1 WHERE Producto1.Id_Producto1 =@Id_producto)
SET @Precio_normal = (SELECT Precio_de_venta  FROM Producto1 WHERE Producto1.Id_Producto1 =@Id_producto)
SET @Precio_pormayor = (SELECT Precio_mayoreo  FROM Producto1 WHERE Producto1.Id_Producto1 =@Id_producto)
PRINT @APARTIR_DE
PRINT @Precio_normal
PRINT @Precio_pormayor
begin
if EXISTS (SELECT A_partir_de,Id_Producto1   FROM Producto1  where Id_Producto1 =@Id_producto and @APARTIR_DE=0  )
RAISERROR ('Este Producto no Permite el Precio al Mayoreo', 16,1)
else

begin
update detalle_venta  set 
preciounitario=@Precio_pormayor 

where  detalle_venta .Id_producto    =@Id_producto and detalle_venta.idventa=@Id_venta 
end
end
GO
/****** Object:  StoredProcedure [dbo].[aumentar_saldo_a_cliente]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[aumentar_saldo_a_cliente]
@idcliente as integer,
@Saldo numeric(18,2)
          
as 
update clientes set 

          
			Saldo =Saldo+@Saldo 
where idclientev =@idcliente 




GO
/****** Object:  StoredProcedure [dbo].[aumentar_stock]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[aumentar_stock]
@Id_presentacionfraccionada as INT,
@cantidad as decimal (18,2)

as
update Producto1   set Stock=Stock+@cantidad where Id_Producto1  =@Id_presentacionfraccionada AND Usa_inventarios ='SI'


GO
/****** Object:  StoredProcedure [dbo].[aumentar_stock_en_detalle_de_venta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[aumentar_stock_en_detalle_de_venta]
@Id_presentacionfraccionada as varchar(50),
@cantidad as decimal (18,2)

as
update detalle_venta   set Stock=Stock+@cantidad where Id_producto   =@Id_presentacionfraccionada AND Stock  &lt;&gt;'Ilimitado' AND Estado ='EN ESPERA'

GO
/****** Object:  StoredProcedure [dbo].[aumentar_stock_y_editar_precios]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[aumentar_stock_y_editar_precios]
@Id_presentacionfraccionada as INT,
@cantidad as decimal (18,2), 
@Precio_de_compra numeric(18,2),        
@Precio_de_venta numeric(18,2),       
@Precio_mayoreo numeric(18,2)
as
update Producto1   set Stock=Stock+@cantidad,Precio_de_compra =@Precio_de_compra ,
Precio_de_venta=@Precio_de_venta, Precio_mayoreo=@Precio_mayoreo  where Id_Producto1  =@Id_presentacionfraccionada AND Usa_inventarios ='SI'


GO
/****** Object:  StoredProcedure [dbo].[AUTORIZAR_A_USUARIOS_PARA_QUE_PROPIETARIO_DE_BASE_DE_DATOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[AUTORIZAR_A_USUARIOS_PARA_QUE_PROPIETARIO_DE_BASE_DE_DATOS]
AS
Alter authorization on database::BASEUP to peruinka
GO
/****** Object:  StoredProcedure [dbo].[backup_base]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[backup_base]
@ruta as varchar(max)
as
BACKUP DATABASE [BASEADA]
TO DISK =N'C:\BASE_MAESTRA_PERUINKA_INDUSTRIAS\BASE\BASEADA.bak'
WITH DESCRIPTION =N'respaldo de la base de datos de BASEADA',
NOFORMAT,
INIT,
NAME=N'BASEADA',
SKIP,
NOREWIND,
NOUNLOAD,
STATS=10,
CHECKSUM
GO
/****** Object:  StoredProcedure [dbo].[Buscar__id_cajas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[Buscar__id_cajas]
@Caja varchar(50)
as
select * from Caja 
where Descripcion =@Caja
order by Id_Caja desc
GO
/****** Object:  StoredProcedure [dbo].[buscar_ASISTENCIAS_por_id]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[buscar_ASISTENCIAS_por_id]
--declare @fecha_sistema date set @fecha_sistema = (SELECT GETDATE())
@letra int
AS 

SELECT        *
FROM            dbo.ASISTENCIAS 						 
WHEre Id_personal=@letra AND Estado='ENTRADA'


GO
/****** Object:  StoredProcedure [dbo].[buscar_ASISTENCIAS_por_id_para_horas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[buscar_ASISTENCIAS_por_id_para_horas]
@letra int
AS 
declare @fecha_sistema date set @fecha_sistema = (SELECT GETDATE())
SELECT        *
FROM            dbo.ASISTENCIAS 						 
WHEre Id_personal=@letra and convert(date,Fecha_entrada)=@fecha_sistema 


GO
/****** Object:  StoredProcedure [dbo].[buscar_cliente_Form]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_cliente_Form]

@letra VARCHAR(50)
AS BEGIN
SELECT       top  10 idclientev, Nombre, Direccion_para_factura as Direccion, Ruc,  movil as Celular
                , Estado 
FROM            dbo.clientes 
WHEre Nombre  LIKE  '%' + @letra+'%' and Cliente  ='SI' 
END
GO
/****** Object:  StoredProcedure [dbo].[buscar_cliente_POR_nombre_PARA_COBROS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_cliente_POR_nombre_PARA_COBROS]

@letra VARCHAR(50)
AS BEGIN
SELECT       dbo.clientes .Nombre ,dbo.clientes.idclientev ,Saldo 
FROM            clientes 
WHEre Nombre  LIKE  '%' + @letra+'%' and Cliente  ='SI' and Estado ='ACTIVO'
END

GO
/****** Object:  StoredProcedure [dbo].[buscar_cliente_POR_nombre_PARA_COMPRAS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_cliente_POR_nombre_PARA_COMPRAS]

@letra VARCHAR(50)
AS BEGIN
SELECT       dbo.clientes .Nombre ,dbo.clientes.idclientev 
FROM            clientes 
WHEre Nombre  LIKE  '%' + @letra+'%' and Proveedor ='SI' 
END

GO
/****** Object:  StoredProcedure [dbo].[buscar_cliente_POR_nombre_PARA_PAGOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_cliente_POR_nombre_PARA_PAGOS]

@letra VARCHAR(50)
AS BEGIN
SELECT       dbo.clientes .Nombre ,dbo.clientes.idclientev ,Saldo 
FROM            clientes 
WHEre Nombre  LIKE  '%' + @letra+'%' and Proveedor   ='SI' and Estado ='ACTIVO'
END

GO
/****** Object:  StoredProcedure [dbo].[buscar_cliente_POR_nombre_PARA_VENTAS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_cliente_POR_nombre_PARA_VENTAS]

@letra VARCHAR(50)
AS BEGIN
SELECT        DBO.clientes.Nombre ,DBO.clientes.idclientev  
FROM            clientes 

WHEre Nombre  LIKE  '%' + @letra+'%' and Cliente='SI'  
END
GO
/****** Object:  StoredProcedure [dbo].[buscar_cliente_POR_nombre_PARA_VENTAS_buscador]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_cliente_POR_nombre_PARA_VENTAS_buscador]

@letra VARCHAR(50)
AS BEGIN
SELECT        DBO.clientes.Nombre  ,clientes.idclientev,clientes.Saldo 
 
FROM         clientes 
WHEre Nombre  LIKE  '%' + @letra+'%' and Cliente='SI' 
group by	DBO.clientes.Nombre ,clientes.idclientev,clientes.Saldo 
END


GO
/****** Object:  StoredProcedure [dbo].[buscar_cliente_POR_nombre_PARA_VENTAS_todos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_cliente_POR_nombre_PARA_VENTAS_todos]

@letra VARCHAR(50)
AS BEGIN
SELECT        DBO.clientes.Nombre ,DBO.clientes.idclientev ,Direccion_para_factura  ,movil  ,Ruc
FROM         clientes
WHEre Nombre+movil +Direccion_para_factura   LIKE  '%' + @letra+'%' and Cliente='SI'AND Estado ='ACTIVO' ORDER BY idclientev desc
END
GO
/****** Object:  StoredProcedure [dbo].[buscar_cobros_x_vendedor_y_fecha]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[buscar_cobros_x_vendedor_y_fecha]
@idvendedor as int,
@fecha as date

as
SELECT       sum(DETALLE_CONTROL_DE_COBROS.Pago_realizado ) as TOTAL
						
FROM            DETALLE_CONTROL_DE_COBROS  
where Id_usuario =@idvendedor AND CONVERT(DATE,Fecha_que_pago )=@fecha 
GO
/****** Object:  StoredProcedure [dbo].[BUSCAR_CONCEPTOS_EN_GASTOS_VARIOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[BUSCAR_CONCEPTOS_EN_GASTOS_VARIOS]
@letra VARCHAR(50)
AS BEGIN
SELECT        dbo.CONCEPTOS.Id_concepto, dbo.CONCEPTOS.Descripcion AS Concepto 
                      
FROM            dbo.CONCEPTOS 
						 WHERE CONCEPTOS.Descripcion   LIKE  '%' + @letra+'%' 
						 END

GO
/****** Object:  StoredProcedure [dbo].[buscar_creditos_x_vendedor_y_fecha]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_creditos_x_vendedor_y_fecha]
@idvendedor as int,
@fecha as date

as
SELECT       sum(ventas.Saldo ) as TOTAL
	FROM           
                         dbo.ventas 
						

     
where Id_usuario =@idvendedor AND CONVERT(DATE,ventas.fecha_venta   )=@fecha and
ventas.Estado='DEUDA' AND  ventas.Tipo_de_pago='CREDITO'
GO
/****** Object:  StoredProcedure [dbo].[buscar_Empresa]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_Empresa]
@letra varchar(50)
as
select LOGO, Nombre_Empresa as Empresa ,(Impuesto + ' ('+  CONVERT(VARCHAR(50),Porcentaje_impuesto) + ')') Impuesto ,Moneda , Id_empresa AS OKA ,Id_empresa  
,Porcentaje_impuesto  ,Impuesto ,Trabajas_con_impuestos,Modo_de_busqueda 
from Empresa
where EMPRESA.Nombre_Empresa =@letra

GO
/****** Object:  StoredProcedure [dbo].[Buscar_id_USUARIOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[Buscar_id_USUARIOS]
@Nombre_y_Apelllidos varchar(50)
as
select * from USUARIO2 
where Nombre_y_Apelllidos =@Nombre_y_Apelllidos
order by idUsuario desc

GO
/****** Object:  StoredProcedure [dbo].[buscar_linea]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_linea]
@linea as varchar(50)
as begin
select * from linea Where Linea LIKE @linea+'%'
end





GO
/****** Object:  StoredProcedure [dbo].[buscar_MOVIMIENTOS_DE_KARDEX]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[buscar_MOVIMIENTOS_DE_KARDEX]
@idProducto int
AS BEGIN
SELECT       KARDEX.Fecha ,Producto1.Descripcion ,KARDEX.Motivo as Movimiento, KARDEX.Habia ,KARDEX.Tipo ,KARDEX.Cantidad ,KARDEX.Hay ,USUARIO2.Nombre_y_Apelllidos as Cajero ,Grupo_de_Productos.Linea as Categoria
,EMPRESA.Nombre_Empresa,EMPRESA.Logo 
FROM            dbo.KARDEX INNER JOIN Producto1 on Producto1.Id_Producto1=KARDEX.Id_producto inner join USUARIO2 on USUARIO2.idUsuario =KARDEX.Id_usuario 
               cross join EMPRESA
			INNER JOIN Grupo_de_Productos on
Grupo_de_Productos.Idline=Producto1.Id_grupo
						 
WHEre Producto1.Id_Producto1=@idProducto   order by KARDEX.Fecha Desc

END
GO
/****** Object:  StoredProcedure [dbo].[buscar_MOVIMIENTOS_DE_KARDEX_filtros ]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[buscar_MOVIMIENTOS_DE_KARDEX_filtros ]
@fecha date,
@tipo varchar(50),
@Id_usuario int 
AS BEGIN
SELECT       KARDEX.Fecha ,Producto1.Descripcion ,KARDEX.Motivo as Movimiento, KARDEX.Habia ,KARDEX.Tipo ,KARDEX.Cantidad ,KARDEX.Hay ,USUARIO2.Nombre_y_Apelllidos as Usuario ,Producto1.Linea as Categoria
,USUARIO2.idUsuario,@fecha as Fecha_consulta, @tipo as Tipo_consulta, EMPRESA.Nombre_Empresa ,EMPRESA.Logo 
 FROM            dbo.KARDEX INNER JOIN Producto1 on Producto1.Id_Producto1=KARDEX.Id_producto inner join USUARIO2 on USUARIO2.idUsuario =KARDEX.Id_usuario 
         
						 CROSS JOIN EMPRESA 
WHEre KARDEX.Id_usuario =@Id_usuario and (KARDEX.Tipo=@tipo or @tipo ='-Todos-') and convert(date,KARDEX.Fecha) =convert(date,@fecha )
END

GO
/****** Object:  StoredProcedure [dbo].[buscar_MOVIMIENTOS_DE_KARDEX_filtros_acumulado]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[buscar_MOVIMIENTOS_DE_KARDEX_filtros_acumulado]
@fecha date,
@tipo varchar(50),
@Id_usuario int 
AS BEGIN
SELECT     Producto1.Descripcion ,KARDEX.Tipo ,sum (KARDEX.Cantidad) Cantidad_Total ,@fecha as fecha, USUARIO2.Nombre_y_Apelllidos,@tipo as Tipo_consultado
 FROM            dbo.KARDEX INNER JOIN Producto1 on Producto1.Id_Producto1=KARDEX.Id_producto inner join USUARIO2 on USUARIO2.idUsuario =KARDEX.Id_usuario 
         
				 
WHEre KARDEX.Id_usuario =@Id_usuario and (KARDEX.Tipo=@tipo or @tipo ='-Todos-') and convert(date,KARDEX.Fecha) =convert(date,@fecha )
group by Producto1.Descripcion,KARDEX.Tipo,USUARIO2.Nombre_y_Apelllidos
ORDER BY sum (KARDEX.Cantidad) DESC
END
GO
/****** Object:  StoredProcedure [dbo].[buscar_producto_por_descripcion]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[buscar_producto_por_descripcion]
@letra VARCHAR(50)
AS BEGIN
select top 10 Id_Producto1,Codigo , Grupo_de_Productos.Linea as Grupo,Descripcion ,Impuesto,Usa_inventarios ,Precio_de_compra AS P_Compra,Precio_mayoreo as P_mayoreo,Se_vende_a as Se_vende_por,Stock_minimo ,Fecha_de_vencimiento as F_vencimiento ,Stock,Precio_de_venta as P_venta 
,Grupo_de_Productos.Idline,A_partir_de 

FROM            dbo.Producto1 
INNER JOIN Grupo_de_Productos on
Grupo_de_Productos.Idline=Producto1.Id_grupo
              
WHEre (dbo.Producto1.Descripcion)+Codigo +Grupo_de_Productos.Linea   LIKE  '%' + @letra+'%' ORDER BY DBO.Producto1.Descripcion  asc
 
END
GO
/****** Object:  StoredProcedure [dbo].[BUSCAR_PRODUCTOS_KARDEX]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[BUSCAR_PRODUCTOS_KARDEX]

@letrab VARCHAR(50)
AS BEGIN
SELECT       top 10 Id_Producto1, (Descripcion) AS Descripcion, Imagen, Grupo_de_Productos.Linea, Usa_inventarios, Stock, Precio_de_compra, Fecha_de_vencimiento, Precio_de_venta, Codigo, Se_vende_a, Impuesto, Stock_minimo, Precio_mayoreo, Sub_total_pv, 
                         Sub_total_pm
FROM            dbo.Producto1 
                      	INNER JOIN Grupo_de_Productos on
Grupo_de_Productos.Idline=Producto1.Id_grupo
  
						 where  (Descripcion+Grupo_de_Productos.Linea  + Codigo) LIKE  '%' + @letrab+'%' and Usa_inventarios ='SI'
end 

GO
/****** Object:  StoredProcedure [dbo].[BUSCAR_PRODUCTOS_oka]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[BUSCAR_PRODUCTOS_oka]

@letrab VARCHAR(50)
AS BEGIN
SELECT      TOP 10  Id_Producto1,(Descripcion+' /Precio: '+EMPRESA.Moneda   +' '+ convert(varchar(50),Precio_de_venta)  +' /Codigo: '+ Codigo  ) AS Descripcion, Imagen, Grupo_de_Productos.Linea as Grupo, Usa_inventarios, Stock, Precio_de_compra, Fecha_de_vencimiento, Precio_de_venta, Codigo, Se_vende_a, producto1.Impuesto, Stock_minimo, Precio_mayoreo, Sub_total_pv, 
                         Sub_total_pm,Descripcion as Descripcion2,A_partir_de  
FROM            dbo.Producto1  cross join EMPRESA 
INNER JOIN Grupo_de_Productos on
Grupo_de_Productos.Idline=Producto1.Id_grupo
                      
  
						 where  (Descripcion+' /Precio: '+EMPRESA.Moneda   +' '+ convert(varchar(50),Precio_de_venta)  +' /Codigo: '+ Codigo  ) LIKE  '%' + @letrab+'%' 
end  
GO
/****** Object:  StoredProcedure [dbo].[BUSCAR_PRODUCTOS_oka_por_teclado]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[BUSCAR_PRODUCTOS_oka_por_teclado]

@letrab VARCHAR(50)
AS BEGIN
SELECT        Id_Producto1, (Descripcion+ Codigo  ) AS Descripcion, Imagen, Grupo_de_Productos.Linea, Usa_inventarios, Stock, Precio_de_compra, Fecha_de_vencimiento, Precio_de_venta, Codigo, Se_vende_a, Impuesto, Stock_minimo, Precio_mayoreo, Sub_total_pv, 
                         Sub_total_pm
FROM            dbo.Producto1 
                      
  INNER JOIN Grupo_de_Productos on
Grupo_de_Productos.Idline=Producto1.Id_grupo
						 where  (Descripcion+Codigo ) LIKE  '%' + @letrab+'%' 
end 
GO
/****** Object:  StoredProcedure [dbo].[buscar_productos_vencidos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_productos_vencidos]
@letra as varchar(50)
as

select Id_Producto1,Codigo ,Descripcion 

,Fecha_de_vencimiento as F_vencimiento ,Stock,empresa.Nombre_Empresa,empresa.Logo
,datediff(day,Fecha_de_vencimiento,CONVERT(DATE,GETDATE ()))as [Dias Vencidos] from Producto1
cross join EMPRESA 
where   Descripcion +codigo LIKE  '%' + @letra+'%' and Fecha_de_vencimiento &lt;&gt;'NO APLICA' AND Fecha_de_vencimiento &lt;= CONVERT(DATE,GETDATE ()) 
order by (datediff(day,Fecha_de_vencimiento,CONVERT(DATE,GETDATE ()))) asc

GO
/****** Object:  StoredProcedure [dbo].[buscar_proveedor_Form]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_proveedor_Form]

@letra VARCHAR(50)
AS BEGIN
SELECT        top 10 idclientev, Nombre, Direccion_para_factura as Direccion, Ruc,  movil as Celular
                , Estado 
FROM            dbo.clientes 
WHEre Nombre  LIKE  '%' + @letra+'%' and Proveedor   ='SI' 
END
GO
/****** Object:  StoredProcedure [dbo].[buscar_proveedor_POR_nombre]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_proveedor_POR_nombre]

@letra VARCHAR(50)
AS BEGIN
SELECT   Nombre as Cliente , idclientev 
    
FROM   clientes        
                        
WHEre Nombre  LIKE  '%' + @letra+'%' and Proveedor ='SI'
END


GO
/****** Object:  StoredProcedure [dbo].[buscar_PROVEEDOR_POR_nombre_PARA_VENTAS_todos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_PROVEEDOR_POR_nombre_PARA_VENTAS_todos]

@letra VARCHAR(50)
AS BEGIN
SELECT        DBO.clientes.Nombre ,DBO.clientes.idclientev  ,movil  
FROM         clientes
WHEre Nombre+movil   LIKE  '%' + @letra+'%' and Proveedor ='SI' AND Estado ='ACTIVO'  ORDER BY idclientev desc
END
GO
/****** Object:  StoredProcedure [dbo].[buscar_Tipo_de_documentos_para_insertar_en_ventas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_Tipo_de_documentos_para_insertar_en_ventas]
@letra VARCHAR(50)
AS BEGIN

SELECT        Serializacion.Id_tipodoc  AS COMPROBANTE , Serializacion.Id_tipodoc  ,dbo.Serializacion.Serie ,dbo.Serializacion.Cantidad_de_numeros  , dbo.Serializacion.numerofin ,dbo.Serializacion.Id_serializacion ,(dbo.Serializacion.Serie  +' - '+ dbo.Serializacion.Cantidad_de_numeros + dbo.Serializacion.numerofin) as serie_completa,Serializacion.Id_tipodoc,Serializacion.Id_tipodoc 
FROM            dbo.Serializacion 
 
 WHEre Serializacion.Id_tipodoc =@letra  and dbo.Serializacion .Destino  ='VENTAS'
 end

GO
/****** Object:  StoredProcedure [dbo].[buscar_USUARIO_por_correo]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROC [dbo].[buscar_USUARIO_por_correo]
@correo VARCHAR(max)

AS 
SELECT        Password 
FROM            dbo.USUARIO2						 
WHEre Correo =@correo
GO
/****** Object:  StoredProcedure [dbo].[buscar_USUARIO_por_DNI]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[buscar_USUARIO_por_DNI]
@letrab VARCHAR(50)
AS BEGIN
select USUARIO2 .idUsuario,USUARIO2.Nombre_y_Apelllidos as [Nombres] ,USUARIO2 .Login as Usuario,USUARIO2.Password 
,Icono ,Nombre_de_icono ,Correo ,rol,Estado  from usuario2						 
WHEre Nombre_y_Apelllidos+login LIKE  '%' + @letrab+'%' 
END

GO
/****** Object:  StoredProcedure [dbo].[buscar_USUARIO_por_nombre]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[buscar_USUARIO_por_nombre]
@letra VARCHAR(50),
@pas varchar(50)
AS BEGIN
SELECT        idUsuario, Nombre_y_Apelllidos,Password 
FROM            dbo.USUARIO2						 
WHEre Nombre_y_Apelllidos LIKE  '%' + @letra+'%' AND Password=@pas
END
GO
/****** Object:  StoredProcedure [dbo].[buscar_ventas_a_credito_con_productos_x_vendedor_y_fecha]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_ventas_a_credito_con_productos_x_vendedor_y_fecha]
@idvendedor as int,
@fecha as date

as
SELECT       sum(ventas.Monto_total) as TOTAL
						
FROM            ventas
where Id_usuario =@idvendedor AND CONVERT(DATE,fecha_venta)=@fecha AND Estado='DEUDA' AND ACCION='VENTA'
GO
/****** Object:  StoredProcedure [dbo].[buscar_ventas_por_fecha]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_ventas_por_fecha]


@fi  date,
@ff date
AS 
SELECT       ventas. idventa , fecha_venta ,Comprobante +' '+Numero_de_doc  ,Monto_total ,USUARIO2.Nombre_y_Apelllidos ,ventas.Pago_con
,Empresa.Moneda + ' '+convert(varchar(50),Ventas.Monto_total)   as TOTAL
,clientes.Nombre as CLiente,ventas.Tipo_de_pago, ventas.Pago_con , ventas. vuelto 
FROM            dbo.ventas 	inner join USUARIO2  on USUARIO2 .idUsuario  =ventas.Id_usuario  	inner join detalle_venta on detalle_venta.idventa=ventas.idventa 				 
CROSS JOIN EMPRESA
inner join clientes on clientes.idclientev =ventas.idclientev

WHEre  convert(date,ventas.fecha_venta) &gt;=@fi and convert(date,ventas.fecha_venta)  &lt;=@ff and
ACCION ='VENTA' AND ventas.Estado='CONFIRMADO'

GO
/****** Object:  StoredProcedure [dbo].[buscar_ventas_por_numero_de_comprobante]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_ventas_por_numero_de_comprobante]


@letra VARCHAR(50)
AS 
SELECT      TOP 10 ventas. idventa , fecha_venta ,Comprobante +' '+Numero_de_doc  ,Monto_total ,USUARIO2.Nombre_y_Apelllidos ,ventas.Pago_con
,Empresa.Moneda + ' '+convert(varchar(50),Ventas.Monto_total)   as TOTAL
,clientes.Nombre as CLiente,ventas.Tipo_de_pago, ventas.Pago_con , ventas. vuelto 
FROM            dbo.ventas 	inner join USUARIO2  on USUARIO2 .idUsuario  =ventas.Id_usuario  	inner join detalle_venta on detalle_venta.idventa=ventas.idventa 				 
CROSS JOIN EMPRESA
inner join clientes on clientes.idclientev =ventas.idclientev
WHEre Comprobante +Numero_de_doc    LIKE  '%' + @letra+'%' and ventas.Monto_total &gt;0 AND ventas.Estado='CONFIRMADO'
AND ACCION ='VENTA' 

GO
/****** Object:  StoredProcedure [dbo].[buscar_ventas_por_numero_usuario]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_ventas_por_numero_usuario]


@letra VARCHAR(50)
AS 

SELECT       ventas. idventa , fecha_venta ,Comprobante +' '+Numero_de_doc  ,Monto_total ,USUARIO2.Nombre_y_Apelllidos ,ventas.Pago_con
,Empresa.Moneda + ' '+convert(varchar(50),Ventas.Monto_total)   as TOTAL
FROM            dbo.ventas 	inner join USUARIO2  on USUARIO2 .idUsuario  =ventas.Id_usuario  	inner join detalle_venta on detalle_venta.idventa=ventas.idventa 				 
CROSS JOIN EMPRESA

WHEre USUARIO2.Nombre_y_Apelllidos    LIKE  '%' + @letra+'%'

GO
/****** Object:  StoredProcedure [dbo].[buscar_ventas_por_numero_usuario_FILTRADO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[buscar_ventas_por_numero_usuario_FILTRADO]


@letra VARCHAR(50)
AS 
SELECT        idventa , fecha_venta ,Comprobante +Numero_de_doc  ,Monto_total ,USUARIO2.Nombre_y_Apelllidos ,ventas.Pago_con
FROM            dbo.ventas 	inner join USUARIO2  on USUARIO2 .idUsuario  =ventas.Id_usuario  					 
WHEre USUARIO2.Nombre_y_Apelllidos =@letra   

GO
/****** Object:  StoredProcedure [dbo].[buscar_ventas_por_usuario_sin_repeticion]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[buscar_ventas_por_usuario_sin_repeticion]

AS
SELECT USUARIO2.idUsuario ,USUARIO2.Nombre_y_Apelllidos,VENTAS.Tipo_de_pago ,ventas.Fecha_de_pago 
FROM            dbo.ventas 	inner join USUARIO2  on USUARIO2 .idUsuario  =ventas.Id_usuario  					 




GO
/****** Object:  StoredProcedure [dbo].[BuscarProducto]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		&lt;Author,,Name&gt;
-- ALTER date: &lt;ALTER Date,,&gt;
-- Description:	&lt;Description,,&gt;
-- =============================================
CREATE PROCEDURE [dbo].[BuscarProducto] 
	-- Add the parameters for the stored procedure here
	@IdProducto int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT *
	FROM Producto
	WHERE IdProducto=@IdProducto
END







GO
/****** Object:  StoredProcedure [dbo].[Cambiar_Password]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[Cambiar_Password]
@login varchar(50),
@Password varchar(50),
@NuevoPassword varchar(50)
as
update USUARIO2 set Password = @NuevoPassword
where Login = @login and Password = @Password





GO
/****** Object:  StoredProcedure [dbo].[CERRAR_CAJA]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[CERRAR_CAJA]
@idcaja as integer,
@fechafin datetime,
@fechacierre datetime


		
as 
update MOVIMIENTOCAJACIERRE set 
Estado ='CAJA CERRADA'
where Id_caja =@idcaja AND Estado='CAJA APERTURADA'




GO
/****** Object:  StoredProcedure [dbo].[cerrar_caja_diaria]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[cerrar_caja_diaria]

	 @fechafin datetime,
	 @fechacierre datetime, 
	  @ingresos numeric(18,2), 
    @egresos numeric(18,2),
	
	@saldo numeric(18,2),
	 @totalcaluclado numeric(18,2),
	  @totalreal real, 
	 @estado as varchar(50),
	 @diferencia numeric(18,2)
as BEGIN
if EXISTS (SELECT idcierrecaja   FROM MOVIMIENTOCAJACIERRE   where idcierrecaja   = idcierrecaja  and Estado='CAJA CERRADA' )
RAISERROR ('YA SE CERRO CAJA DIARIA; COORDINE CON EL ADMINISTRADOR A CARGO', 16,1)
else
BEGIN 

update MOVIMIENTOCAJACIERRE  set 
fechafin=@fechafin ,
fechacierre=@fechacierre,
ingresos=@ingresos,
egresos=@egresos  ,
Saldo_queda_en_caja =@saldo  ,
Total_calculado =@totalcaluclado  ,
Total_real =@totalreal  ,
Estado=@estado, 
Diferencia=@diferencia 
where idcierrecaja  =idcierrecaja


select*from MOVIMIENTOCAJACIERRE 
END
END



GO
/****** Object:  StoredProcedure [dbo].[cerrar_caja_por_turno]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[cerrar_caja_por_turno]
@idcierrecaja as int,
	 @fechafin datetime,
	 @fechacierre datetime, 
	  @ingresos numeric(18,2), 
    @egresos numeric(18,2),	
	@saldo numeric(18,2),
	 @totalcaluclado numeric,
	  @totalreal real, 
	 @estado as varchar(50),
	 @diferencia numeric(18,2),
	 @idusuario as int
as 
update MOVIMIENTOCAJACIERRE  set 
fechafin=@fechafin ,
fechacierre=@fechacierre,
ingresos=@ingresos,
egresos=@egresos  ,
Saldo_queda_en_caja =@saldo  ,
Total_calculado =@totalcaluclado  ,
Total_real =@totalreal  ,
Estado=@estado, 
Diferencia=@diferencia 
where idcierrecaja  =@idcierrecaja






GO
/****** Object:  StoredProcedure [dbo].[cobrar_CONTROL_DE_COBROS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[cobrar_CONTROL_DE_COBROS]
@Id_venta as int,

@Monto numeric(18,2)

as 
update CONTROL_DE_COBROS  set Monto=Monto - @Monto 
where Id_venta    =@Id_venta  

GO
/****** Object:  StoredProcedure [dbo].[contar_detalles_de_venta_en_espera]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[contar_detalles_de_venta_en_espera]
@id_producto int
as
BEGIN
SET NOCOUNT ON;
SELECT DISTINCT      detalle_venta .Stock 
FROM            dbo.detalle_venta INNER JOIN
                         dbo.ventas ON dbo.detalle_venta.idventa = dbo.ventas.idventa 
where  ventas.Monto_total  =0 and detalle_venta.Id_producto =@id_producto
end
GO
/****** Object:  StoredProcedure [dbo].[contar_productos_en_espera]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE proc [dbo].[contar_productos_en_espera]
 as
 SELECT      count(detalle_venta.Id_producto  ) as id_producto
FROM            dbo.ventas inner join detalle_venta on detalle_venta.idventa =detalle_venta.idventa  
             
where  
 ventas.Estado='EN ESPERA'or  ventas.Estado='SIN CONFIRMAR'
GO
/****** Object:  StoredProcedure [dbo].[contar_productos_vencidos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[contar_productos_vencidos]

as

Select
 count(Id_Producto1) id
from Producto1 where Fecha_de_vencimiento &lt;&gt;'NO APLICA' AND Fecha_de_vencimiento &lt;= CONVERT(DATE,GETDATE ())
GO
/****** Object:  StoredProcedure [dbo].[contar_ventas_en_espera]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[contar_ventas_en_espera]

AS 

 SELECT      ventas.idventa , count(detalle_venta.Id_producto  ) as id_producto,Comprobante ,ventas.fecha_venta 
FROM            dbo.ventas inner join detalle_venta on detalle_venta.idventa =detalle_venta.idventa  
     
where  
 ventas.Estado='EN ESPERA'or  ventas.Estado='SIN CONFIRMAR'

 group by ventas.idventa,Comprobante ,ventas.fecha_venta

GO
/****** Object:  StoredProcedure [dbo].[CONTARNOTIFICADOR_COBROS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[CONTARNOTIFICADOR_COBROS]

as 
SELECT       count(idclientev )
FROM          
                         dbo.clientes 
						 WHERE Saldo &gt;0 AND Cliente ='SI'
GO
/****** Object:  StoredProcedure [dbo].[CONTARNOTIFICADOR_PAGOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[CONTARNOTIFICADOR_PAGOS]

as 
SELECT       count(idclientev )
FROM          
                         dbo.clientes 
						 WHERE Saldo &gt;0 AND Proveedor  ='SI'
GO
/****** Object:  StoredProcedure [dbo].[disminuir_stock]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[disminuir_stock]
@Id_presentacionfraccionada as varchar(50),
@cantidad as decimal (18,2)

as
update Producto1  set Stock=Stock-@cantidad where Id_Producto1  =@Id_presentacionfraccionada AND Usa_inventarios ='SI'
and Stock &gt;= @cantidad 


GO
/****** Object:  StoredProcedure [dbo].[disminuir_stock_en_detalle_de_venta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[disminuir_stock_en_detalle_de_venta]
@Id_presentacionfraccionada as varchar(50),
@cantidad as decimal (18,2)

as
update detalle_venta   set Stock=Stock-@cantidad where Id_producto   =@Id_presentacionfraccionada AND Stock  &lt;&gt;'Ilimitado'



GO
/****** Object:  StoredProcedure [dbo].[disminuir_stock_y_editar_precios]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[disminuir_stock_y_editar_precios]
@Id_presentacionfraccionada as varchar(50),
@cantidad as decimal (18,2), 
@Precio_de_compra numeric(18,2),        
@Precio_de_venta numeric(18,2),       
@Precio_mayoreo numeric(18,2)

as
update Producto1  set Stock=Stock-@cantidad,Precio_de_compra =@Precio_de_compra ,
Precio_de_venta=@Precio_de_venta, Precio_mayoreo=@Precio_mayoreo
 where Id_Producto1  =@Id_presentacionfraccionada AND Usa_inventarios ='SI'
and Stock &gt;= @cantidad 


GO
/****** Object:  StoredProcedure [dbo].[disminuirmontocuota]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[disminuirmontocuota]
@Id_control_de_cobros as integer,
@montopagado as decimal(18,2)

as 
update  CONTROL_DE_COBROS   set Monto  =Monto -@montopagado 
where Id_control_de_cobros =@Id_control_de_cobros 

GO
/****** Object:  StoredProcedure [dbo].[disminuirSaldocliente]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[disminuirSaldocliente]
@Id_cliente as integer,
@montopagado as numeric(18,2)

as 
update  clientes    set Saldo   =Saldo  -@montopagado 
where idclientev  =@Id_cliente 

GO
/****** Object:  StoredProcedure [dbo].[editar_ASISTENCIAS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_ASISTENCIAS]
@Id_personal as int,
@Fecha_salida DATETIME,
@Horas NUMERIC(18,2)
as 
update ASISTENCIAS set 
Fecha_salida =@Fecha_salida ,
Horas =@Horas ,
Estado='SALIDA'
where Id_personal   =@Id_personal  AND Estado='ENTRADA' 




GO
/****** Object:  StoredProcedure [dbo].[editar_caja]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_caja]
@idcaja integer,
@descripcion varchar(50)

        
           		
as 
update Caja set 
Descripcion  =@descripcion 

where Id_Caja    =@idcaja    
GO
/****** Object:  StoredProcedure [dbo].[editar_caja_impresoras]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[editar_caja_impresoras]
@idcaja integer,


	   @Impresora_Ticket varchar(max),
	   @Impresora_A4 varchar(max)
        
           		
as 
update Caja set 
 Impresora_Ticket=@Impresora_Ticket
 ,Impresora_A4= @Impresora_A4
where Id_Caja    =@idcaja    


GO
/****** Object:  StoredProcedure [dbo].[editar_categoria]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[editar_categoria]
@idcategoria integer,
@nombrecategoria varchar(50)
as 
update categoria set nombrecategoria = @nombrecategoria 
where idcategoria = @idcategoria 






GO
/****** Object:  StoredProcedure [dbo].[editar_cliente]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_cliente]
@idcliente as integer,
@Nombre varchar(MAX),
           @Direccion_para_factura varchar(MAX),
            @Ruc varchar(MAX),                      
            @movil varchar(50)
		
as 
if EXISTS (SELECT Nombre  FROM clientes  where (Nombre  = @Nombre and idclientev  &lt;&gt;@idcliente ) )

RAISERROR ('YA EXISTE UN REGISTRO  CON ESTE NOMBRE, POR FAVOR INGRESE DE NUEVO', 16,1)
update clientes set 
Nombre =@Nombre ,
          Direccion_para_factura = @Direccion_para_factura ,
           Ruc = @Ruc ,
          
          movil  = @movil 
where idclientev =@idcliente 

GO
/****** Object:  StoredProcedure [dbo].[editar_CONCEPTO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_CONCEPTO]
@Id_concepto as int,
@Descripcion varchar(50)
as 
update CONCEPTOS set 

Descripcion=@Descripcion 

where Id_concepto    =@Id_concepto


GO
/****** Object:  StoredProcedure [dbo].[editar_correo_base]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 create proc [dbo].[editar_correo_base]
 @Correo varchar(max),
@Password varchar(max),
@Estado_De_envio varchar(max)

as

update  Correo_base set Correo =@Correo, Password=@Password,Estado_De_envio=@Estado_De_envio
GO
/****** Object:  StoredProcedure [dbo].[editar_correo_Empresa]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 create proc [dbo].[editar_correo_Empresa]
 @Correo_para_envio_de_reportes varchar(max)

as

update  EMPRESA set Correo_para_envio_de_reportes =@Correo_para_envio_de_reportes 
GO
/****** Object:  StoredProcedure [dbo].[editar_detalle_descuento_por_producto]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_detalle_descuento_por_producto]

  @porcentaje numeric(18,18)
,@Id_detalleventa  as int   	

as 
	update detalle_venta  set 
preciounitario =preciounitario-@porcentaje*preciounitario


where  detalle_venta.iddetalle_venta =@Id_detalleventa  

GO
/****** Object:  StoredProcedure [dbo].[editar_detalle_venta_restar]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_detalle_venta_restar]
@iddetalle_venta  int,
@cantidad as numeric(18, 2),
@Cantidad_mostrada  numeric(18, 2) ,
  @Id_producto varchar(50)    
   ,@Id_venta  as int        		
as 

 DECLARE @APARTIR_DE AS numeric(18,2)
  DECLARE @Precio_normal AS numeric(18,2)
  DECLARE @Precio_pormayor AS numeric(18,2)
SET @APARTIR_DE = (SELECT A_partir_de FROM Producto1 WHERE Producto1.Id_Producto1 =@Id_producto)
SET @Precio_normal = (SELECT Precio_de_venta  FROM Producto1 WHERE Producto1.Id_Producto1 =@Id_producto)
SET @Precio_pormayor = (SELECT Precio_mayoreo  FROM Producto1 WHERE Producto1.Id_Producto1 =@Id_producto)
PRINT @APARTIR_DE
PRINT @Precio_normal
PRINT @Precio_pormayor

begin




 		   BEGIN
if EXISTS (SELECT cantidad ,Id_producto    FROM detalle_venta  where detalle_venta .iddetalle_venta   = @iddetalle_venta  AND cantidad &lt;=0 and detalle_venta .idventa    = @Id_venta )

delete from detalle_venta where detalle_venta .iddetalle_venta  =@iddetalle_venta and detalle_venta .idventa    = @Id_venta
else


update detalle_venta  set 
cantidad    =cantidad -@cantidad ,
Cantidad_mostrada=Cantidad_mostrada-@Cantidad_mostrada
where  detalle_venta .Id_producto    =@Id_producto and detalle_venta.idventa=@Id_venta 
end
end


begin
IF EXISTS (SELECT Descripcion ,cantidad,Id_producto ,idventa FROM detalle_venta  WHERE cantidad&gt;=@APARTIR_DE and detalle_venta.Id_producto =@Id_producto  and detalle_venta.idventa=@Id_venta and detalle_venta .Codigo  &lt;&gt;'0')

	update detalle_venta  set 

preciounitario=@Precio_pormayor

where  detalle_venta .Id_producto    =@Id_producto and detalle_venta.idventa=@Id_venta AND @Precio_pormayor &gt;0 AND @APARTIR_DE &gt;0
	END

	BEGIN
	IF EXISTS (SELECT cantidad  FROM detalle_venta  WHERE cantidad&lt;@APARTIR_DE and Id_producto =@Id_producto and detalle_venta.idventa=@Id_venta and detalle_venta .Codigo  &lt;&gt;'0')

	update detalle_venta  set 

preciounitario=@Precio_normal


where  detalle_venta .Id_producto    =@Id_producto and detalle_venta.idventa=@Id_venta  
	END


	BEGIN
	IF EXISTS (SELECT cantidad  FROM detalle_venta  WHERE  detalle_venta.idventa=@Id_venta and detalle_venta .Codigo  ='0')

	update detalle_venta  set 
codigo=0


where  detalle_venta .codigo    ='0' and detalle_venta.idventa=@Id_venta 
	END

GO
/****** Object:  StoredProcedure [dbo].[editar_detalle_venta_restar_en_Historial]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[editar_detalle_venta_restar_en_Historial]
@Descripcion  varchar(50),
@cantidad as numeric(18, 2),
@Cantidad_mostrada  numeric(18, 2) 
      ,  @idventa int
           		
as 


 		   BEGIN
if EXISTS (SELECT cantidad ,Id_producto    FROM detalle_venta  where detalle_venta .Descripcion   = @Descripcion  AND cantidad &lt;=0 )

delete from detalle_venta where detalle_venta .Descripcion  =@Descripcion 
else
BEGIN
update detalle_venta set 
cantidad    =cantidad -@cantidad,   
Cantidad_mostrada=Cantidad_mostrada-@Cantidad_mostrada
where detalle_venta .Descripcion      =@Descripcion and detalle_venta.idventa=@idventa 
end
end  
GO
/****** Object:  StoredProcedure [dbo].[editar_detalle_venta_sumar]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_detalle_venta_sumar]
@Id_producto  int,
@cantidad as numeric(18, 2),
@Cantidad_mostrada  numeric(18, 2)   
,@Id_venta  as int   	

as 

 DECLARE @APARTIR_DE AS numeric(18,2)
  DECLARE @Precio_normal AS numeric(18,2)
  DECLARE @Precio_pormayor AS numeric(18,2)
SET @APARTIR_DE = (SELECT A_partir_de FROM Producto1 WHERE Producto1.Id_Producto1 =@Id_producto)
SET @Precio_normal = (SELECT Precio_de_venta  FROM Producto1 WHERE Producto1.Id_Producto1 =@Id_producto)
SET @Precio_pormayor = (SELECT Precio_mayoreo  FROM Producto1 WHERE Producto1.Id_Producto1 =@Id_producto)
PRINT @APARTIR_DE
PRINT @Precio_normal
PRINT @Precio_pormayor

begin
update detalle_venta  set 
cantidad    =cantidad +@cantidad ,
Cantidad_mostrada=Cantidad_mostrada+@Cantidad_mostrada
where  detalle_venta .Id_producto    =@Id_producto and detalle_venta.idventa=@Id_venta 
end



	BEGIN
	IF EXISTS (SELECT Descripcion ,cantidad,Id_producto ,idventa FROM detalle_venta  WHERE cantidad&gt;=@APARTIR_DE and detalle_venta.Id_producto =@Id_producto  and detalle_venta.idventa=@Id_venta and detalle_venta .Codigo  &lt;&gt;'0')

	update detalle_venta  set 

preciounitario=@Precio_pormayor

where  detalle_venta .Id_producto    =@Id_producto and detalle_venta.idventa=@Id_venta AND @Precio_pormayor &gt;0 AND @APARTIR_DE &gt;0
	END

	BEGIN
	IF EXISTS (SELECT cantidad  FROM detalle_venta  WHERE cantidad&lt;@APARTIR_DE and Id_producto =@Id_producto and detalle_venta.idventa=@Id_venta and detalle_venta .Codigo  &lt;&gt;'0')

	update detalle_venta  set 

preciounitario=@Precio_normal


where  detalle_venta .Id_producto    =@Id_producto and detalle_venta.idventa=@Id_venta  
	END


	BEGIN
	IF EXISTS (SELECT cantidad  FROM detalle_venta  WHERE  detalle_venta.idventa=@Id_venta and detalle_venta .Codigo  ='0')

	update detalle_venta  set 
codigo=0


where  detalle_venta .codigo    ='0' and detalle_venta.idventa=@Id_venta 
	END

GO
/****** Object:  StoredProcedure [dbo].[editar_dinero_caja_inicial]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[editar_dinero_caja_inicial]
@Id_caja as integer,
@saldo numeric(18,2)


as
update MOVIMIENTOCAJACIERRE  set  Saldo_queda_en_caja =@saldo
where Id_caja =@Id_caja AND Estado ='CAJA APERTURADA'




GO
/****** Object:  StoredProcedure [dbo].[editar_Empresa]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE proc [dbo].[editar_Empresa]
 @Id_empresa int,
@Nombre_Empresa  varchar(50),

@logo as image,
@Impuesto varchar(50),
@Porcentaje_impuesto numeric(18,0),
@Moneda varchar(50),
@Trabajas_con_impuestos VARCHAR(50),
@Modo_de_busqueda VARCHAR(50),

@Carpeta_para_copias_de_seguridad varchar(max),
@Correo_para_envio_de_reportes varchar(50),
@Redondeo varchar(50)
as

update  EMPRESA set Nombre_Empresa=@Nombre_Empresa,Logo=@logo ,Impuesto=@Impuesto ,
Porcentaje_impuesto=@Porcentaje_impuesto,Moneda=@Moneda,Trabajas_con_impuestos=@Trabajas_con_impuestos
,Modo_de_busqueda=@Modo_de_busqueda ,Redondeo_de_total =@Redondeo 
,Carpeta_para_copias_de_seguridad =@Carpeta_para_copias_de_seguridad ,Correo_para_envio_de_reportes =@Correo_para_envio_de_reportes 
where Id_empresa=@Id_empresa 

GO
/****** Object:  StoredProcedure [dbo].[editar_Empresa_copia_de_seguridad]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE proc [dbo].[editar_Empresa_copia_de_seguridad]
 @Ultima_fecha_de_copia_de_seguridad varchar(50),
 @Carpeta_para_copias_de_seguridad varchar(max),
 @Ultima_fecha_de_copia_date datetime
as

update  EMPRESA set Ultima_fecha_de_copia_de_seguridad =@Ultima_fecha_de_copia_de_seguridad ,
Carpeta_para_copias_de_seguridad =@Carpeta_para_copias_de_seguridad ,Ultima_fecha_de_copia_date=@Ultima_fecha_de_copia_date

GO
/****** Object:  StoredProcedure [dbo].[editar_FORMATO_TICKET]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_FORMATO_TICKET]
    	  @Identificador_fiscal varchar(max),
           @Direccion varchar(max),
         
           @Provincia_Departamento_Pais varchar(max),
           @Nombre_de_Moneda varchar(max),
           @Agradecimiento varchar(max),
           @pagina_Web_Facebook varchar(max),
           @Anuncio varchar(max),
	   @Datos_fiscales_de_autorizacion varchar(max),
	   @Por_defecto  varchar(max),
	   @Nombre_Empresa varchar(max),
	   @Logo image
    as
	begin
    update Ticket set  
	Identificador_fiscal=@Identificador_fiscal ,
          Direccion =@Direccion ,    
           Provincia_Departamento_Pais=@Provincia_Departamento_Pais ,
           Nombre_de_Moneda=@Nombre_de_Moneda ,
          Agradecimiento  =@Agradecimiento ,
          pagina_Web_Facebook = @pagina_Web_Facebook ,
         Anuncio =  @Anuncio,
		   Datos_fiscales_de_autorizacion=@Datos_fiscales_de_autorizacion,
		   Por_defecto=@Por_defecto
		   end 

		   begin
		    update EMPRESA  set  
			Nombre_Empresa=@Nombre_Empresa, 
			Logo=@Logo 
			end 
GO
/****** Object:  StoredProcedure [dbo].[editar_frecuencia_y_carpeta_Empresa]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 create proc [dbo].[editar_frecuencia_y_carpeta_Empresa]

@Carpeta_para_copias_de_seguridad varchar(max),
@Frecuencia_de_copias int
as

update  EMPRESA set Carpeta_para_copias_de_seguridad =@Carpeta_para_copias_de_seguridad  ,
Frecuencia_de_copias =@Frecuencia_de_copias 

GO
/****** Object:  StoredProcedure [dbo].[editar_gasto]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_gasto]
@idgasto int,
@fecha datetime,

@observacion varchar(500),
@Nro_Comprobante varchar(50),

@Tipo_de_Comprobante varchar(50),

@importe decimal(18,2),

@Id_concepto int


as 
update GASTOSVARIOS  set Nro_Comprobante=@Nro_Comprobante,
Tipo_de_Comprobante=@Tipo_de_Comprobante,
Fecha_del_Gasto=@fecha 
 ,Id_concepto =@Id_concepto 
  ,Importe =@importe  ,
  Descripcion =@observacion  

where Idgasto  =@idgasto  
GO
/****** Object:  StoredProcedure [dbo].[editar_Grupo]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[editar_Grupo]
@id int,
@Grupo varchar(50)

as
if EXISTS (SELECT Linea FROM Grupo_de_Productos  where Linea = @Grupo and Idline&lt;&gt;@id  )
RAISERROR ('YA EXISTE UN GRUPO CON ESTE NOMBRE, Ingrese de nuevo', 16,1)
else
update  Grupo_de_Productos set Linea=@grupo
where Idline=@id
GO
/****** Object:  StoredProcedure [dbo].[editar_IGV_Empresa]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE proc [dbo].[editar_IGV_Empresa]

@Impuesto varchar(50),
@Porcentaje_impuesto numeric(18,0),

@Trabajas_con_impuestos VARCHAR(50)
as

update  EMPRESA set Impuesto=@Impuesto ,
Porcentaje_impuesto=@Porcentaje_impuesto,Trabajas_con_impuestos=@Trabajas_con_impuestos



GO
/****** Object:  StoredProcedure [dbo].[editar_ingreso]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_ingreso]
@idgasto as int,
@fecha datetime,

@observacion varchar(500),
@Nro_Comprobante varchar(50),

@Tipo_de_Comprobante varchar(50),
@importe decimal(18,2),
@estado as varchar(50),
@Id_concepto INT
as 
update INGRESOSVARIOS  set Estado=@estado ,Nro_Comprobante=@Nro_Comprobante,Tipo_de_Comprobante=@Tipo_de_Comprobante,Fecha_del_Gasto=@fecha  ,Id_concepto =@Id_concepto  ,Importe =@importe  ,Observacion =@observacion  
where Idgasto  =@idgasto  




GO
/****** Object:  StoredProcedure [dbo].[editar_lineas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_lineas]
@Idline as integer,
@Linea varchar(50)
        
           		
as 
update linea set 
Linea =@Linea  

where Idline   =@Idline   


GO
/****** Object:  StoredProcedure [dbo].[editar_logo_de_EMPRESA]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[editar_logo_de_EMPRESA]
@logo image
as 

update EMPRESA  set  Logo   =@logo            




GO
/****** Object:  StoredProcedure [dbo].[EDITAR_marcan]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[EDITAR_marcan]

	@e varchar(max)
    as
	
    UPDATE Marcan SET E=@e
GO
/****** Object:  StoredProcedure [dbo].[EDITAR_marcan_a]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[EDITAR_marcan_a]

	@e varchar(50),
	@fa varchar(50),
	@f  varchar(max),
	@s varchar(50)
    as
	
    UPDATE Marcan SET E=@e, FA=@fa, F=@f 
	where S=@s 
GO
/****** Object:  StoredProcedure [dbo].[editar_Modo_de_busqueda]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_Modo_de_busqueda]
@Modo_de_busqueda as VARCHAR(50)

as 
update EMPRESA  set 
Modo_de_busqueda=@Modo_de_busqueda

GO
/****** Object:  StoredProcedure [dbo].[editar_nombre_de_EMPRESA]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[editar_nombre_de_EMPRESA]
@nombre varchar(50),
@moneda varchar(50)
as 

update EMPRESA   set  Nombre_Empresa  =@nombre  ,Moneda=@moneda  
GO
/****** Object:  StoredProcedure [dbo].[editar_nombre_de_EMPRESA_con_imagen]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[editar_nombre_de_EMPRESA_con_imagen]
@nombre varchar(50),

@Imagen image
as 

update EMPRESA   set  Nombre_Empresa  =@nombre  ,Logo =@Imagen 
GO
/****** Object:  StoredProcedure [dbo].[editar_permisos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_permisos]
   	@Id_Usuario  int ,
	@ventas int ,
	@aplicar_descuentos int ,
	@Devoluciones int ,
	@Manejar_caja int,
	@Herramientas int,
	@clientes_proveedores int,
	@productos int,
	@invetarios_kardex int,
	@configuraciones int,
	@usuarios int,
	@reportes int
AS
update permisos  set 
ventas=@ventas,
	aplicar_descuentos =@aplicar_descuentos  ,
		Devoluciones =@Devoluciones  ,
Manejar_caja =@Manejar_caja ,
	Herramientas =@Herramientas ,
	clientes_proveedores =@clientes_proveedores ,
	productos =@productos ,
	invetarios_kardex =@invetarios_kardex ,
	configuraciones = @configuraciones ,
	usuarios=@usuarios ,
	reportes=@reportes 


where Id_Usuario   =@Id_Usuario 

GO
/****** Object:  StoredProcedure [dbo].[editar_precio_unitario_en_detalle_De_venta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[editar_precio_unitario_en_detalle_De_venta]
@iddetalle_venta int,
@precio numeric(18,2)
as
update  detalle_venta set  preciounitario=@precio
where iddetalle_venta=@iddetalle_venta


GO
/****** Object:  StoredProcedure [dbo].[editar_Producto1]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[editar_Producto1]
@Id_Producto1 int,
 @Descripcion varchar(50),
		    @Imagen varchar(50),			         
         
          @Id_grupo INT,
		  @Usa_inventarios varchar(50),
	  @Stock varchar(50),
           @Precio_de_compra numeric(18,2),
           @Fecha_de_vencimiento varchar(50),
           @Precio_de_venta numeric(18,2),
           @Codigo varchar(50),
           @Se_vende_a varchar(50),
           @Impuesto varchar(50),
           @Stock_minimo numeric(18,2),
           @Precio_mayoreo numeric(18,2)
		 	,@A_partir_de numeric(18,2)
as 

if EXISTS (SELECT Descripcion FROM Producto1  where (Descripcion = @Descripcion and Id_Producto1 &lt;&gt;@Id_Producto1 ) )

RAISERROR ('YA EXISTE UN PRODUCTO  CON ESTE NOMBRE, POR FAVOR INGRESE DE NUEVO', 16,1)

else if EXISTS (SELECT Codigo  FROM Producto1  where (Codigo  = @Codigo  and Id_Producto1 &lt;&gt;@Id_Producto1 ))

RAISERROR ('YA EXISTE UN PRODUCTO  CON ESTE CODIGO, POR FAVOR INGRESE DE NUEVO/ SE GENERARA CODIGO AUTOMATICO', 16,1)

else if EXISTS (SELECT Descripcion,Codigo  FROM Producto1  where (Id_Producto1 =@Id_Producto1 ))

update Producto1 set  

      Descripcion =@Descripcion ,
		  Imagen =  @Imagen ,			         
         
         Id_grupo = @Id_grupo 	,
		  Usa_inventarios =@Usa_inventarios ,
		  Stock = @Stock ,
           Precio_de_compra =@Precio_de_compra ,
        Fecha_de_vencimiento =   @Fecha_de_vencimiento ,
          Precio_de_venta = @Precio_de_venta ,
         Codigo =  @Codigo ,
         Se_vende_a =  @Se_vende_a ,
           Impuesto =@Impuesto,
           Stock_minimo =@Stock_minimo ,
         Precio_mayoreo =  @Precio_mayoreo 
		 	,A_partir_de=@A_partir_de 
where id_Producto1=@Id_Producto1






GO
/****** Object:  StoredProcedure [dbo].[editar_Producto1_SIN_CONTROL_DE_INVENTARIO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[editar_Producto1_SIN_CONTROL_DE_INVENTARIO]
@Id_Producto1 int,
	  @Stock varchar(50),
          
           @Stock_minimo numeric(18,2),
		   @Usa_inventarios varchar(50),
          @Fecha_de_vencimiento varchar(50) 
		 
as 
update Producto1 set  

		  Usa_inventarios =@Usa_inventarios ,
		  Stock = @Stock ,
 
           Stock_minimo =@Stock_minimo 
  ,Fecha_de_vencimiento=@Fecha_de_vencimiento
where id_Producto1=@Id_Producto1
GO
/****** Object:  StoredProcedure [dbo].[editar_saldo_total]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[editar_saldo_total]
@idcliente as integer,
@saldo as numeric(18,2)


as

update clientes  set  Saldo=@saldo
where idclientev=@idcliente 




GO
/****** Object:  StoredProcedure [dbo].[editar_serializacion]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[editar_serializacion]
@serie VARCHAR(50)  ,
@Cantidad_de_numeros AS VARCHAR(50)    ,
@numerofin as varchar(50) ,
@Tipo as varchar(50), 
   @Id_serie as int
as 
update Serializacion set  Serie =@serie   ,Cantidad_de_numeros=@Cantidad_de_numeros ,numerofin=@numerofin   
         ,Id_tipodoc=@Tipo 
where Id_serializacion=@Id_serie 


GO
/****** Object:  StoredProcedure [dbo].[editar_serializacion_POR_DEFECTO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[editar_serializacion_POR_DEFECTO]


   @Id_serie as int
as 

BEGIN
update Serializacion set  Por_defecto  ='-' 
     END


	 BEGIN
	 update Serializacion set  Por_defecto  ='SI'
where Id_serializacion=@Id_serie 

END
GO
/****** Object:  StoredProcedure [dbo].[editar_serializacion_TICKET]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[editar_serializacion_TICKET]

@numeroinicio AS VARCHAR(50)    ,
@numerofin as varchar(50) 


as 
update Serializacion set  Cantidad_de_numeros=@numeroinicio ,numerofin=@numerofin   

where Id_tipodoc ='TICKET'

GO
/****** Object:  StoredProcedure [dbo].[editar_usuario]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[editar_usuario]
@idusuario int,
@nombres varchar(50),

@paswor varchar(50)
,@Icono IMAGE
,
@Nombre_de_icono varchar(max)
,@Correo varchar(max),
@rol as varchar(MAX),
@Login as varchar(50)
as
begin
if EXISTS (SELECT Login,idUsuario FROM USUARIO2 where (Login  = @login  AND idUsuario&lt;&gt;@idUsuario and Estado='ACTIVO') or (Nombre_y_Apelllidos   = @nombres  AND idUsuario&lt;&gt;@idUsuario and Estado='ACTIVO'))
RAISERROR ('Usuario en Uso, usa otro nombre de Usuario por favor', 16,1)
else 

update USUARIO2 set Nombre_y_Apelllidos= @nombres,Password =@paswor , Icono=@Icono ,Nombre_de_icono =@Nombre_de_icono
 ,Correo =@Correo , Rol=@rol , Login =@Login 
 where idUsuario = @idusuario 
 end


GO
/****** Object:  StoredProcedure [dbo].[editar_usuario_solo_nombre]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[editar_usuario_solo_nombre]
@idusuario int,
@nombres varchar(50)
as
update USUARIO2 set Nombre_y_Apelllidos= @nombres
 where idUsuario = @idusuario

GO
/****** Object:  StoredProcedure [dbo].[editar_venta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[editar_venta]
@idventa int,
@montototal as numeric(18,1),
@IGV as numeric(18,1)

as
if @montototal &lt;&gt;0
update ventas set Monto_total  =@montototal, IGV=@IGV 

where idventa =@idventa 
else
begin 
delete
from ventas 
where idventa=@idventa 
end




GO
/****** Object:  StoredProcedure [dbo].[eliminar_caja]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[eliminar_caja]
@id integer
as
delete from Caja   where Id_Caja  =@id 


GO
/****** Object:  StoredProcedure [dbo].[eliminar_categoria]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE proc [dbo].[eliminar_categoria]
@idcategoria integer
as 
delete from categoria where idcategoria=@idcategoria






GO
/****** Object:  StoredProcedure [dbo].[eliminar_cliente]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_cliente]
@idcliente integer
as
update  clientes set  Estado ='ELIMINADO'
where idclientev=@idcliente AND Estado='ACTIVO'

GO
/****** Object:  StoredProcedure [dbo].[eliminar_concepto]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[eliminar_concepto]
@idconcepto integer
as
delete from CONCEPTOS  where Id_concepto =@idconcepto 


GO
/****** Object:  StoredProcedure [dbo].[eliminar_DETALLE_CONTROL_DE_COBROS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[eliminar_DETALLE_CONTROL_DE_COBROS]
@id as int
as
delete from DETALLE_CONTROL_DE_COBROS where Id_detalle_de_control_de_cobros =@id 






GO
/****** Object:  StoredProcedure [dbo].[eliminar_detalle_venta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_detalle_venta]
@iddetalleventa as int
as
delete from detalle_venta where iddetalle_venta=@iddetalleventa 


GO
/****** Object:  StoredProcedure [dbo].[eliminar_Empresa]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_Empresa]
@id_Empresa as int


as

delete from EMPRESA 
where id_Empresa=@id_Empresa





GO
/****** Object:  StoredProcedure [dbo].[eliminar_gasto]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_gasto]
@idgasto integer
as
delete from GASTOSVARIOS  where Idgasto =@idgasto 





GO
/****** Object:  StoredProcedure [dbo].[eliminar_grupos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[eliminar_grupos]
@id int
as


if EXISTS (SELECT Idline FROM Grupo_de_Productos  where Por_defecto = 'SI' AND Idline=@id )
RAISERROR ('Este Grupo no se Permite que sea Eliminado ya que es Eliminarias todos los Productos', 16,1)
else

BEGIN
declare @Id_grupo int 
SET @Id_grupo = (SELECT Idline FROM Grupo_de_Productos  where Por_defecto = 'SI')
  
update Producto1 set Id_grupo=@Id_grupo where Id_grupo=@id
delete from Grupo_de_Productos 
where Idline=@id and Por_defecto &lt;&gt; 'SI'
END
GO
/****** Object:  StoredProcedure [dbo].[eliminar_ingreso]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_ingreso]
@idgasto integer
as
delete from INGRESOSVARIOS  where Idgasto =@idgasto 





GO
/****** Object:  StoredProcedure [dbo].[eliminar_producto]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_producto]
@idproducto  int
as
delete from Producto1  where Id_Producto1 =@idproducto 





GO
/****** Object:  StoredProcedure [dbo].[eliminar_PRODUCTO_DE_KARDEX]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_PRODUCTO_DE_KARDEX]
@id as int
as
delete from KARDEX  where Id_kardex  =@id


GO
/****** Object:  StoredProcedure [dbo].[eliminar_Producto1]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_Producto1]
@id int
as
delete  
from Producto1 

where 
Id_Producto1  =@id



--DELETE TablaConRegistrosAEliminar
       --FROM TablaConRegistrosAEliminar TDel INNER JOIN TablaParaCriterioDeEliminacion TFiltro
       --     ON TDel.idCampo_fk=TFiltro.idCampo_pk
       --WHERE TFiltro.criterio='Valor para filtrar'




GO
/****** Object:  StoredProcedure [dbo].[eliminar_Serializacion]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_Serializacion]
@id integer
as
if EXISTS (SELECT Destino FROM Serializacion  where Destino &lt;&gt;'OTROS' AND ID_SERIALIZACION=@id )
RAISERROR ('Este Comprobante no se Eliminara ya que generaria Error', 16,1)
else
delete from Serializacion   where Id_serializacion   =@id and Destino='OTROS'



GO
/****** Object:  StoredProcedure [dbo].[eliminar_usuario]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_usuario]
@idusuario as int,
@login varchar(50)

as
	   BEGIN
if EXISTS (SELECT Login   FROM USUARIO2  where @login ='admin'  )
RAISERROR ('El Usuario *Admin* es Inborrable, si se borraria Eliminarias el Acceso al Sistema de porvida, Accion Denegada', 16,1)
else
BEGIN
UPDATE USUARIO2  SET Estado ='ELIMINADO'
WHERE idUsuario =@idusuario and Login &lt;&gt;'admin' 
end
end
GO
/****** Object:  StoredProcedure [dbo].[eliminar_venta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_venta]
@idventa as integer 
as
delete from ventas where idventa=@idventa 


GO
/****** Object:  StoredProcedure [dbo].[eliminar_venta__en_cero]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_venta__en_cero]

as
delete from ventas where Monto_total=0

GO
/****** Object:  StoredProcedure [dbo].[eliminar_venta_en_espera_todas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_venta_en_espera_todas]
@Id_caja int
as
delete from ventas WHERE Estado= 'EN ESPERA' and Id_caja =@Id_caja 

GO
/****** Object:  StoredProcedure [dbo].[eliminar_venta_en_historial]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_venta_en_historial]
@Id_venta int
as
delete from ventas where  idventa=@Id_venta  AND Monto_total =0


GO
/****** Object:  StoredProcedure [dbo].[eliminar_venta_incompletas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[eliminar_venta_incompletas]

@idusuario int
as
delete from ventas where  Id_usuario =@idusuario and  Estado ='EN ESPERA'


GO
/****** Object:  StoredProcedure [dbo].[imprimir_inventarios_todos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[imprimir_inventarios_todos]


AS 
SELECT    Codigo ,Descripcion,Precio_de_compra as Costo,Precio_de_venta as [Precio_Venta], Stock, Stock_minimo as [Stock_Minimo]
,Grupo_de_Productos.Linea  AS Categoria ,Precio_de_compra*Stock as Importe,EMPRESA.Nombre_Empresa,EMPRESA.Logo 
FROM         
						 dbo.Producto1 
						  cross join EMPRESA
						  inner join Grupo_de_Productos on Grupo_de_Productos.Idline=Producto1.Id_grupo 
where Producto1.Usa_inventarios ='SI'

GO
/****** Object:  StoredProcedure [dbo].[Insertar_ASISTENCIAS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[Insertar_ASISTENCIAS]
   @Id_personal INT,
          @Fecha_entrada DATETIME,
         @Fecha_salida DATETIME,
           @Estado VARCHAR(50),
          
          @Horas VARCHAR(50)

as

insert into ASISTENCIAS values (   @Id_personal ,
          @Fecha_entrada ,
         @Fecha_salida ,
           @Estado ,
          
          @Horas)



GO
/****** Object:  StoredProcedure [dbo].[Insertar_caja]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[Insertar_caja]

	
	@descripcion varchar(50),


	 @Tema varchar(50),
	  @Serial_PC varchar(50),
	   @Impresora_Ticket varchar(max),
	   @Impresora_A4 varchar(max)
    as
	BEGIN
if EXISTS (SELECT  Descripcion,Serial_PC      FROM Caja    where  Descripcion=@descripcion and Serial_PC =@Serial_PC   )
RAISERROR ('Ya Existe una Caja con ese Nombre ó puede ser que ya se haya creado una Caja para Esta Pc, Ingrese un nombre diferente e intente de Nuevo', 16,1)
else
BEGIN
    INSERT INTO Caja values 
	(@descripcion,@Tema ,@Serial_PC ,@Impresora_Ticket,@Impresora_A4)

	end
	end
GO
/****** Object:  StoredProcedure [dbo].[insertar_categoria]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[insertar_categoria]
@nombrecategoria varchar(50)
as
insert into categoria (nombrecategoria) values (@nombrecategoria)






GO
/****** Object:  StoredProcedure [dbo].[insertar_cliente]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  procedure [dbo].[insertar_cliente]
@Nombre varchar(MAX),
           @Direccion_para_factura varchar(MAX),
            @Ruc varchar(MAX),                      
            @movil varchar(50),               
            @Cliente varchar(50),
            @Proveedor varchar(50),
			@Estado as varchar(50)
		,@Saldo numeric(18,2)
as
		   BEGIN
if EXISTS (SELECT Nombre  FROM clientes  where Nombre  = @Nombre)
RAISERROR ('YA EXISTE UN REGISTRO CON ESE NOMBRE', 16,1)
else
BEGIN
insert into clientes  values 
            (@Nombre
           ,@Direccion_para_factura
           ,@Ruc
           ,@movil     
          
           ,@Cliente
           ,@Proveedor
		   ,@Estado,
		   @Saldo
            )
			end
			end
GO
/****** Object:  StoredProcedure [dbo].[INSERTAR_CLIENTES_FACTURA_PERU]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/**********************************************************************
BASE DE DATOS		:	ERPDHMONT
NOMBRE				:	[Ventas].[USP_MANTENIMIENTO_CLIENTES_BOLETAS]
DESCRIPCION			:   Este procedure de insertar, ACTUALIZAR Y ELIMINAR datos de clientes nuevos que ingresara para
						que pueda imprimir sus boletas						
AUTOR				:	MILTON MORILLO MACHADO
FECHA DE CREACIÓN	:	23.05.2015
FECHA DE MODIFICACION : 
*********************************************************************
*/

CREATE PROCEDURE [dbo].[INSERTAR_CLIENTES_FACTURA_PERU]
@CLIE_CODIGO varchar(8),
@TPDC_CODIGO VARCHAR(1),
@UBDS_CODIGO VARCHAR(6),
@CLIE_NOMBRES VARCHAR(150),
@CLIE_APELLIDOPATERNO VARCHAR(100),
@CLIE_APELLIDOMATERNO VARCHAR(100),
@CLIE_NRODOCUMENTO VARCHAR(18),
@CLIE_SEXO VARCHAR(15),
@CLIE_FECHANACIMIENTO DATETIME,
@CLIE_ESTADOCIVIL VARCHAR(25),
@CLIE_DIRECCION VARCHAR(300),
@CLIE_REFERENCIA VARCHAR(300),
@CLIE_TELEFONO VARCHAR(75),
@CLIE_EMAIL VARCHAR(120),
@CLIE_OCUPACION VARCHAR(150),
@CLIE_EMPRESA VARCHAR(100),
@CLIE_ID_OBRA NUMERIC(18,0),
@TIPO INT

AS 

INSERT INTO CLIENTE_FACTURA_PERU
VALUES (@CLIE_CODIGO,@TPDC_CODIGO,0,@UBDS_CODIGO,@CLIE_NOMBRES,@CLIE_APELLIDOPATERNO,@CLIE_APELLIDOMATERNO,@CLIE_NRODOCUMENTO,@CLIE_SEXO,@CLIE_FECHANACIMIENTO,
		@CLIE_ESTADOCIVIL,@CLIE_DIRECCION,@CLIE_REFERENCIA,@CLIE_TELEFONO,@CLIE_EMAIL,@CLIE_OCUPACION,@CLIE_EMPRESA,0,0,0,@CLIE_ID_OBRA,1)

GO
/****** Object:  StoredProcedure [dbo].[insertar_Conceptos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[insertar_Conceptos]
@Descripcion varchar(50)
as 


insert into CONCEPTOS 
values ( 

@Descripcion 
)


GO
/****** Object:  StoredProcedure [dbo].[insertar_CONEXION]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[insertar_CONEXION]

@Data_source_remoto varchar(max)
as
insert into CONEXION  values (@Data_source_remoto)






GO
/****** Object:  StoredProcedure [dbo].[insertar_control_de_cobros]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  procedure [dbo].[insertar_control_de_cobros]

         
            @monto as numeric(18,2) ,
			@Concepto varchar(MAX) ,
			 @Id_venta int    	
as

insert into CONTROL_DE_COBROS  values 
            (
        
            @monto,
			@Concepto ,
           
		    @Id_venta )

GO
/****** Object:  StoredProcedure [dbo].[insertar_correo_base]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[insertar_correo_base]
@Correo varchar(max),
@Password varchar(max),
@Estado_De_envio varchar(max)
as
insert into Correo_base values (@Correo,@Password,@Estado_De_envio)


GO
/****** Object:  StoredProcedure [dbo].[insertar_DETALLE_cierre_de_caja]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[insertar_DETALLE_cierre_de_caja]	
	@fechaini datetime,
	 @fechafin datetime,
	 @fechacierre datetime, 
	  @ingresos numeric(18,2), 
    @egresos numeric(18,2),
	@saldo numeric(18,2),
	@idusuario int,
	 @totalcaluclado numeric(18,2),
	  @totalreal numeric(18,2), 
	 
	 @estado as varchar(50),
	 @diferencia as numeric(18,2)	,
	 @idcierrepadre as int   
  AS BEGIN

if EXISTS (SELECT Estado FROM MOVIMIENTOCAJACIERRE 
 where  MOVIMIENTOCAJACIERRE.Estado='CAJA APERTURADA')
RAISERROR ('Ya Fue Iniciado el Turno de esta Caja', 16,1)
else
BEGIN
    INSERT INTO MOVIMIENTOCAJACIERRE values 
	(@fechaini ,
	 @fechafin ,
	 @fechacierre , 
	  @ingresos , 
    @egresos ,
	@saldo ,
	@idusuario ,
	 @totalcaluclado ,
	  @totalreal , 
	
	 @estado ,
	 @diferencia ,
	 @idcierrepadre )


	 end
	 end

GO
/****** Object:  StoredProcedure [dbo].[insertar_DETALLE_CONTROL_DE_COBROS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  procedure [dbo].[insertar_DETALLE_CONTROL_DE_COBROS]

@Pago_realizado as numeric(18,2),
@Fecha_que_pago as datetime,
@Tipo_de_cobro    as varchar(50) ,
@Detalle as varchar(max)  ,
@idcliente int   
  ,@Id_usuario int  ,
  @Id_caja int        	
as
update Serializacion set  numerofin=numerofin+1   where Id_tipodoc='INGRESO'
declare @comprobante as varchar(max)
set @comprobante = (select numerofin from Serializacion  where Id_tipodoc='INGRESO') 
insert into DETALLE_CONTROL_DE_COBROS  values 
            (
@Pago_realizado ,
@Fecha_que_pago ,
           @Tipo_de_cobro,
		   @Detalle ,@idcliente,@Id_usuario ,@Id_caja ,@comprobante )


GO
/****** Object:  StoredProcedure [dbo].[insertar_DETALLE_CONTROL_DE_pagos_de_proveedores]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  procedure [dbo].[insertar_DETALLE_CONTROL_DE_pagos_de_proveedores]
@Id_control_de_cobros int,
@Pago_realizado as numeric(18,2),
@Fecha_que_pago as datetime
,
@Tipo_de_cobro    as varchar(50)              
            	
as

insert into DETALLE_DE_PAGO_A_PROVEEDORES  values 
            (@Id_control_de_cobros ,
@Pago_realizado ,
@Fecha_que_pago ,
@Tipo_de_cobro
            )


GO
/****** Object:  StoredProcedure [dbo].[insertar_detalle_venta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[insertar_detalle_venta]
@idventa as integer,
@Id_presentacionfraccionada as int,
@cantidad as numeric(18, 2),
@preciounitario as numeric(18, 2),
@moneda as varchar(50),

@unidades as varchar(50),
@Cantidad_mostrada as numeric(18,2),
@Estado as varchar(50),
@Descripcion varchar(50),
@Codigo varchar(50),
@Stock varchar(50),
@Se_vende_a VARCHAR(50),
@Usa_inventarios VARCHAR(50),
@Costo numeric(18,2)
as

 		   BEGIN
if EXISTS (SELECT Id_producto,idventa   FROM detalle_venta inner join Producto1 on Producto1.Id_Producto1=detalle_venta.Id_producto 
  where Producto1. Id_Producto1  = @Id_presentacionfraccionada AND idventa=@idventa  )

  
update detalle_venta set 
cantidad    =cantidad +@cantidad  , 
Cantidad_mostrada=Cantidad_mostrada+@Cantidad_mostrada
where Id_producto =@Id_presentacionfraccionada 


else
BEGIN

insert into detalle_venta 

 values (@idventa,@Id_presentacionfraccionada ,@cantidad,@preciounitario,@moneda,@unidades,@Cantidad_mostrada
,@Estado,@Descripcion,@Codigo,@Stock ,@Se_vende_a ,@Usa_inventarios,@Costo)


END
END

GO
/****** Object:  StoredProcedure [dbo].[insertar_detalle_venta_SERVICIO_PRODUCTO_RAPIDA]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[insertar_detalle_venta_SERVICIO_PRODUCTO_RAPIDA]
@idventa as integer,

@cantidad as numeric(18, 2),
@preciounitario as numeric(18, 2),
@moneda as varchar(50),
@unidades as varchar(50),
@Cantidad_mostrada as numeric(18,2),
@Estado as varchar(50),
@Descripcion varchar(50),
@Codigo varchar(50),
@Stock varchar(50),
@Se_vende_a VARCHAR(50),
@Usa_inventarios VARCHAR(50),
@Costo numeric(18,2)
as
DECLARE @id_producto AS int
SET @id_producto = (SELECT Id_Producto1 FROM Producto1 WHERE Producto1.Descripcion  ='*Generico*')
 		   BEGIN
if EXISTS (SELECT Id_producto,idventa   FROM detalle_venta inner join Producto1 on Producto1.Id_Producto1=detalle_venta.Id_producto 
  where Producto1. Id_Producto1  = @id_producto AND idventa=@idventa  )  
update detalle_venta set 
cantidad    =cantidad +@cantidad  , 
Cantidad_mostrada=Cantidad_mostrada+@Cantidad_mostrada
where Id_producto =@id_producto 
else
BEGIN
insert into detalle_venta 
 values (@idventa,@id_producto ,@cantidad,@preciounitario,@moneda,@unidades,@Cantidad_mostrada
,@Estado,@Descripcion,@Codigo,@Stock ,@Se_vende_a ,@Usa_inventarios,@Costo)
END
END

GO
/****** Object:  StoredProcedure [dbo].[insertar_Empresa]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[insertar_Empresa]

@Nombre_Empresa  varchar(50),

@logo as image,
@Impuesto varchar(50),
@Porcentaje_impuesto numeric(18,0),
@Moneda varchar(50),

@Trabajas_con_impuestos VARCHAR(50),
@Modo_de_busqueda VARCHAR(50),
@Carpeta_para_copias_de_seguridad varchar(max),
@Correo_para_envio_de_reportes varchar(50),
@Ultima_fecha_de_copia_de_seguridad varchar(50),

@Ultima_fecha_de_copia_date datetime,
@Frecuencia_de_copias int,
@Estado varchar(50),
@Tipo_de_empresa varchar(50),
@Pais varchar(max),
@Redondeo_de_total varchar(50)
as 
 BEGIN
if EXISTS (SELECT Nombre_Empresa   FROM EMPRESA   where Nombre_Empresa  = @Nombre_Empresa   )
RAISERROR ('YA EXISTE UNA EMPRESA CON ESE NOMBRE, Ingrese un nombre diferente', 16,1)
else
BEGIN
insert into EMPRESA  
values (@Nombre_Empresa,@logo,@Impuesto,@Porcentaje_impuesto,@Moneda ,@Trabajas_con_impuestos,@Modo_de_busqueda,
@Carpeta_para_copias_de_seguridad,@Correo_para_envio_de_reportes,@Ultima_fecha_de_copia_de_seguridad,
@Ultima_fecha_de_copia_date ,
@Frecuencia_de_copias ,
@Estado ,@Tipo_de_empresa,@Pais,@Redondeo_de_total)

END
END

GO
/****** Object:  StoredProcedure [dbo].[Insertar_FORMATO_TICKET]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[Insertar_FORMATO_TICKET]

  
	  @Identificador_fiscal varchar(max),
           @Direccion varchar(max),
         
           @Provincia_Departamento_Pais varchar(max),
           @Nombre_de_Moneda varchar(max),
           @Agradecimiento varchar(max),
           @pagina_Web_Facebook varchar(max),
           @Anuncio varchar(max),
	   @Datos_fiscales_de_autorizacion varchar(max),
	   @Por_defecto as varchar(max)
	  
    as
	 DECLARE @Id_Empresa int  = (Select Id_empresa from EMPRESA )
    INSERT INTO Ticket values 

	(  
	@Id_Empresa ,
	  @Identificador_fiscal ,
           @Direccion,
         
           @Provincia_Departamento_Pais,
           @Nombre_de_Moneda ,
           @Agradecimiento ,
           @pagina_Web_Facebook ,
           @Anuncio,
	   @Datos_fiscales_de_autorizacion,
	   @Por_defecto )

GO
/****** Object:  StoredProcedure [dbo].[insertar_gasto_sin_comprobante]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[insertar_gasto_sin_comprobante]

@fecha datetime,
@Nro_Comprobante varchar(50),
@Tipo_de_Comprobante varchar(50),
@importe decimal(18,2),
@Descripcion varchar(500),
@Id_concepto int,
@Id_usuario int,
@TIPO VARCHAR(50),
@Id_caja int
as 

insert into GASTOSVARIOS 
values (@fecha,@Nro_Comprobante,@Tipo_de_Comprobante   , @importe,@Descripcion ,@Id_concepto,@Id_usuario,@TIPO,@Id_caja )





GO
/****** Object:  StoredProcedure [dbo].[insertar_Grupo]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[insertar_Grupo]
@Grupo varchar(50),
@Por_defecto varchar(50)
as
if EXISTS (SELECT Linea FROM Grupo_de_Productos  where Linea = @Grupo  )
RAISERROR ('YA EXISTE UN GRUPO CON ESTE NOMBRE, Ingrese de nuevo', 16,1)
else
insert into Grupo_de_Productos  values (@Grupo, @Por_defecto)
GO
/****** Object:  StoredProcedure [dbo].[insertar_HORARIOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create proc [dbo].[insertar_HORARIOS]

           @Cargo varchar(50),
     @Horas_laborales_diarias numeric(18,1)
           ,@Costo_hora_normal numeric(18,2)
           ,@Costo_hora_extra numeric(18,2)
           ,@Horas_libres_diarias numeric(18,1)
           ,@lunes int
           ,@martes int
           ,@miercoles int
           ,@jueves int
           ,@viernes int
           ,@sabado int
           ,@domingo int
		   as
insert into HORARIOS  VALUES(@Cargo ,
           @Horas_laborales_diarias
           , @Costo_hora_normal
           , @Costo_hora_extra
           , @Horas_libres_diarias
           , @lunes
           , @martes
           , @miercoles
           , @jueves
           , @viernes
           , @sabado
           , @domingo)    

GO
/****** Object:  StoredProcedure [dbo].[insertar_ingreso_sin_comprobante]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[insertar_ingreso_sin_comprobante]

@fecha datetime,

@observacion varchar(500),
@Nro_Comprobante varchar(50),

@Tipo_de_Comprobante varchar(50),

@importe decimal(18,2),
@estado as varchar(50),
@Id_concepto int
as 

insert into INGRESOSVARIOS (Estado,Fecha_del_Gasto ,Id_concepto,Importe, Observacion,Nro_Comprobante,Tipo_de_Comprobante)
values (@estado,@fecha,@Id_concepto   , @importe,@observacion ,@Nro_Comprobante,@Tipo_de_Comprobante)





GO
/****** Object:  StoredProcedure [dbo].[insertar_KARDEX_ENTRADA]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[insertar_KARDEX_ENTRADA]                
           @Fecha datetime,
		    @Motivo varchar(200),			         
         
          @Cantidad as numeric(18,0)	,
	
	  @Id_producto int	,
	   @Id_usuario as int,	
	   @Tipo as varchar(50),
	   @Estado varchar(50)	
	   
	    ,
		
	
		@Id_caja int
		  AS 
		  DECLARE @Hay AS numeric(18,2)
		 DECLARE @Habia as numeric(18,2)
		 declare @Costo_unt numeric(18,2)
SET @Hay = (SELECT Stock  FROM Producto1 WHERE Producto1.Id_Producto1   =@Id_producto and Producto1.Usa_inventarios ='SI' )
 SET @Costo_unt = (SELECT Producto1.Precio_de_compra   FROM Producto1 WHERE Producto1.Id_Producto1   =@Id_producto and Producto1.Usa_inventarios ='SI' )
		   
SET @Habia = @Hay-@Cantidad 
		   BEGIN
		   INSERT INTO KARDEX
     VALUES
		    (

        @Fecha ,
		    @Motivo ,			         
         
          @Cantidad 	,

	  @Id_producto 	,
	   @Id_usuario ,	
	   @Tipo,
			
		@Estado ,@Costo_unt, @Habia ,@Hay ,@Id_caja)


	
		END
GO
/****** Object:  StoredProcedure [dbo].[insertar_KARDEX_SALIDA]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[insertar_KARDEX_SALIDA]                
           @Fecha datetime,
		    @Motivo varchar(200),			         
         
          @Cantidad as numeric(18,0)	,
	
	  @Id_producto int	,
	   @Id_usuario as int,	
	   @Tipo as varchar(50),
	   @Estado varchar(50)	
	   
	    ,
		
	
		@Id_caja int
		  AS 
		  DECLARE @Hay AS numeric(18,2)
		 DECLARE @Habia as numeric(18,2)
		 declare @Costo_unt numeric(18,2)
SET @Hay = (SELECT Stock  FROM Producto1 WHERE Producto1.Id_Producto1   =@Id_producto and Producto1.Usa_inventarios ='SI' )
 SET @Costo_unt = (SELECT Producto1.Precio_de_compra   FROM Producto1 WHERE Producto1.Id_Producto1   =@Id_producto and Producto1.Usa_inventarios ='SI' )
		   
SET @Habia = @Hay+@Cantidad 
		   BEGIN
		   INSERT INTO KARDEX
     VALUES
		    (

        @Fecha ,
		    @Motivo ,			         
         
          @Cantidad 	,

	  @Id_producto 	,
	   @Id_usuario ,	
	   @Tipo,
			
		@Estado ,@Costo_unt, @Habia ,@Hay ,@Id_caja)


	
		END
GO
/****** Object:  StoredProcedure [dbo].[Insertar_lic]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[Insertar_lic]

	
	@S varchar(50),
	@F varchar(max),

	 @E varchar(50)
	,@FA DATE
    as
	
    INSERT INTO Marcan values 
	(@S ,
	@F,

	 @E,
	 @FA)
GO
/****** Object:  StoredProcedure [dbo].[insertar_linea]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[insertar_linea]
@Linea varchar(50)

as

insert into linea  values (@Linea)



GO
/****** Object:  StoredProcedure [dbo].[Insertar_marcan]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[Insertar_marcan]

	
	@s varchar(MAX),
	@f varchar(MAX),
	@e varchar(MAX),
	@fa varchar(MAX)
    as
	
    INSERT INTO Marcan values 
	(@s,@f,@e ,@fa)
GO
/****** Object:  StoredProcedure [dbo].[insertar_permisos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  procedure [dbo].[insertar_permisos]
	@Id_Usuario  int ,
	@ventas int ,
	@aplicar_descuentos int ,
	@Devoluciones int ,
	
	@clientes_proveedores int,
	@productos int,
	@invetarios_kardex int,
	@configuraciones int,
	@usuarios int,
	@reportes int,
	@Manejar_caja int,
	@Herramientas int
as
insert into permisos 
 values (	@Id_Usuario  ,
	@ventas,
	@aplicar_descuentos ,
	@Devoluciones  ,

	@clientes_proveedores ,
	@productos,
	@invetarios_kardex ,
	@configuraciones ,
	@usuarios ,
	@reportes ,
	@Manejar_caja,
	@Herramientas 

)


GO
/****** Object:  StoredProcedure [dbo].[insertar_Producto]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[insertar_Producto]   
           --Empezamos a declara primero los parametros para Productos
           @Descripcion varchar(50),
		    @Imagen varchar(50),			         
         
          @Id_grupo as int	,
		  @Usa_inventarios varchar(50),
		   @Stock varchar(50),
           @Precio_de_compra numeric(18,2),
           @Fecha_de_vencimiento varchar(50),
           @Precio_de_venta numeric(18,2),
           @Codigo varchar(50),
           @Se_vende_a varchar(50),
           @Impuesto varchar(50),
           @Stock_minimo numeric(18,2),
           @Precio_mayoreo numeric(18,2)
	,@A_partir_de numeric(18,2),
	--Ahora declaramos los parametros para el Ingreso a Kardex que es donde se controla el Inventario
	@Fecha datetime,
		    @Motivo varchar(200),			               
          @Cantidad as numeric(18,0)	,
	 
	   @Id_usuario as int,	
	   @Tipo as varchar(50),
	   @Estado varchar(50)	,   	   		
		@Id_caja int
		   AS 
		   --Ahora VALIDAMOS para que no se agregen productos con el mismo nombre y codigo de barras
		   BEGIN
if EXISTS (SELECT Descripcion,Codigo  FROM Producto1  where Descripcion = @Descripcion OR Codigo=@Codigo  )
RAISERROR ('YA EXISTE UN PRODUCTO  CON ESTE NOMBRE/CODIGO, POR FAVOR INGRESE DE NUEVO/ SE GENERARA CODIGO AUTOMATICO', 16,1)
else
BEGIN
DECLARE  @Id_producto  INT
		   INSERT INTO Producto1
     VALUES
		    (
           @Descripcion        
           ,@Imagen         
		    ,@Id_grupo 
		,@Usa_inventarios	,
		@Stock ,
           @Precio_de_compra ,
           @Fecha_de_vencimiento ,
           @Precio_de_venta ,
           @Codigo ,
           @Se_vende_a ,
           @Impuesto ,
           @Stock_minimo ,
           @Precio_mayoreo,
		   @A_partir_de
		 )
		 --Ahora Obtenemos el Id del producto que se acaba de ingresar
		    SELECT  @id_producto = scope_identity()
			 --Ahora Obtenemos los datos del producto ingresado para que sean insertados en la Tabla KARDEX
			  DECLARE @Hay AS numeric(18,2)
		 DECLARE @Habia as numeric(18,2)
		 declare @Costo_unt numeric(18,2)
		
       SET @Hay = (SELECT Stock  FROM Producto1 WHERE Producto1.Id_Producto1   =@Id_producto and Producto1.Usa_inventarios ='SI' )
       SET @Costo_unt = (SELECT Producto1.Precio_de_compra   FROM Producto1 WHERE Producto1.Id_Producto1   =@Id_producto and Producto1.Usa_inventarios ='SI' )		   
       SET @Habia = 0
	   --Ahora vamos a saber si el Producto usa Inventarios o no
		  set @Usa_inventarios = (SELECT Usa_inventarios   FROM Producto1 WHERE Producto1.Id_Producto1   =@Id_producto and Producto1.Usa_inventarios ='SI' )
		 --Ahora en caso si Use inventarios Entonces Pasamos a Insertar datos en la Tabla Kardex
		   if @Usa_inventarios ='SI'
		   BEGIN	 
		   INSERT INTO KARDEX
        VALUES
		    (
        @Fecha ,
		    @Motivo ,			                  
          @Cantidad 	,

	  @Id_producto 	,
	   @Id_usuario ,	
	   @Tipo,		
		@Estado ,@Costo_unt, @Habia ,@Hay ,@Id_caja)
		END
		
END
END

GO
/****** Object:  StoredProcedure [dbo].[insertar_Serializacion]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[insertar_Serializacion]

@Serie varchar (50),
@numeroinicio as varchar (50),
@numerofin as varchar (50),
@Destino as varchar(50),
@Id_tipodoc varchar(50)
,@Por_defecto varchar(50)
as BEGIN
if EXISTS (SELECT Id_tipodoc  FROM Serializacion  where  Id_tipodoc= @Id_tipodoc )
RAISERROR ('YA EXISTE ESTE COMPROBANTE INGRESE UNO NUEVO', 16,1)
else
BEGIN
insert into Serializacion  values (@Serie ,
@numeroinicio ,
@numerofin,@Destino ,@Id_tipodoc ,@Por_defecto)

END
END
GO
/****** Object:  StoredProcedure [dbo].[insertar_tipo_de_producto]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[insertar_tipo_de_producto]


@descripcion varchar(50),
@Ventas varchar(50),
@Compras varchar(50),
@Almacen varchar(50),
@Puede_tener_formulaciones varchar(50)  


as

insert into Tipos_De_productos

values (
@descripcion ,
@Ventas,
@Compras ,
@Almacen ,
@Puede_tener_formulaciones     )



GO
/****** Object:  StoredProcedure [dbo].[insertar_usuario]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[insertar_usuario]
@nombres varchar(50),


@Login varchar(50),
@Password varchar(50)
,@Icono image,
@Nombre_de_icono varchar(max)
,@Correo varchar(max),
@Rol varchar(MAX),
@Estado varchar(50)
as 
if EXISTS (SELECT Login FROM USUARIO2 where Login  = @login and Estado='ACTIVO'  )
RAISERROR ('YA EXISTE UN REGISTRO CON ESE USUARIO, POR FAVOR INGRESE DE NUEVO', 16,1)
else
insert into USUARIO2 
values (@nombres, @Login, @Password ,@Icono,@Nombre_de_icono ,@Correo, @Rol ,@Estado)

GO
/****** Object:  StoredProcedure [dbo].[insertar_venta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[insertar_venta]
@idcliente as integer,
@fecha_venta as datetime,

@nume_documento as varchar(50),
@montototal  as numeric(18,2),
@Tipo_de_pago as varchar(50),
@estado as varchar(50),
@IGV as numeric(18, 1),

@Comprobante as VARCHAR(50),
@id_usuario as int,
@Fecha_de_pago as varchar(50),
@ACCION VARCHAR(50),
@Saldo numeric(18,2),
@Pago_con numeric(18,2),
@Porcentaje_IGV numeric(18,2),
@Id_caja int,
@Referencia_tarjeta varchar(50)

as 
declare @vuelto numeric(18,2)
declare @Efectivo numeric(18,2)
declare @id_numero varchar(50)
SET @vuelto =0
SET @Efectivo =0
SET @id_numero= (select max(idventa)+1 from ventas )
insert into ventas 
values (@idcliente,@fecha_venta,@nume_documento ,@montototal ,@Tipo_de_pago,@estado ,@IGV 
,@Comprobante +' '+ @id_numero ,@id_usuario,@Fecha_de_pago,@ACCION ,@Saldo,@Pago_con,@Porcentaje_IGV,@Id_caja,@Referencia_tarjeta,
@vuelto ,@Efectivo)
GO
/****** Object:  StoredProcedure [dbo].[insertar_venta_BASE]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[insertar_venta_BASE]
@idcliente as integer,
@fecha_venta as datetime,

@nume_documento as varchar(50),
@montototal  as numeric(18,2),
@Tipo_de_pago as varchar(50),
@estado as varchar(50),
@IGV as numeric(18, 1),

@Comprobante as VARCHAR(50),

@Fecha_de_pago as varchar(50),
@ACCION VARCHAR(50),
@Saldo numeric(18,2),
@Pago_con numeric(18,2),
@Porcentaje_IGV numeric(18,2),
@Id_caja int,
@Referencia_tarjeta varchar(50)

as
declare @id_usuario as int
declare @vuelto numeric(18,2)
declare @Efectivo numeric(18,2)
SET @vuelto =0
SET @Efectivo =0
SET @id_usuario= (SELECT max (idUsuario)  FROM USUARIO2 )
insert into ventas 
values (@idcliente,@fecha_venta,@nume_documento ,@montototal ,@Tipo_de_pago,@estado ,@IGV 
,@Comprobante,@id_usuario,@Fecha_de_pago,@ACCION ,@Saldo,@Pago_con,@Porcentaje_IGV,@Id_caja,@Referencia_tarjeta,
@vuelto ,@Efectivo)
GO
/****** Object:  StoredProcedure [dbo].[Limpiar_base_De_datos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[Limpiar_base_De_datos]
@ventas int,
@productos int,
@clientes int,
@gastos int,
@movimientos_de_caja int
as
delete from ventas   where @ventas = 1
delete from Producto1   where @productos  = 1
delete from clientes where @clientes  = 1
delete from MOVIMIENTOCAJACIERRE where @movimientos_de_caja = 1
delete from MOVIMIENTOCAJA where @movimientos_de_caja = 1
delete from GASTOSVARIOS where @gastos  = 1

GO
/****** Object:  StoredProcedure [dbo].[ListarCategorias]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[ListarCategorias]
	-- Add the parameters for the stored procedure here
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT *
	FROM Categoria
	ORDER BY nombrecategoria
END





GO
/****** Object:  StoredProcedure [dbo].[mostrar_5_productos_mas_rentables]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_5_productos_mas_rentables]
as
SELECT      TOP 5 convert(varchar(50),convert(numeric(18,0),sum(detalle_venta.Ganancia)) ),Producto1.Descripcion 
FROM            dbo.ventas inner join detalle_venta  ON detalle_venta .idventa =ventas.idventa INNER JOIN
Producto1 ON Producto1.Id_Producto1=detalle_venta.Id_producto 

                       
Group by Producto1.Descripcion  
order by convert(numeric(18,0),sum(detalle_venta.Ganancia))  desc
GO
/****** Object:  StoredProcedure [dbo].[mostrar_5_productos_mas_vendidos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_5_productos_mas_vendidos]
as
SELECT      TOP 5 COUNT(detalle_venta.Id_producto) ,Producto1.Descripcion 
FROM            dbo.ventas inner join detalle_venta  ON detalle_venta .idventa =ventas.idventa INNER JOIN
Producto1 ON Producto1.Id_Producto1=detalle_venta.Id_producto 

                       
Group by detalle_venta.Id_producto  ,Producto1.Descripcion  

GO
/****** Object:  StoredProcedure [dbo].[mostrar_APERTURAs_de_caja_para_cerrar_turno]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_APERTURAs_de_caja_para_cerrar_turno]

@idcierre AS INT
as
SELECT        dbo.MOVIMIENTOCAJACIERRE.*, dbo.USUARIO2.Nombre_y_Apelllidos
FROM            dbo.MOVIMIENTOCAJACIERRE INNER JOIN
                         dbo.USUARIO2 ON dbo.MOVIMIENTOCAJACIERRE.Id_usuario = dbo.USUARIO2.idUsuario
						  where Estado='CAJA APERTURADA' AND dbo.MOVIMIENTOCAJACIERRE.idcierrecaja =@idcierre 

GO
/****** Object:  StoredProcedure [dbo].[mostrar_APERTURAS_DE_CAJA_SEGUN_PARA_CONTROL_DE_ACCESO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_APERTURAS_DE_CAJA_SEGUN_PARA_CONTROL_DE_ACCESO]
@Id_usuario int,
@IDCAJA AS INT
as
SELECT        dbo.MOVIMIENTOCAJACIERRE.*, dbo.USUARIO2.Nombre_y_Apelllidos
FROM            dbo.MOVIMIENTOCAJACIERRE INNER JOIN
                         dbo.USUARIO2 ON dbo.MOVIMIENTOCAJACIERRE.Id_usuario = dbo.USUARIO2.idUsuario
						  where Id_usuario =@Id_usuario and Estado='CAJA APERTURADA' AND Id_caja=@IDCAJA 
GO
/****** Object:  StoredProcedure [dbo].[mostrar_cajas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_cajas]
as
select * from Caja order by Id_Caja desc

GO
/****** Object:  StoredProcedure [dbo].[mostrar_cajas_por_empresa]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_cajas_por_empresa]
@empresa varchar(50),
@ip varchar(50)
as
select Caja.Id_Caja ,Caja.Descripcion
from Caja 
GO
/****** Object:  StoredProcedure [dbo].[mostrar_cajas_por_empresa_por_serial]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[mostrar_cajas_por_empresa_por_serial]



@serial varchar(50)

AS
SELECT Caja.Id_Caja ,Caja.Descripcion ,
Serial_PC from Caja
 where Caja.Serial_PC = @serial 

GO
/****** Object:  StoredProcedure [dbo].[mostrar_cajas_por_empresa_sin_ip]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_cajas_por_empresa_sin_ip]

as
select Caja.Id_Caja ,Caja.Descripcion from Caja 
GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_cajas_por_serial]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[MOSTRAR_cajas_por_serial]

@serial varchar(50)

AS
SELECT Descripcion,Tema, Id_Caja,Serial_PC,Impresora_A4,Impresora_Ticket    from Caja
 where Caja.Serial_PC = @serial 
GO
/****** Object:  StoredProcedure [dbo].[mostrar_cajas_por_Serial_de_DiscoDuro]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_cajas_por_Serial_de_DiscoDuro]
@Serial as varchar(50)
as
select Caja.Id_Caja  ,Descripcion 
from Caja 
where caja.Serial_PC =@Serial
GO
/****** Object:  StoredProcedure [dbo].[mostrar_cargos_sin_repetir]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[mostrar_cargos_sin_repetir]

AS BEGIN
SET NOCOUNT ON;
SELECT DISTINCT  
      Cargo,Id_horarios
FROM           HORARIOS 
                       
end


GO
/****** Object:  StoredProcedure [dbo].[mostrar_categoria]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_categoria]
as
select * from categoria order by idcategoria desc






GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_CIERRE_DE_CAJA_PENDIENTE]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[MOSTRAR_CIERRE_DE_CAJA_PENDIENTE]

@serial varchar(50)

AS
SELECT MOVIMIENTOCAJACIERRE.fechainicio,MOVIMIENTOCAJACIERRE.fechafin,caja.Id_Caja  FROM MOVIMIENTOCAJACIERRE inner join USUARIO2 on USUARIO2.idUsuario=MOVIMIENTOCAJACIERRE.Id_usuario
 inner join Caja on Caja.Id_Caja =MOVIMIENTOCAJACIERRE.Id_caja 
 where Caja.Serial_PC = @serial    AND MOVIMIENTOCAJACIERRE.Estado='CAJA APERTURADA' 
GO
/****** Object:  StoredProcedure [dbo].[mostrar_cliente]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_cliente]
as
SELECT        idclientev, Nombre, Direccion_para_factura as Direccion, Ruc,  movil as Celular, Cliente, Proveedor, 
                    clientes.Saldo ,     Estado as Activo
FROM            dbo.clientes 
WHERE clientes.Cliente='SI' order by Nombre  asc 


GO
/****** Object:  StoredProcedure [dbo].[mostrar_COBROS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_COBROS]

as 
SELECT       * from ventas 
WHERE Estado ='DEUDA'

GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_CONCEPTOS_EN_GASTOS_VARIOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[MOSTRAR_CONCEPTOS_EN_GASTOS_VARIOS]
AS
SELECT        dbo.CONCEPTOS.Id_concepto, dbo.CONCEPTOS.Descripcion AS Concepto 
                      
FROM            dbo.CONCEPTOS 
						
						
GO
/****** Object:  StoredProcedure [dbo].[mostrar_descripcion_produco_sin_repetir]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[mostrar_descripcion_produco_sin_repetir]

@buscar varchar(50)
as 
select TOP 10 Descripcion  from Producto1  Where Descripcion  LIKE  '%' + @buscar +'%'


GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_DESPACHOS_DE_MERCADERIAS_PENDIENTES]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[MOSTRAR_DESPACHOS_DE_MERCADERIAS_PENDIENTES]
AS
select * from detalle_venta where Estado='DESPACHO PENDIENTE'

GO
/****** Object:  StoredProcedure [dbo].[mostrar_DETALLE_CONTROL_DE_COBROS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_DETALLE_CONTROL_DE_COBROS]
@id int
as
SELECT  Id_detalle_de_control_de_cobros ,Pago_realizado as [Importe],Tipo_de_cobro as [Tipo], Fecha_que_pago as Fecha  from DETALLE_CONTROL_DE_COBROS 

where Id_cliente=@id
GO
/****** Object:  StoredProcedure [dbo].[mostrar_DETALLE_CONTROL_DE_PAGOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_DETALLE_CONTROL_DE_PAGOS]
@id int
as
SELECT  Id_detalle_de_control_de_cobros ,Pago_realizado as [Importe],Tipo_de_cobro as [Tipo], Fecha_que_pago as Fecha  from DETALLE_CONTROL_DE_COBROS 

where Id_cliente=@id and DETALLE_CONTROL_DE_COBROS.Detalle ='PAGO'
GO
/****** Object:  StoredProcedure [dbo].[mostrar_detalle_de_cobro_para_Imprimir]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_detalle_de_cobro_para_Imprimir]
@Id_detalle_de_control_de_cobros int,
@pagado_en_letras  varchar(max)
as 
SELECT       (EMPRESA.Moneda + convert(varchar(50),Pago_realizado)) as Pago_realizado ,Fecha_que_pago,Detalle
,clientes.Nombre as Cliente, clientes.movil ,(EMPRESA.Moneda + convert(varchar(50),clientes.Saldo)) as Saldo ,
USUARIO2.Nombre_y_Apelllidos  as Usuario, (EMPRESA.Moneda + convert(varchar(50), (Pago_realizado+Saldo ))) as total
 ,@pagado_en_letras as Pagado_letras,clientes.Direccion_para_factura ,
 EMPRESA.Nombre_Empresa ,EMPRESA.Logo ,DETALLE_CONTROL_DE_COBROS.Comprobante
 from DETALLE_CONTROL_DE_COBROS  
inner join clientes on clientes.idclientev=DETALLE_CONTROL_DE_COBROS.Id_cliente 
inner join USUARIO2 on USUARIO2.idUsuario=DETALLE_CONTROL_DE_COBROS.Id_usuario 
cross join EMPRESA 

where DETALLE_CONTROL_DE_COBROS.Id_detalle_de_control_de_cobros =@Id_detalle_de_control_de_cobros 


GO
/****** Object:  StoredProcedure [dbo].[mostrar_Empresa]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_Empresa]
as
select LOGO, Nombre_Empresa as Empresa ,(Impuesto + ' ('+  CONVERT(VARCHAR(50),Porcentaje_impuesto) + ')') Impuesto ,Moneda  ,Id_empresa  
,Porcentaje_impuesto  ,Impuesto ,Modo_de_busqueda ,Trabajas_con_impuestos ,Trabajas_con_impuestos,Correo_para_envio_de_reportes,
Carpeta_para_copias_de_seguridad, Redondeo_de_total  ,Moneda
from Empresa
GO
/****** Object:  StoredProcedure [dbo].[mostrar_Empresa_igv]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_Empresa_igv]
@empresa as varchar(50)
as
select Porcentaje_impuesto , 'IGV'+' ('+CONVERT(VARCHAR(50),Porcentaje_impuesto)+'%)' as IGV FROM EMPRESA

WHERE Nombre_Empresa=@empresa 




GO
/****** Object:  StoredProcedure [dbo].[mostrar_estado_de_cuenta_de_cliente]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_estado_de_cuenta_de_cliente]
@Id_cliente as int
as 
SELECT      ( detalle_venta .Descripcion ) as Descripcion, dbo.detalle_venta.Cantidad_mostrada as Cant, 
                         dbo.detalle_venta.preciounitario as [Precio Unit] ,dbo.detalle_venta.Total_a_pagar as Total
FROM            dbo.detalle_venta INNER JOIN
                         dbo.ventas ON dbo.detalle_venta.idventa = dbo.ventas.idventa 
                       INNER JOIN
                         dbo.clientes ON dbo.ventas.idclientev = dbo.clientes.idclientev 
                       
						 where dbo.clientes.idclientev=@Id_cliente and dbo.ventas.Tipo_de_pago ='CREDITO' AND ((ventas.ACCION='VENTA') or (ventas.ACCION='POR COBRAR OTROS'))

GO
/****** Object:  StoredProcedure [dbo].[mostrar_estado_de_cuenta_de_proveedores]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_estado_de_cuenta_de_proveedores]
@Id_proveedor as int
as 
SELECT      ( detalle_venta .Descripcion ) as Descripcion, dbo.detalle_venta.Cantidad_mostrada as Cant, 
                         dbo.detalle_venta.preciounitario as [Precio Unit] ,dbo.detalle_venta.Total_a_pagar as Total
FROM            dbo.detalle_venta INNER JOIN
                         dbo.ventas ON dbo.detalle_venta.idventa = dbo.ventas.idventa 
                       INNER JOIN
                         dbo.clientes ON dbo.ventas.idclientev = dbo.clientes.idclientev 
                       
						 where dbo.clientes.idclientev=@Id_proveedor and dbo.ventas.Tipo_de_pago ='CREDITO' AND ventas.ACCION='POR PAGAR OTROS'

GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_FONDO_DE_CAJA_INICIAL]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[MOSTRAR_FONDO_DE_CAJA_INICIAL]
@id_caja int,
@fi as DATEtime,
@ff as DATEtime
AS
SELECT MOVIMIENTOCAJACIERRE.Saldo_queda_en_caja  FROM MOVIMIENTOCAJACIERRE inner join USUARIO2 on USUARIO2.idUsuario=MOVIMIENTOCAJACIERRE.Id_usuario
  inner join Caja on Caja.Id_Caja =MOVIMIENTOCAJACIERRE.Id_caja 
 where Caja.Id_Caja  = @id_caja    AND MOVIMIENTOCAJACIERRE.Estado='CAJA APERTURADA'  

GO
/****** Object:  StoredProcedure [dbo].[Mostrar_formato_ticket]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[Mostrar_formato_ticket]
as
select EMPRESA.Logo,Empresa.Nombre_Empresa ,Ticket.*  from Ticket 
INNER JOIN EMPRESA ON EMPRESA.Id_empresa=Ticket.Id_Empresa 
GO
/****** Object:  StoredProcedure [dbo].[mostrar_Formato_ticket_con_datos_de_detalleventa]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE proc [dbo].[mostrar_Formato_ticket_con_datos_de_detalleventa]
@Subtotal as varchar(50),
@Total varchar (50),
@Descuento varchar(50),
@Son varchar(50),
@Impuesto varchar(50),
@Monto_impuesto varchar(50),
@Numero_comprobante as varchar(50),
@Cliente varchar(50),
@Cajero varchar(50)
as
Select *,@Subtotal as Subtotal,@Total as total,@Descuento as descuento,@Son as son , @Impuesto as impuesto
,@Monto_impuesto as monto_impuesto,@Numero_comprobante as numero_comprobante,@Cliente as cliente,@Cajero as cajero  from Ticket 

GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_GANANCIAS_DE_VENTAS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[MOSTRAR_GANANCIAS_DE_VENTAS]
as
select CONVERT(NUMERIC(18,1),SUM(Ganancia ) ) from detalle_venta  INNER JOIN VENTAS ON detalle_venta.idventa =ventas.idventa 


GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_Ganancias_por_fecha]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[MOSTRAR_Ganancias_por_fecha]
@FI AS DATE,
@FF AS DATE
as
select CONVERT(NUMERIC(18,1),sum( Ganancia )) 
FROM            dbo.detalle_venta  inner join ventas on ventas.idventa=detalle_venta.idventa 
WHERE convert(date,ventas.fecha_venta)&gt;= @FI    AND   convert(date,ventas.fecha_venta)&lt;= @FF 
                       
GO
/****** Object:  StoredProcedure [dbo].[mostrar_gastos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_gastos]
as
SELECT        dbo.CONCEPTOS.Descripcion AS Concepto, dbo.GASTOSVARIOS.Idgasto, dbo.GASTOSVARIOS.Fecha_del_Gasto, 
                         dbo.GASTOSVARIOS.Tipo_de_Comprobante + ' '+dbo.GASTOSVARIOS.Nro_Comprobante AS Comprobante, dbo.GASTOSVARIOS.Importe, 
						 dbo.GASTOSVARIOS.Descripcion  as Detalle, 
                         dbo.GASTOSVARIOS.Id_concepto,USUARIO2.Nombre_y_Apelllidos as Usuario
,GASTOSVARIOS.Nro_Comprobante ,GASTOSVARIOS.Tipo_de_Comprobante 
FROM            dbo.CONCEPTOS INNER JOIN
                         dbo.GASTOSVARIOS ON dbo.CONCEPTOS.Id_concepto = dbo.GASTOSVARIOS.Id_concepto inner join USUARIO2 
						 on USUARIO2.idUsuario=GASTOSVARIOS.Id_usuario 
 where GASTOSVARIOS.TIPO='SALIDA'
 order by Fecha_del_Gasto   desc
GO
/****** Object:  StoredProcedure [dbo].[mostrar_gastos_por_anio_en_comboboxAnio]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[mostrar_gastos_por_anio_en_comboboxAnio]

AS BEGIN
SET NOCOUNT ON;
SELECT DISTINCT  
      DATEPART (year,Fecha_del_Gasto) as anio
FROM           GASTOSVARIOS 
WHERE GASTOSVARIOS.TIPO ='SALIDA' 
end

GO
/****** Object:  StoredProcedure [dbo].[mostrar_gastos_por_MES_en_comboboxMES]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[mostrar_gastos_por_MES_en_comboboxMES]
@anio int
AS BEGIN
SET NOCOUNT ON;
SELECT DISTINCT  
      datename(month,Fecha_del_Gasto) as mes
FROM           GASTOSVARIOS 
WHERE GASTOSVARIOS.TIPO ='SALIDA'  and DATEPART (year,Fecha_del_Gasto) =@anio
end

GO
/****** Object:  StoredProcedure [dbo].[mostrar_gastos_por_usuario]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_gastos_por_usuario]
@idusuario int,
@fecha date
as
select*from GASTOSVARIOS 
where Id_usuario=@idusuario and convert(date,Fecha_del_Gasto) =@fecha 

GO
/****** Object:  StoredProcedure [dbo].[mostrar_grupos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[mostrar_grupos]

@buscar varchar(50)
as begin
select Idline,Linea  as Grupo from Grupo_de_Productos  Where Linea  LIKE  '%' + @buscar +'%'
end
GO
/****** Object:  StoredProcedure [dbo].[mostrar_HORARIOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_HORARIOS]
as
SELECT        *FROM HORARIOS
GO
/****** Object:  StoredProcedure [dbo].[mostrar_horas_dia]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROC [dbo].[mostrar_horas_dia]
@idpersonal int,
@fecha_sistema date
AS 

SELECT       sum(Horas ) as  Horas
FROM            dbo.ASISTENCIAS 						 
WHEre Id_personal=@idpersonal and (convert(date,Fecha_salida )=@fecha_sistema or convert(date,Fecha_entrada  )=@fecha_sistema)


GO
/****** Object:  StoredProcedure [dbo].[mostrar_ingresos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_ingresos]
as
SELECT       dbo.GASTOSVARIOS.Descripcion  as Detalle, dbo.GASTOSVARIOS.Idgasto, dbo.GASTOSVARIOS.Fecha_del_Gasto, 
                         dbo.GASTOSVARIOS.Tipo_de_Comprobante + ' '+dbo.GASTOSVARIOS.Nro_Comprobante AS Comprobante, dbo.GASTOSVARIOS.Importe, 
						  
                         dbo.GASTOSVARIOS.Id_concepto,USUARIO2.Nombre_y_Apelllidos as Usuario
,GASTOSVARIOS.Nro_Comprobante ,GASTOSVARIOS.Tipo_de_Comprobante,GASTOSVARIOS.Tipo_de_Comprobante
FROM           
                         dbo.GASTOSVARIOS  inner join USUARIO2 
						 on USUARIO2.idUsuario=GASTOSVARIOS.Id_usuario 
 where GASTOSVARIOS.TIPO='INGRESO'
 order by Fecha_del_Gasto   desc
GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_Inventarios_bajo_minimo]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[MOSTRAR_Inventarios_bajo_minimo]
AS
select  Codigo,Descripcion,Precio_de_compra AS [Precio_de_Compra],Linea as Categoria, Stock ,Stock_minimo as [Stock_Minimo],linea,EMPRESA.Nombre_Empresa,EMPRESA.Logo  from Producto1 cross join EMPRESA
				
				where Stock &lt;= Stock_minimo 	and Usa_inventarios ='SI'

GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_Inventarios_bajo_minimo_COUNT]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[MOSTRAR_Inventarios_bajo_minimo_COUNT]
AS
select  count(Id_Producto1 ) from Producto1 
				where Stock &lt;= Stock_minimo 	and Usa_inventarios ='SI'
GO
/****** Object:  StoredProcedure [dbo].[mostrar_inventarios_todos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[mostrar_inventarios_todos]

@letra varchar(50)
AS 
SELECT    Codigo ,Descripcion,Precio_de_compra as Costo,Precio_de_venta as [Precio_Venta], Stock, Stock_minimo as [Stock_Minimo]
,Grupo_de_Productos.Linea  AS Categoria ,Precio_de_compra*Stock as Importe,EMPRESA.Nombre_Empresa,EMPRESA.Logo 
FROM         
						 dbo.Producto1 
						  cross join EMPRESA
						   inner join Grupo_de_Productos on Grupo_de_Productos.Idline=Producto1.Id_grupo 
where Descripcion+Codigo   LIKE  '%' + @letra+'%' AND Producto1.Usa_inventarios ='SI'

GO
/****** Object:  StoredProcedure [dbo].[mostrar_lineas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_lineas]
as
select * from linea order by Idline desc 


GO
/****** Object:  StoredProcedure [dbo].[mostrar_lineas_sin_repetir]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[mostrar_lineas_sin_repetir]

AS BEGIN
SET NOCOUNT ON;
SELECT DISTINCT  
      Linea
FROM           Producto1 
end


GO
/****** Object:  StoredProcedure [dbo].[mostrar_mayores_GASTOS_POR_CONCEPTO_por_anio]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_mayores_GASTOS_POR_CONCEPTO_por_anio]
@anio as integer
as

SELECT    top 5 CONCEPTOS.Descripcion  , convert(varchar(50),SUM(Importe))    FROM GASTOSVARIOS INNER JOIN CONCEPTOS ON CONCEPTOS.Id_concepto =GASTOSVARIOS.Id_concepto 
WHERE GASTOSVARIOS.TIPO ='SALIDA' and DATEPART (year,Fecha_del_Gasto) =@anio
GROUP BY CONCEPTOS.Descripcion 
Order by SUM(Importe) desc
GO
/****** Object:  StoredProcedure [dbo].[mostrar_mayores_GASTOS_POR_CONCEPTO_por_mes_de_anio]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_mayores_GASTOS_POR_CONCEPTO_por_mes_de_anio]
@mes as varchar(50),
@anio as integer
as

SELECT    top 5 CONCEPTOS.Descripcion  , convert(varchar(50),SUM(Importe))    FROM GASTOSVARIOS INNER JOIN CONCEPTOS ON CONCEPTOS.Id_concepto =GASTOSVARIOS.Id_concepto 
WHERE GASTOSVARIOS.TIPO ='SALIDA' and datename(month,Fecha_del_Gasto) =@mes and DATEPART (year,Fecha_del_Gasto) =@anio
GROUP BY CONCEPTOS.Descripcion 
Order by SUM(Importe) desc
GO
/****** Object:  StoredProcedure [dbo].[mostrar_MOTIVOS_sin_repetir]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[mostrar_MOTIVOS_sin_repetir]
@letrab VARCHAR(50)
AS BEGIN
SET NOCOUNT ON;
SELECT DISTINCT  
      Motivo 
FROM           KARDEX  
 where  (Motivo) LIKE  '%' + @letrab+'%'     AND Tipo = 'ENTRADA'             
end


GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_MOVIMIENTOS_DE_CAJA_POR_SERIAL]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[MOSTRAR_MOVIMIENTOS_DE_CAJA_POR_SERIAL]

@serial varchar(50)

AS
SELECT USUARIO2.Login,USUARIO2.Nombre_y_Apelllidos    FROM MOVIMIENTOCAJACIERRE inner join USUARIO2 on USUARIO2.idUsuario=MOVIMIENTOCAJACIERRE.Id_usuario
 inner join Caja on Caja.Id_Caja =MOVIMIENTOCAJACIERRE.Id_caja 
 where Caja.Serial_PC = @serial    AND MOVIMIENTOCAJACIERRE.Estado='CAJA APERTURADA' 


GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_MOVIMIENTOS_DE_CAJA_POR_SERIAL_y_usuario]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[MOSTRAR_MOVIMIENTOS_DE_CAJA_POR_SERIAL_y_usuario]

@serial varchar(50),
@idusuario int

AS
SELECT USUARIO2.Login,USUARIO2.Nombre_y_Apelllidos    FROM MOVIMIENTOCAJACIERRE inner join USUARIO2 on USUARIO2.idUsuario=MOVIMIENTOCAJACIERRE.Id_usuario
 inner join Caja on Caja.Id_Caja =MOVIMIENTOCAJACIERRE.Id_caja 
 where Caja.Serial_PC = @serial    AND MOVIMIENTOCAJACIERRE.Estado='CAJA APERTURADA' and MOVIMIENTOCAJACIERRE.Id_usuario =@idusuario and USUARIO2.Estado ='ACTIVO'

GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_MOVIMIENTOS_DE_KARDEX]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[MOSTRAR_MOVIMIENTOS_DE_KARDEX]

@idProducto int
AS
SELECT       KARDEX.Fecha ,Producto1.Descripcion ,KARDEX.Motivo as Movimiento, KARDEX.Cantidad ,KARDEX.Tipo ,KARDEX.Cantidad ,KARDEX.Hay  as Hay ,USUARIO2.Nombre_y_Apelllidos as Cajero ,Grupo_de_Productos .linea as Categoria, KARDEX.Costo_unt , KARDEX.Total 
,Grupo_de_Productos .linea ,EMPRESA.Nombre_Empresa,EMPRESA.Logo ,Producto1.Stock,convert(numeric(18,2), Producto1.Stock * KARDEX.Costo_unt) as TotalInventario
FROM            dbo.KARDEX INNER JOIN Producto1 on Producto1.Id_Producto1=KARDEX.Id_producto inner join USUARIO2 on USUARIO2.idUsuario =KARDEX.Id_usuario 
             cross join EMPRESA
			 inner join Grupo_de_Productos on Grupo_de_Productos.Idline=Producto1.Id_grupo 
			where    Producto1.Id_Producto1=@idProducto
			
			 order by KARDEX.Id_kardex  Desc 

GO
/****** Object:  StoredProcedure [dbo].[mostrar_permisos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_permisos]
@idusuario int
as
SELECT        dbo.permisos.*
FROM            dbo.USUARIO2 INNER JOIN
                         dbo.permisos ON dbo.USUARIO2.idUsuario = dbo.permisos.Id_Usuario
						 where dbo.USUARIO2.idUsuario =@idusuario 

GO
/****** Object:  StoredProcedure [dbo].[mostrar_permisos_por_usuario]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_permisos_por_usuario]
@LOGIN VARCHAR(50)
as 
select Rol 
from USUARIO2 
where USUARIO2.LOGIN =@LOGIN 
GO
/****** Object:  StoredProcedure [dbo].[mostrar_permisos_por_usuario_ROL_UNICO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_permisos_por_usuario_ROL_UNICO]
@LOGIN VARCHAR(50)
as 
select 
USUARIO2.Rol 
from USUARIO2 
where USUARIO2.LOGIN =@LOGIN and USUARIO2.Estado ='ACTIVO'
GO
/****** Object:  StoredProcedure [dbo].[mostrar_Producto1]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_Producto1]
as

select Id_Producto1,Codigo ,Grupo_de_Productos.Linea as Grupo,Descripcion ,Impuesto,Usa_inventarios ,Precio_de_compra AS [P Compra],Precio_mayoreo as [P mayoreo],Se_vende_a as [Se vende por],Stock_minimo as [Stock minimo] ,Fecha_de_vencimiento as [F vencimiento] ,Stock,Precio_de_venta as [P venta] 
,A_partir_de,Grupo_de_Productos.Idline from Producto1 INNER JOIN Grupo_de_Productos on
Grupo_de_Productos.Idline=Producto1.Id_grupo
GO
/****** Object:  StoredProcedure [dbo].[mostrar_productos_agregados_a_venta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_productos_agregados_a_venta]
@idventa as int
as
SELECT      detalle_venta . Codigo ,( detalle_venta .Descripcion ) as Producto, dbo.detalle_venta.Cantidad_mostrada as Cant, 
                         dbo.detalle_venta.preciounitario as P_Unit ,convert(numeric(18,2),dbo.detalle_venta.Total_a_pagar) as Importe, detalle_venta .Id_producto  ,DBO.detalle_venta.iddetalle_venta ,dbo.ventas.Estado 
						 , detalle_venta .Stock ,dbo.detalle_venta.cantidad ,ventas.idclientev 
						 , detalle_venta .Stock ,detalle_venta .Stock ,Usa_inventarios ,Se_vende_a ,detalle_venta.idventa 
FROM            dbo.detalle_venta INNER JOIN
                         dbo.ventas ON dbo.detalle_venta.idventa = dbo.ventas.idventa 
where dbo.detalle_venta .idventa =@idventa AND detalle_venta.cantidad &gt;0 order by detalle_venta.iddetalle_venta desc

GO
/****** Object:  StoredProcedure [dbo].[mostrar_productos_agregados_a_venta_en_espera]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[mostrar_productos_agregados_a_venta_en_espera]
@idventa as int
as
SELECT      ( detalle_venta .Descripcion ) as Producto, dbo.detalle_venta.Cantidad_mostrada as Cant, 
                         dbo.detalle_venta.preciounitario as P_Unit ,dbo.detalle_venta.Total_a_pagar as Importe
FROM            dbo.detalle_venta INNER JOIN
                         dbo.ventas ON dbo.detalle_venta.idventa = dbo.ventas.idventa 
where dbo.detalle_venta .idventa =@idventa AND detalle_venta.cantidad &gt;0

GO
/****** Object:  StoredProcedure [dbo].[mostrar_productos_agregados_a_venta_historial]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_productos_agregados_a_venta_historial]
@idventa as int
as
SELECT      detalle_venta . Codigo ,dbo.detalle_venta.Cantidad_mostrada as Cant,( detalle_venta .Descripcion ) as Descripcion, 
                         dbo.detalle_venta.preciounitario as P_Unit ,Ventas.Monto_total as TOTAL, detalle_venta .Id_producto  ,DBO.detalle_venta.iddetalle_venta ,dbo.ventas.Estado 
						 , detalle_venta .Stock ,dbo.detalle_venta.cantidad ,ventas.idclientev
						  ,Usa_inventarios ,Se_vende_a ,ventas.Porcentaje_IGV,ventas.idventa
						  , Empresa.Moneda + ' '+convert(varchar(50),Ventas.Monto_total)   as TOTAL
FROM            dbo.detalle_venta INNER JOIN
                         dbo.ventas ON dbo.detalle_venta.idventa = dbo.ventas.idventa  
						 inner join USUARIO2 ON USUARIO2.idUsuario=ventas.Id_usuario 
						 cross join Empresa 
where dbo.detalle_venta .idventa =@idventa AND detalle_venta.cantidad &gt;0 and ventas.Estado ='CONFIRMADO'

GO
/****** Object:  StoredProcedure [dbo].[MOSTRAR_PRODUCTOS_NUEVOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[MOSTRAR_PRODUCTOS_NUEVOS]
@DESCRIPCION as VARCHAR(MAX)
as

select Id_Producto1 FROM Producto1 
WHERE Descripcion  = @DESCRIPCION
GO
/****** Object:  StoredProcedure [dbo].[mostrar_productos_para_ventas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_productos_para_ventas]
as
SELECT        (dbo.Producto1.Descripcion +' '+dbo.Presentaciones.Presentacion+ ' x'+dbo.Presentaciones.Cantidad_por_presentacion+ dbo.Presentaciones.Unidad_de_medida) as Descripcion,dbo.Producto1.Id_Producto1 ,
                       
                        dbo.Producto1.Imagen ,Presentaciones_fraccionadas.Id_presentacionfraccionada 
                  
FROM            
                         dbo.Producto1 INNER JOIN
                         dbo.Presentaciones_fraccionadas ON dbo.Producto1.Id_Producto1 = dbo.Presentaciones_fraccionadas.Id_producto INNER JOIN
                         dbo.Presentaciones ON dbo.Presentaciones_fraccionadas.Id_presentacion = dbo.Presentaciones.Id_Presentacion


GO
/****** Object:  StoredProcedure [dbo].[mostrar_productos_por_categoria]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_productos_por_categoria]
@categoria as varchar(50)
as
select Descripcion,Precio_de_venta,Id_Producto1,empresa.moneda,codigo  from Producto1  
cross join Empresa
where Producto1.Linea=@categoria 
GO
/****** Object:  StoredProcedure [dbo].[mostrar_productos_vencidos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_productos_vencidos]

as

select Id_Producto1,Codigo ,Descripcion 

,Fecha_de_vencimiento as F_vencimiento ,Stock
,datediff(day,Fecha_de_vencimiento,CONVERT(DATE,GETDATE ()))as [Dias Vencidos] from Producto1 

where   Fecha_de_vencimiento &lt;&gt;'NO APLICA' AND Fecha_de_vencimiento &lt;= CONVERT(DATE,GETDATE ()) 

GO
/****** Object:  StoredProcedure [dbo].[mostrar_productos_vencidos_en_menos_de_30_dias]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_productos_vencidos_en_menos_de_30_dias]

as

select Id_Producto1,Codigo ,Descripcion 

,Fecha_de_vencimiento as F_vencimiento ,Stock
,(datediff(day,Fecha_de_vencimiento,CONVERT(DATE,GETDATE ())))*(-1)as [Dias a Vencer] from Producto1 

where   Fecha_de_vencimiento &lt;&gt;'NO APLICA' AND Fecha_de_vencimiento &gt; CONVERT(DATE,GETDATE ()) and (datediff(day,Fecha_de_vencimiento,CONVERT(DATE,GETDATE ())))*(-1) &lt;=30
order by (datediff(day,Fecha_de_vencimiento,CONVERT(DATE,GETDATE ())))*(-1) asc
GO
/****** Object:  StoredProcedure [dbo].[mostrar_PROVEEEDOR]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[mostrar_PROVEEEDOR]
as
SELECT        idclientev, Nombre, Direccion_para_factura as Direccion, Ruc, movil as Celular, Cliente, Proveedor, 
                    clientes.Saldo ,     Estado as Activo
FROM            dbo.clientes 
WHERE clientes.Proveedor ='SI' order by Nombre  asc 


GO
/****** Object:  StoredProcedure [dbo].[mostrar_recibo_digital_cobros]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[mostrar_recibo_digital_cobros]
@idcliente int,
@idcaja int
as
select *from DETALLE_CONTROL_DE_COBROS inner join clientes on clientes.idclientev=DETALLE_CONTROL_DE_COBROS.Id_cliente 

where DETALLE_CONTROL_DE_COBROS.Id_cliente=@idcliente
GO
/****** Object:  StoredProcedure [dbo].[mostrar_solo_saldo_cliente_proveedor]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[mostrar_solo_saldo_cliente_proveedor]
@id int
as
SELECT  Saldo  from clientes  
where idclientev =@id
GO
/****** Object:  StoredProcedure [dbo].[mostrar_stock_de_detalle_de_ventas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[mostrar_stock_de_detalle_de_ventas]
@Id_producto int 
as
select detalle_venta.Stock,detalle_venta.Descripcion   from ventas inner join detalle_venta on detalle_venta.idventa=ventas.idventa  
where ventas.Estado ='EN ESPERA' and detalle_venta.Id_producto =@Id_producto and detalle_venta.Usa_inventarios ='SI'
GO
/****** Object:  StoredProcedure [dbo].[mostrar_tema_por_caja]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[mostrar_tema_por_caja]
@Serial as varchar(50)
as
select Caja.Tema 
from Caja 

where caja.Serial_PC =@Serial
GO
/****** Object:  StoredProcedure [dbo].[mostrar_ticket_impreso]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_ticket_impreso]
@idventa as int,
@total_en_letras as varchar(50)


as
declare @cantidad_de_productos as int
set @cantidad_de_productos = (select SUM(detalle_venta.cantidad) from detalle_venta inner join ventas ON dbo.detalle_venta.idventa = dbo.ventas.idventa
 where detalle_venta.idventa=@idventa)
SELECT      detalle_venta . Codigo ,( detalle_venta .Descripcion ) as Producto, dbo.detalle_venta.Cantidad_mostrada as Cant, 
                         dbo.detalle_venta.preciounitario as P_Unit ,convert(numeric(18,2),dbo.detalle_venta.Total_a_pagar) as Importe, detalle_venta .Id_producto  ,DBO.detalle_venta.iddetalle_venta ,dbo.ventas.Estado 
						 , detalle_venta .Stock ,dbo.detalle_venta.cantidad ,ventas.idclientev 
						 , detalle_venta .Stock ,detalle_venta .Stock ,Usa_inventarios ,Se_vende_a ,ventas.idventa,Empresa.Nombre_Empresa as Empresa
,Empresa.Logo,Ticket.Identificador_fiscal,Ticket.Direccion,Ticket.Provincia_Departamento_Pais,Ticket.Nombre_de_Moneda,
Ticket.Agradecimiento,Ticket.pagina_Web_Facebook,Ticket.Anuncio,ventas.Numero_de_doc ,ventas.fecha_venta as fecha
,Empresa.Impuesto +'('+ convert(varchar(50),EMPRESA.Porcentaje_impuesto) +'%):' as Impuesto
,convert(numeric (18,2),(ventas.Monto_total*ventas.Porcentaje_IGV)/100 )as SubTotal,
ventas.Monto_total ,USUARIO2.Nombre_y_Apelllidos as Usuario,
ventas.Pago_con   , ventas.Vuelto ,EMPRESA.Moneda ,clientes.Nombre ,ticket.Datos_fiscales_de_autorizacion
,ventas.Tipo_de_pago,@cantidad_de_productos as Cantidad_de_productos,@total_en_letras AS total_en_letras
FROM            dbo.detalle_venta INNER JOIN
                         dbo.ventas ON dbo.detalle_venta.idventa = dbo.ventas.idventa inner join usuario2 on Usuario2.idUsuario=ventas.Id_usuario 
						 INNER JOIN clientes ON clientes.idclientev =ventas.idclientev 
						  cross join Empresa
						 cross join Ticket
where dbo.detalle_venta .idventa =@idventa  And ventas.Monto_total &gt;0 order by detalle_venta.iddetalle_venta desc


GO
/****** Object:  StoredProcedure [dbo].[mostrar_Tipo_de_documentos_para_insertar_en_ventas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_Tipo_de_documentos_para_insertar_en_ventas]
as

SELECT        Serializacion.Id_tipodoc AS COMPROBANTE , Serializacion.Id_tipodoc  ,dbo.Serializacion.Serie ,dbo.Serializacion.numeroinicio , dbo.Serializacion.numerofin+1 ,dbo.Serializacion.Id_serializacion ,(dbo.Serializacion.Serie  +' - '+ dbo.Serializacion.numeroinicio + dbo.Serializacion.numerofin) as serie_completa,Serializacion.Id_tipodoc,Serializacion.Id_tipodoc 
FROM            dbo.Serializacion 
 where dbo.Serializacion .Destino  ='VENTAS'

GO
/****** Object:  StoredProcedure [dbo].[mostrar_Tipo_de_documentos_para_insertar_estos_mismos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_Tipo_de_documentos_para_insertar_estos_mismos]
as

SELECT       dbo.Serializacion.Serie ,dbo.Serializacion.Cantidad_de_numeros , dbo.Serializacion.numerofin ,dbo.Serializacion.Id_serializacion ,(dbo.Serializacion.Serie  +' - '+ dbo.Serializacion.Cantidad_de_numeros + dbo.Serializacion.numerofin) as serie_completa,Serializacion.Id_tipodoc AS COMPROBANTE
,Por_defecto 
FROM            dbo.Serializacion where destino='VENTAS'
GO
/****** Object:  StoredProcedure [dbo].[mostrar_todos_los_productos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROC [dbo].[mostrar_todos_los_productos]
AS 
select Producto1.*,EMPRESA .* from Producto1 cross join EMPRESA 
GO
/****** Object:  StoredProcedure [dbo].[mostrar_usuario]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_usuario]
as 
select USUARIO2 .idUsuario,USUARIO2.Nombre_y_Apelllidos as [Nombres] ,USUARIO2 .Login as Usuario,USUARIO2.Password as Contraseña
,Icono ,Nombre_de_icono ,Correo ,rol
from USUARIO2 WHERE Estado ='ACTIVO'
GO
/****** Object:  StoredProcedure [dbo].[mostrar_usuario_POR_ID]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_usuario_POR_ID]
@ID INT
as 
select *
from USUARIO2 inner join Permisos on Permisos. Id_Usuario=USUARIO2.idUsuario

WHERE USUARIO2.idUsuario=@ID 
order by USUARIO2.idUsuario desc



GO
/****** Object:  StoredProcedure [dbo].[mostrar_usuario_POR_login]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_usuario_POR_login]
@login varchar(50)
as 
select Icono 
from USUARIO2
WHERE USUARIO2.login =@login AND ESTADO='ACTIVO'

GO
/****** Object:  StoredProcedure [dbo].[mostrar_USUARIO_por_nombre_contrasenia]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[mostrar_USUARIO_por_nombre_contrasenia]
@letra VARCHAR(50),
@pas varchar(50)
AS BEGIN
SELECT        idUsuario, Login ,Password ,Nombre_y_Apelllidos 
FROM            dbo.USUARIO2						 
WHEre Login =@letra  AND Password=@pas
END

GO
/****** Object:  StoredProcedure [dbo].[mostrar_vendedores]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_vendedores]
as 
select * from USUARIO2






GO
/****** Object:  StoredProcedure [dbo].[mostrar_ventas_en_espera]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_ventas_en_espera]


AS BEGIN
SET NOCOUNT ON;
SELECT DISTINCT  
(detalle_venta.idventa )
FROM         dbo.detalle_venta
             inner join ventas  on ventas .idventa =detalle_venta.idventa 
          where  
 ventas.Estado='EN ESPERA'
 group by detalle_venta.idventa             
end
GO
/****** Object:  StoredProcedure [dbo].[mostrar_ventas_en_espera_Anuncio]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[mostrar_ventas_en_espera_Anuncio]

as
SELECT      count(ventas.idventa ) 
FROM            dbo.ventas
             inner join detalle_venta on detalle_venta.idventa =ventas.idventa 
where  
 ventas.Estado='EN ESPERA'or  ventas.Estado='SIN CONFIRMAR'
GO
/****** Object:  StoredProcedure [dbo].[mostrar_ventas_en_espera_con_fecha_y_monto]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_ventas_en_espera_con_fecha_y_monto]

		AS   

SELECT    ventas. idventa,ventas.Comprobante,ventas.fecha_venta
FROM            dbo.detalle_venta INNER JOIN
                         dbo.ventas ON dbo.detalle_venta.idventa = dbo.ventas.idventa    
					
where  (ventas.Estado='EN ESPERA') 
	 GROUP BY     ventas. idventa,ventas.Comprobante,ventas.fecha_venta 




GO
/****** Object:  StoredProcedure [dbo].[mostrar_ventas_en_espera_solo_para_vendedores]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[mostrar_ventas_en_espera_solo_para_vendedores]
@id_caja int

as
SELECT      count(ventas.idventa ) as id_ventas, count(ventas.idventa ) as id_producto
FROM            dbo.ventas inner join Caja  on caja.Id_Caja=ventas.Id_caja 
             
where  
 ventas.Estado='EN ESPERA'or  ventas.Estado='SIN CONFIRMAR' and ventas.Id_caja =@id_caja 

 union 
 SELECT      count(ventas.idventa  ) as id_ventas,count(ventas.idventa ) as id_producto
FROM            dbo.ventas inner join detalle_venta on detalle_venta.idventa =detalle_venta.idventa  
             inner join Caja  on caja.Id_Caja=ventas.Id_caja
where  
 ventas.Estado='EN ESPERA'or  ventas.Estado='SIN CONFIRMAR' and ventas.Id_caja =@id_caja
GO
/****** Object:  StoredProcedure [dbo].[mostrar_ventas_realizadas]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_ventas_realizadas]
as
SELECT       (datename(month,fecha_venta) + ' ' +DateName(year,fecha_venta))as fecha,convert(varchar(50),sum( Monto_total))  as Total

FROM            dbo.ventas 
       where ACCION= 'VENTA'           
group by datename(month,fecha_venta),DateName(year,fecha_venta)
GO
/****** Object:  StoredProcedure [dbo].[mostrar_ventas_realizadas_CANTIDADES]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_ventas_realizadas_CANTIDADES]
as
SELECT        convert(varchar(50),convert(date,fecha_venta)) as fecha,COUNT(ventas.idventa ) 
FROM            dbo.ventas 
                       
group by convert(date,fecha_venta)
GO
/****** Object:  StoredProcedure [dbo].[mostrar_ventas_realizadas_POR_FECHA]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_ventas_realizadas_POR_FECHA]
@FI AS DATE,
@FF AS DATE
as
select CONVERT(NUMERIC(18,1),sum( Monto_total  )) 
FROM            dbo.ventas   
 WHERE convert(date,fecha_venta)&gt;= @FI    AND   convert(date,fecha_venta)&lt;= @FF 

GO
/****** Object:  StoredProcedure [dbo].[mostrar_ventas_realizadas_POR_FECHAS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostrar_ventas_realizadas_POR_FECHAS]
@FI AS DATE,
@FF AS DATE
as
SELECT        datename(MONTH ,convert(date,fecha_venta)) +' '+ convert(varchar(50),datepart(year ,convert(date,fecha_venta)))  as fecha,convert(varchar(50),sum( Monto_total) ) 
FROM            dbo.ventas 
     WHERE convert(date,fecha_venta)&gt;= @FI    AND   convert(date,fecha_venta)&lt;= @FF            
group by convert(date,fecha_venta)

GO
/****** Object:  StoredProcedure [dbo].[mostras_ventaspormeses]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[mostras_ventaspormeses]

as
select month(dbo.ventas.fecha_venta )as mes , sum(dbo.ventas.Monto_total) as importe
from dbo.ventas 
where month(dbo.ventas.fecha_venta)  BETWEEN 0 AND 12 GROUP BY MONTH(dbo.ventas.fecha_venta ) 





GO
/****** Object:  StoredProcedure [dbo].[NOTIFICADOR_COBROS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[NOTIFICADOR_COBROS]

as 
SELECT       Saldo ,Nombre 
FROM          
                         dbo.clientes 
						 WHERE Saldo &gt;0 AND Cliente ='SI'
GO
/****** Object:  StoredProcedure [dbo].[NOTIFICADOR_PAGOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[NOTIFICADOR_PAGOS]

as 
SELECT       Saldo ,Nombre 
FROM          
                         dbo.clientes 
						 WHERE Saldo &gt;0 AND Proveedor  ='SI'
GO
/****** Object:  StoredProcedure [dbo].[Poner_nombre_a_venta_en_espera]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[Poner_nombre_a_venta_en_espera]
@id_venta int,
@nombre as varchar(50)
as
update ventas   set Comprobante=@nombre, Estado = 'EN ESPERA' where idventa   =@id_venta 
GO
/****** Object:  StoredProcedure [dbo].[PRUEBA_DE_NOTIFIC]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 create proc [dbo].[PRUEBA_DE_NOTIFIC]
 AS
 select COUNT (iddetalle_venta  )as idprod from detalle_venta 
GO
/****** Object:  StoredProcedure [dbo].[REPORT_CIERRE_DE_CAJA_diaria_por_TURNOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[REPORT_CIERRE_DE_CAJA_diaria_por_TURNOS]
@id_caja AS INT,
@fi as DATE,
@ff as DATEtime
as

select SUM(Monto_total)  from ventas 
where Tipo_de_pago ='EFECTIVO' AND 
(fecha_venta &gt;=@fi and fecha_venta&lt;=@ff )AND Id_caja=@id_caja
GO
/****** Object:  StoredProcedure [dbo].[REPORT_COBROS_EN_EFECTIVO_por_turnos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[REPORT_COBROS_EN_EFECTIVO_por_turnos]
@id_caja AS INT,
@fi as DATEtime,
@ff as DATETIME
as

select SUM(Pago_realizado )  from DETALLE_CONTROL_DE_COBROS     where  
(Fecha_que_pago &gt;=@fi AND Fecha_que_pago&lt;=@ff )AND Id_caja=@id_caja AND Tipo_de_cobro ='EFECTIVO' and DETALLE_CONTROL_DE_COBROS.Detalle ='COBRO'


GO
/****** Object:  StoredProcedure [dbo].[REPORT_GANANCIAS_DE_VENTAS_por_TURNOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[REPORT_GANANCIAS_DE_VENTAS_por_TURNOS]
@id_caja AS INT,
@fi as DATEtime,
@ff as DATEtime
as

select SUM(Ganancia )  from detalle_venta  INNER JOIN VENTAS ON detalle_venta.idventa =ventas.idventa 
where
(ventas.fecha_venta  &gt;=@fi and ventas.fecha_venta&lt;=@ff )AND VENTAS.Id_caja=@id_caja AND ventas.Estado &lt;&gt; 'OTRAS CUENTAS'

GO
/****** Object:  StoredProcedure [dbo].[REPORT_GASTOS_VARIOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[REPORT_GASTOS_VARIOS]
@id_caja AS INT,
@fi as DATE,
@ff as DATE
as

select SUM(Importe)  from GASTOSVARIOS INNER JOIN CONCEPTOS ON CONCEPTOS.Id_concepto =GASTOSVARIOS.Id_concepto   where  
(Fecha_del_Gasto &gt;=@fi OR Fecha_del_Gasto&lt;=@ff )AND Id_caja=@id_caja AND TIPO='SALIDA'


GO
/****** Object:  StoredProcedure [dbo].[REPORT_GASTOS_VARIOS_por_turnos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[REPORT_GASTOS_VARIOS_por_turnos]
@id_caja AS INT,
@fi as DATEtime,
@ff as DATEtime
as

select SUM(Importe)  from GASTOSVARIOS INNER JOIN CONCEPTOS ON CONCEPTOS.Id_concepto =GASTOSVARIOS.Id_concepto   where  
(Fecha_del_Gasto &gt;=@fi AND Fecha_del_Gasto&lt;=@ff )AND Id_caja=@id_caja AND TIPO='SALIDA'


GO
/****** Object:  StoredProcedure [dbo].[REPORT_INGRESOS_VARIOS_por_turnos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[REPORT_INGRESOS_VARIOS_por_turnos]
@id_caja AS INT,
@fi as DATEtime,
@ff as DATEtime
as

select SUM(Importe)  from GASTOSVARIOS   where  
(Fecha_del_Gasto &gt;=@fi AND Fecha_del_Gasto&lt;=@ff )AND Id_caja=@id_caja AND GASTOSVARIOS . TIPO='INGRESO'


GO
/****** Object:  StoredProcedure [dbo].[REPORT_PAGOS_EN_EFECTIVO_por_turnos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[REPORT_PAGOS_EN_EFECTIVO_por_turnos]
@id_caja AS INT,
@fi as DATEtime,
@ff as DATETIME
as
select SUM(Pago_realizado )  from DETALLE_CONTROL_DE_COBROS     where  
(Fecha_que_pago &gt;=@fi AND Fecha_que_pago&lt;=@ff )AND Id_caja=@id_caja AND Tipo_de_cobro ='EFECTIVO' and Detalle ='PAGO'

GO
/****** Object:  StoredProcedure [dbo].[REPORT_VENTAS_POR_PERIODOS_EN_GENERAL_DE_KARDEX]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[REPORT_VENTAS_POR_PERIODOS_EN_GENERAL_DE_KARDEX]
@fecha_inicial as date,
@fecha_final as date
as

SELECT       convert(date,KARDEX.Fecha) ,KARDEX.Total ,KARDEX.Motivo 
					,@fecha_inicial,@fecha_final
FROM            dbo.KARDEX 

						 where 
						Cast(dbo.KARDEX   .Fecha    As Date) &gt;=@fecha_inicial 
				AND Cast(dbo.KARDEX   .Fecha   As Date) &lt;= @fecha_final 
						 
						 AND (KARDEX.Motivo ='DESPACHO DIARIO DE VENDEDORES...'
						 or KARDEX.Motivo ='RECHAZO DIARIO')and (KARDEX.Total &gt;0 or KARDEX.Total  &lt;0)







GO
/****** Object:  StoredProcedure [dbo].[REPORT_VENTAS_por_TURNOS_en_EFECTIVO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[REPORT_VENTAS_por_TURNOS_en_EFECTIVO]
@id_caja AS INT,
@fi as DATEtime,
@ff as DATEtime
as

select SUM(Monto_total)  from ventas 
where Tipo_de_pago ='EFECTIVO' AND 
(fecha_venta &gt;=@fi and fecha_venta&lt;=@ff )AND Id_caja=@id_caja

GO
/****** Object:  StoredProcedure [dbo].[REPORT_VENTAS_por_TURNOS_Por_Credito]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[REPORT_VENTAS_por_TURNOS_Por_Credito]
@id_caja AS INT,
@fi as DATEtime,
@ff as DATEtime
as

select SUM(Monto_total)  from ventas 
where Tipo_de_pago ='CREDITO' AND 
(fecha_venta &gt;=@fi and fecha_venta&lt;=@ff )AND Id_caja=@id_caja and ventas.Estado &lt;&gt; 'OTRAS CUENTAS'

GO
/****** Object:  StoredProcedure [dbo].[REPORT_VENTAS_por_TURNOS_Por_tarjeta]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[REPORT_VENTAS_por_TURNOS_Por_tarjeta]
@id_caja AS INT,
@fi as DATEtime,
@ff as DATEtime
as

select SUM(Monto_total)  from ventas 
where Tipo_de_pago ='TARJETA' AND 
(fecha_venta &gt;=@fi and fecha_venta&lt;=@ff )AND Id_caja=@id_caja

GO
/****** Object:  StoredProcedure [dbo].[REPORT_VENTAS_POR_VENDEDOR_VENTAS_AL_CONTADO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[REPORT_VENTAS_POR_VENDEDOR_VENTAS_AL_CONTADO]
@fecha_inicial as date,
@fecha_final as date,
@Id_usuario int
as
SELECT      sum(dbo.ventas.Monto_total)AS VENTAS_TOTAL_CONTADO 
                         					 
FROM            dbo.ventas INNER JOIN
                         
                         dbo.USUARIO2 ON dbo.ventas.Id_usuario = dbo.USUARIO2.idUsuario
					
						  where dbo.USUARIO2.idUsuario =@Id_usuario  and Cast(dbo.ventas .fecha_venta   As Date) &gt;=@fecha_inicial AND Cast(dbo.ventas .fecha_venta   As Date) &lt;= @fecha_final AND Tipo_de_pago  ='CONTADO'

						  group by dbo.ventas.Monto_total

GO
/****** Object:  StoredProcedure [dbo].[reporte_cierre_de_caja]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[reporte_cierre_de_caja]


@ventastotales as varchar(50)
,@ganancia as varchar(50)
,@fondo as varchar(50)
, @ventasefectivo as varchar(50)
, @pagosefectivo as varchar(50)
, @cobrosefectivo as varchar(50)
, @ingresosvarios as varchar(50)
, @gastosvarios as varchar(50)
, @esperado as varchar(50)
,@Vefectivo as varchar(50)
,@Vtarjeta as varchar(50)
,@Vcredito as varchar(50)
, @TOTALventas as varchar(50)
, @cajero  as varchar(50)
, @fechas  as varchar(max)
, @caja  as varchar(max)
as
select empresa.Moneda +' '+ @ventastotales as ventastotales ,empresa.Moneda +' '+@ganancia as ganancia,empresa.Moneda +' '+@fondo as fondo,empresa.Moneda +' '+@ventasefectivo as ventasefectivo,empresa.Moneda +' '+@pagosefectivo as pagosefectivo ,empresa.Moneda +' '+@cobrosefectivo as cobrosefectivo,empresa.Moneda +' '+@ingresosvarios as ingresosvarios,empresa.Moneda +' '+@gastosvarios as gastosvarios
,empresa.Moneda +' '+@esperado AS esperado ,empresa.Moneda +' '+@esperado AS esperado,empresa.Moneda +' '+@Vefectivo AS Vefectivo,empresa.Moneda +' '+@Vtarjeta AS Vtarjeta,empresa.Moneda +' '+@Vcredito AS Vcredito,empresa.Moneda +' '+@TOTALventas AS TOTALventas,@cajero AS cajero,@fechas AS fechas,@caja AS caja
,EMPRESA.Nombre_Empresa , EMPRESA.Logo 
from Caja
cross join EMPRESA 
 where Caja.Descripcion =@caja  
GO
/****** Object:  StoredProcedure [dbo].[REPORTE_productos_vencidos]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[REPORTE_productos_vencidos]

as

select Id_Producto1,Codigo ,Descripcion 

,Fecha_de_vencimiento as F_vencimiento ,Stock,empresa.Nombre_Empresa,empresa.Logo
,datediff(day,Fecha_de_vencimiento,CONVERT(DATE,GETDATE ()))as [Dias Vencidos] from Producto1
cross join EMPRESA 
where   Fecha_de_vencimiento &lt;&gt;'NO APLICA' AND Fecha_de_vencimiento &lt;= CONVERT(DATE,GETDATE ()) 
order by (datediff(day,Fecha_de_vencimiento,CONVERT(DATE,GETDATE ()))) asc

GO
/****** Object:  StoredProcedure [dbo].[REPORTEcierredecajaGASTOSVARIOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[REPORTEcierredecajaGASTOSVARIOS]
 @fechaini DATE,
 @fechafin DATE
 as
select month(dbo.GASTOSVARIOS.Fecha_del_Gasto ) as Mes, year(dbo.GASTOSVARIOS.Fecha_del_Gasto) as anio,
  sum(dbo.GASTOSVARIOS.Importe  ) as Egresos_Gastos_varios

 from dbo.GASTOSVARIOS 
 where     Fecha_del_Gasto &gt;= @fechaini AND   Fecha_del_Gasto &lt;= @fechafin  GROUP BY MONTH(dbo.GASTOSVARIOS.Fecha_del_Gasto  ), YEAR(dbo.GASTOSVARIOS.Fecha_del_Gasto ) ORDER BY YEAR(dbo.GASTOSVARIOS.Fecha_del_Gasto ) asc

GO
/****** Object:  StoredProcedure [dbo].[REPORTEcierredecajaGASTOSVARIOS_diario]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[REPORTEcierredecajaGASTOSVARIOS_diario]
 @fechaini DATE
 as
select month(dbo.GASTOSVARIOS.Fecha_del_Gasto ) as Mes, year(dbo.GASTOSVARIOS.Fecha_del_Gasto) as anio,
  sum(dbo.GASTOSVARIOS.Importe  ) as Egresos_Gastos_varios, day(dbo.GASTOSVARIOS.Fecha_del_Gasto) as dia

 from dbo.GASTOSVARIOS 
 where     Fecha_del_Gasto = @fechaini   GROUP BY MONTH(dbo.GASTOSVARIOS.Fecha_del_Gasto  ), day(dbo.GASTOSVARIOS.Fecha_del_Gasto),YEAR(dbo.GASTOSVARIOS.Fecha_del_Gasto ) ORDER BY YEAR(dbo.GASTOSVARIOS.Fecha_del_Gasto ) asc


GO
/****** Object:  StoredProcedure [dbo].[REPORTEcierredecajaVENTAS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[REPORTEcierredecajaVENTAS]
 @fechaini DATE,
 @fechafin DATE
 as
 --LEFT( CONVERT( VARCHAR, d.fecha, 112 ),6)+'01' as fechaVenta
 select month(dbo.ventas.fecha_venta) as Mes, year(dbo.ventas.fecha_venta) as anio,
  sum(dbo.ventas.Monto_total) as Ingreso_de_Ventas

 from dbo.ventas
 where      fecha_venta &gt;= @fechaini AND    fecha_venta &lt;= @fechafin and Estado='PAGADO' GROUP BY MONTH(dbo.ventas.fecha_venta ), YEAR(dbo.ventas.fecha_venta ) ORDER BY YEAR(dbo.ventas.fecha_venta ) asc


GO
/****** Object:  StoredProcedure [dbo].[restar_saldo_a_cliente_por_eliminacion]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[restar_saldo_a_cliente_por_eliminacion]
@idventa int,
@montototal as numeric(18,1)


as

update CONTROL_DE_COBROS set Monto  =Monto - @montototal
where Id_venta =@idventa 


GO
/****** Object:  StoredProcedure [dbo].[restar_total_venta_por_eliminacion]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[restar_total_venta_por_eliminacion]
@idventa int,
@montototal as numeric(18,2)


as

update ventas set Monto_total  =Monto_total - @montototal
where idventa =@idventa 


GO
/****** Object:  StoredProcedure [dbo].[restaurar_cliente]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[restaurar_cliente]
@idcliente integer
as
update  clientes set  Estado ='ACTIVO'
where idclientev=@idcliente AND Estado='ELIMINADO' 
GO
/****** Object:  StoredProcedure [dbo].[restaurar_usuario]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[restaurar_usuario]
@idusuario as int,
@login varchar(50)

as
	 
UPDATE USUARIO2  SET Estado ='ACTIVO'
WHERE idUsuario =@idusuario and Login &lt;&gt;'admin' 
GO
/****** Object:  StoredProcedure [dbo].[sumar_COBROS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[sumar_COBROS]
@FI as date,
@FF as date
as
select sum(dbo.DETALLE_CONTROL_DE_COBROS  .Pago_realizado   )
from dbo.DETALLE_CONTROL_DE_COBROS 
 where DETALLE_CONTROL_DE_COBROS.Detalle='COBRO'  AND CONVERT(DATE,Fecha_que_pago)  &gt;= @FI and CONVERT(DATE,Fecha_que_pago)  &lt;= @FF


GO
/****** Object:  StoredProcedure [dbo].[sumar_cobros_POR_TURNO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[sumar_cobros_POR_TURNO]
@fechainicio as datetime,
@fechafin as datetime
as
select sum(dbo.DETALLE_CONTROL_DE_COBROS.Pago_realizado)
from dbo.DETALLE_CONTROL_DE_COBROS  
 where  Fecha_que_pago  &gt;= @fechainicio and Fecha_que_pago  &lt;=@fechafin

GO
/****** Object:  StoredProcedure [dbo].[sumar_compras_POR_TURNO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[sumar_compras_POR_TURNO]
@FI as date,
@FF as date
as
select sum(dbo.ventas  .Monto_total  )
from dbo.ventas 
 where (ventas.ACCION='COMPRA' OR ventas.ACCION='PEDIDO DE COMPRA' ) AND ventas.Tipo_de_pago  ='CONTADO' AND CONVERT(DATE,fecha_venta)  &gt;= @FI and CONVERT(DATE,fecha_venta)  &lt;= @FF


GO
/****** Object:  StoredProcedure [dbo].[sumar_gastos_POR_TURNO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[sumar_gastos_POR_TURNO]
@FI as date,
@FF as date
as
select sum(dbo.GASTOSVARIOS    .Importe    )
from dbo.GASTOSVARIOS   
 where GASTOSVARIOS .TIPO    ='SALIDA'  AND CONVERT(DATE,Fecha_del_Gasto )  &gt;= @FI and CONVERT(DATE,Fecha_del_Gasto)  &lt;= @FF


GO
/****** Object:  StoredProcedure [dbo].[sumar_INGRESOS_VARIOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[sumar_INGRESOS_VARIOS]
@FI as date,
@FF as date
as
select sum(dbo.GASTOSVARIOS    .Importe    )
from dbo.GASTOSVARIOS   
 where GASTOSVARIOS .TIPO    ='INGRESO'  AND CONVERT(DATE,Fecha_del_Gasto )  &gt;= @FI and CONVERT(DATE,Fecha_del_Gasto)  &lt;= @FF


GO
/****** Object:  StoredProcedure [dbo].[sumar_INGRESOS_VARIOS_POR_TURNO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[sumar_INGRESOS_VARIOS_POR_TURNO]
@fechainicio as datetime,
@fechafin as datetime
as
select sum(dbo.INGRESOSVARIOS .Importe )
from dbo.INGRESOSVARIOS
 where Estado='PAGADO' AND Fecha_del_Gasto &gt;= @fechainicio and Fecha_del_Gasto &lt;=@fechafin 

GO
/****** Object:  StoredProcedure [dbo].[sumar_INGRESOS-VARIOS_POR_TURNO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[sumar_INGRESOS-VARIOS_POR_TURNO]
@fechainicio as datetime,
@fechafin as datetime
as
select sum(dbo.INGRESOSVARIOS .Importe + 0) 
from dbo.INGRESOSVARIOS
 where Estado='PAGADO' AND Fecha_del_Gasto &gt;= @fechainicio and Fecha_del_Gasto &lt;=@fechafin 

GO
/****** Object:  StoredProcedure [dbo].[sumar_KARDEX_RECHASOS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[sumar_KARDEX_RECHASOS]
@FI as date,
@FF as date
as
select sum(dbo.KARDEX   .Total   )
from dbo.KARDEX  
 where KARDEX .Motivo   ='RECHAZO DIARIO' AND CONVERT(DATE,Fecha)  &gt;= @FI and CONVERT(DATE,Fecha)  &lt;= @FF


GO
/****** Object:  StoredProcedure [dbo].[sumar_KARDEX_VENTAS]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[sumar_KARDEX_VENTAS]
@FI as date,
@FF as date
as
select sum(dbo.KARDEX   .Total   )
from dbo.KARDEX  
 where (KARDEX .Motivo   ='DESPACHO DIARIO DE VENDEDORES...'  OR   KARDEX .Motivo   ='DESPACHO DE PEDIDOS...' )AND CONVERT(DATE,Fecha)  &gt;= @FI and CONVERT(DATE,Fecha)  &lt;= @FF


GO
/****** Object:  StoredProcedure [dbo].[sumar_pagos_POR_TURNO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[sumar_pagos_POR_TURNO]
@FI as date,
@FF as date
as
select sum(dbo.DETALLE_CONTROL_DE_COBROS  .Pago_realizado   )
from dbo.DETALLE_CONTROL_DE_COBROS 
 where DETALLE_CONTROL_DE_COBROS.Detalle='PAGO'  AND CONVERT(DATE,Fecha_que_pago)  &gt;= @FI and CONVERT(DATE,Fecha_que_pago)  &lt;= @FF


GO
/****** Object:  StoredProcedure [dbo].[SUMAR_POR_COBRAR]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SUMAR_POR_COBRAR]
@FI as date,
@FF as date
as
SELECT    SUM(   clientes.Saldo )

FROM           clientes  
						
 where clientes .Cliente='SI' 
GO
/****** Object:  StoredProcedure [dbo].[SUMAR_POR_COBRAR_OK]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SUMAR_POR_COBRAR_OK]

as
SELECT    SUM(   clientes.Saldo )

FROM           clientes  
						
 where clientes .Cliente='SI' 
GO
/****** Object:  StoredProcedure [dbo].[SUMAR_POR_PAGAR_OK]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SUMAR_POR_PAGAR_OK]

as
SELECT    SUM(   clientes.Saldo )

FROM           clientes  
						
 where clientes .Proveedor ='SI' 
GO
/****** Object:  StoredProcedure [dbo].[sumar_ventas_POR_TURNO]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[sumar_ventas_POR_TURNO]
@FI as date,
@FF as date
as
select sum(dbo.ventas  .Monto_total  )
from dbo.ventas 
 where (ventas.ACCION='VENTA' OR ventas.ACCION='PEDIDO DE VENTA' )AND ventas.Tipo_de_pago  ='CONTADO' AND CONVERT(DATE,fecha_venta)  &gt;= @FI and CONVERT(DATE,fecha_venta)  &lt;= @FF


GO
/****** Object:  StoredProcedure [dbo].[Tema]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[Tema]
@Id_caja int,
@Tema varchar(50)
as 

update Caja   set  Tema  =@Tema  where Id_Caja=@Id_caja 
GO
/****** Object:  StoredProcedure [dbo].[validar_usuario]    Script Date: 09/09/2019 18:25:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[validar_usuario]

@password varchar(50),
@login varchar(50)
as
select * from USUARIO2
where  Password   = @password and Login=@Login and Estado ='ACTIVO'


GO
USE [master]
GO
ALTER DATABASE [BASEADA] SET  READ_WRITE 
GO</value>
  </data>
  <data name="PictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZAAAAGQCAYAAACAvzbMAAAABGdBTUEAALGPC/xhBQAATLlJREFUeF7t
        fXdclFfa9v7/fr/ddzfZxNjF9B43zXQ1KiJ1ALsmxjRjTKIbE90UYzbJpkezb9y4MdlNLDA0QVBElNhQ
        rFhAkSoKIqAovd/3d84z8+CIRphhBp5y8f4mvC4w5X7Oc65zXdddfsfii8SX/K5+4d+IB9YD7gfsB7YI
        YD/87f3wdzI4+EIEEAFEABFABJyNwO+AsDhh4IQFxgnGCcbpCuMEgICigqJDwoWEDQnfJQsDAAIAAYAA
        QAAgABDXAMRZzQu/jwggAogAIoAIyAiAgYCBgIGAgYCBgIG4xkBgosNEh4kOEx0mOkx0mOj2CGBDxIaI
        DREboisbIg7Uzh2oUQcCKRMRQAQQAUTApQjAA4EHAg8EHgg8EHgg8EBAWdF6ARKEcxIE4oV4dUXyBwMB
        AwEDAQMBAwEDcY2BuCR84Y8QAUQAEUAETB8BMBAwEDAQMBAwEDAQ1xgINFBooF3RQLF+sH6wfsybNg8G
        AgYCBgIGAgYCBuIaAzG9iIcAIAKIACKACLgUATAQMBAwEDAQMBAwENcYCDRsaNjQsM2rYeP+x/3flfsf
        DAQMBAwEDAQMBAzENQbikvCFP0IEEAFEABEwfQTAQMBAwEDAQMBAwEBcYyDQQKGBdkUDxfrB+sH6Ma+H
        BgYCBgIGAgYCBgIG4hoDMb2IhwAgAogAIoAIuBQBMBAwEDAQMBAwEDAQ1xgINGxo2NCwzath4/7H/d+V
        +x8MBAwEDAQMBAwEDMQ1BuKS8IU/QgQQAUQAETB9BMBAwEDAQMBAwEDAQFxjINBAoYF2RQPF+sH6wfox
        r4cGBgIGAgYCBgIGAgbiGgMxvYiHACACiAAigAi4FAEwEDAQMBAwEDAQMBDXGAg0bGjY0LDNq2Hj/sf9
        35X7HwwEDAQMBAwEDAQMxDUG4pLwhT9CBBABRAARMH0EwEDAQMBAwEDAQMBAXGMg0EChgXZFA+3p9WPf
        +y/ZAOWZwGE/UN6iFv6t4pSe493T1xuvr639CgwEDETzDKQzAFDafJbLms/xycZizqg9Rrur97F87K0+
        wNsqU8laGsXhpZEsv4uH8m+Hh8v/DiuN4NjyeOX19lTv57TqvbyvOp2O1+Xy6aZSPtNUzhdaq50CMAAM
        khocDzxaXg+/M72IhwD0aATs4CA32MserQLaGlobqKqlmiqazlNJYwnl1xVQVu1xOlpzjI5XHKK8c4cp
        vSyVwgt+ImvBf+in3H/Sp0ffp7ePvEpvicffMl6nVw8+RyN3PEpP73hE+e7Ox/DtD1PgrpHK680/Mpvm
        HZ5F72bMocVZH9OK/GUUlr+c4k+GU/a5dMo5m07ZlZkCXHIouzabihqKqLzpLF1ovkA1LbXUSE1XjINj
        bHr0YuHFEYF2EQADAQPRHANRGUd5YzlnVGVwytkUiiiJ4C8KvuCXMl9ivwN+NGrfKA6Mv4NDIgdxcNRg
        Com+kdWHZv8dMYBDUh5jy+HxFHIwhN/PfZ9/LPqR40rjaOf5nZxdk81VzVWXSW5aPoFCUtKWpNTd1wMA
        AgDpdgBxlKRaxD9ONBZReu0RXleRxN8Uf8dvZr5O81Ms/OYmP34teQzP3DiCnk96kqcmPsyhCfdwQPxt
        5Lf2Vg6MHsRBkQPEYyAFCSCRD4vtQZYoLwEsXmz/TiFRg1l9KADj1n97Ka/n8Jpkfx/K+5HvLzByIAcK
        AAlccxMHJtxBEvwmrX+An9vwGL+YNIxmbRzJb2zy4XnJfjw/dTLNz3uXl5/5mTdf2MrZDflUQ42XqBp6
        kTi6e0PD63UvoAFAACBuBRDFKKbfNq2lL7C7aj9trNjMMTnL+cdDf+cv979Ji/bO5Dd2TeDxW4fxqPW3
        0piw69gn7HoeG96L/ay9yd/ahwOt/dgiT/ERg0gyDwkCwYJ5aJZx2FnRJe8v0ku8/4EkPgMHRfTnAGtf
        Fp+NfMNvUD6rz+o/s3dkHxqTfB8/u82b56VN5U/3v0HLDi3iVUc+57jC1bxFeDqHajKkt6LiyBU9Fpj2
        tvCAwXnOU4IHAlWzyxG4kn8hYeS80PaLG09TQW2e4gHsK92q+AJvH55Nz+wNJZ/oATRy5R8EWPyZxoZd
        T/7hvSnI2k9uriQ3XQEOtu9meojPLICRgiMGUGB4X/ILv4F8wq4j79XX0IgV/48CN9xHLx+cTh9lLlC8
        lUNlOyn/wlHhpxRTWVM51bXWX9FH6fJFxhMgAleIABgITihuP6G1UitVtlRyXFkc/73gE355/1TFo5CS
        ku27TjyLKzEIjb1/yWKmrH+QFuYu5B9OLef0qnRuFHY8JK6LEQAD8SADAcUDxXXmBvutuouc+gLeeD6F
        FxX+g59Jn0TzNgfwS0lP8ZTEhzg0/i7FAxBegM2jiPISrEJ6FMKX0NiGrPX3I2MmYic8F8VbEb5Kf7YI
        1iL9lOnCT3l94yh+Y3sITT/6Av98ZrVIY06X6c2XSlx2iRESFySuru7/YCBgIFdlIL8FGI3cwum1GRx/
        0so/H/qEPts3h/+6azL7pzzMQ9f2IZ/w61lIUiwkKeFbCM1fD1lSOmAcVwY4L1L9FL+wXjwyohc9kujF
        M7b78ge7X+SvD79D/y7+UQH4M83ll2V5qUkNABQAirOAAg8EyuZvRsDR22imFlGHUUp5VVmUWb6Htp5O
        pA+OLSDLhr/QiF/+R9HppV4fbO1P4yLtvoUZPYye9mvsHsq4CC/hofQhv9XX0fDI6+nuzYPpmf3jaHXB
        D3S04gAdqc6gwvqTSo2Nkvbg8MAtgQh0NgJgIGAgHXogTa1NdKr+FH95cjFP3jJCsgowCp0yqlCRBea7
        9hYamjaU/5r9JiefS+YLTRfgmTiYRs5Ius6e2I32+wAQAEgbgKgShippyHYcy0r+y3MyXqW5m3x5mqjD
        sMTeInV3UXch/Ayhw9t9DACKRgFFpjnLrC4l5VnWqojrFhA1kHzibuIJ64fwSxue5AWpU+jbU0tFG5b9
        XG+rN2kDFLkmsKF6zoTWO6AAQEwMIO0BQy7mVvHIayhU6jQ+PzSfp24ZySPX30KyRiFQ1CwEyzoGKZNo
        dMPUugne0+9PBRTJRCzCgPcVtTZ+Ip160pbh/Lddz/LK/H/z4bpjAkZkiWfblwIo8EjgkbQHPHggnRX7
        DPh7qu4t/Q3Zayq3Lp+2lm2i77K/UOo0/NcMpoDVvcxdl9HTnoaHX18eBmRWl5Qlx6z8I4UkPSC8rfmK
        x5VRdZhOi/5j9e1qSwx4K+AjuRgBMBATMxB5mmihFj4pzFTZa8rvYBA/ueEWlgYsGIYOemt5OGts7M5h
        vKjgI1lbAo8EHslFOuogXQBATAggqsZ9qDaTPzr5BU/YH6z0mgqIv519Y2y9pFCnYU4AkZ6WvP7S4wqI
        u4WnrLufZ27xpVePvyF6lW3kOmqAR+Kwgerdw+jq+weAGBhAruRxyDqAlLObyJq5hBftmclBKY/yI2v7
        Kr2mRI8mDrX1lwIDMbPHo15/4ZMEhfflMVF9aVjSbTwndTx/lfV3tpbFKPNO4JHAE4EH4qL2p4c/u+hx
        NCt9kjLFoKX/Fv1EL+wMopGr/0iicR9ZULdhrl5bznoq9rqSUNGfLFD4YQ/GXkdP7nhYmXeyqyJVqQ2C
        R6KH3cAz7xEMxMAMxJZV1coF9QW0vGg5+6T781MbboXHgV5cXWKYSlqwYGhPbnuAF+S+ywerDsIjMalH
        AgAxEIC0l6xk6/RvTy/j0H2BNH3Do3KOBvvFiB5UkTDJkSTgvMdjTwFW6kpkTzPf2Bt5YsIQnrU1QJlf
        sr/msLqNoo7EJIACANE5gCig0W7+hhzQJOd9f33kXZb5/bI3lZw7IWdQwONAN+Aud0O2eySylkR6JD5R
        IgVYzC95P+15XpX/A++vPQxGYhYA8YwyhmftrgioPof8fq75PB06v5++z/lamfs9OrovBYX1Rm8qZ3V/
        /H7nfSGH+SVjVv6JfBPvovliJvz+su1UWHfisvkk3XVf4HW6JwJgIDpnIGoanpy/8e/TP/Fz23xkxXiX
        NO4un1DhMZg6/rJdv5QI3z7yKu+u3ndJ2m9X00bx99oaPwEA0RmA2H2ONongTFMZLy/5maZmTudJm5/g
        cWtuFaNSB1yc+Y15Gxhg1Y2A7lhHMnntPTwh1ZvfKfiQ5LyYi5Votl5baI2i/zRgAIiOAMTRJJe9in6t
        3MFfHFvEz24ZTY8mDuaxUf2UWg70qsLEw55MElDXn2jtz0/F9GbvTUOUeTFxJTEsEzvssquye6JZo7YY
        hbMMD3Ug3SMVdulV7Ca5MrOhvrVBmTEuexVN2z+ehiWIuQ8iP19pP2LWOeLwLDrvWXRnrIQ/IpI2lBkx
        cl7MlO2j6fvCpZRVd1yMPK5qm0HSpZsDf9yjEQAD0REDkacDqSkLbVnRmIXWjJGwkOh0I9GJQw4/seFm
        DjwUQhvObuCq5iqVhSBrS6dZWwAQDQOIo2RVIxpsf170LU/d6ceT1t6t9CpSWquj9YhuNlBVVjJfkoK9
        NY5Yr36i11pg/O308sbhPO/oG5xac6nJDklLX5IWAERjANK+rqNGNK/bXbGLlh1axEG/Psoj1ogZ45gI
        aOosJ70CkCxElHVIwqcjP2tv9km8k+elTeXE/FVU2nz2oseOZoW6YWTwQHpUQbz8xR3rOi4InXhz+UZa
        sPcF8l59DYmiLQqV88Yxa1ybmn93+gs6fi3bDBKR6CCAZNTKP9DEuLspvOAnOl6TRQ3UiPnsGtuTrvZ2
        wEA0xkBQ14FKcb0yDFclOtSN6HdkLgBEgwCyq3qfUtcx0V7XIeZYQ7Ixc3v1bqzj6JmRu2IiouitNTHu
        Ln5+dwh/d3o51bfUQ9KyR0AyAAePXVMz6gEgPQwgjoWBpS0VvOFUNM/fOU2p6xA9hlDXgSwrwycJqHUj
        QeH92DtW9GvbMZI+P/EVZ9QeE72kbYlaKDy8CCFaAhR4ID2sN8qbo1X8X1FDMYWdWkEvbh5Fo1b8HnUd
        Otb4pQSFhwsxEN7IODF3xCe6P92bcjN9evR9Sq/YS7UOM9l7+HbFy7eLABhIDzMQea6Q4LEwdyFPWv+A
        aEPS3/AnTrNp/Pi8rnUG8Au/gefsnMiJFcmalXCcrdw22u8DQLoZQNr3skq8kMJTDownCR4yzVHOWUAr
        Etc2HFdNXGzw2om3feaI0stN9HTj8Wtu45e3+tLHhZ/xGVsbFEhaGvJEACDdCCCOhYGVrTW8sSCcZ6UG
        82Px/cnGPFBZ3jMmrnY2UHz+S7PwgkQ/Lf/ogRSUMpQ/zFkoZ420AYjqi2jJEzAaw+jo88AD6UZVU8Eq
        8SipL6GEkxE0Ze29NHrl/4p5HV42zRz1HfAO4J9csgYUNi7uD4vop3V/0iBacOQNyqo4SA2iJ5xaM9WN
        tzBeCh5Iz7YKkBW3smhKnjRl6iJOnKj7gITWeQY4NrwXv5Y8hjKqM1iAiE3P0pCkY7b3AwnLwwvQ0fM4
        3niC/y/zI54WP8TWywqSFQAUacqdTxqRvkjkAB4XczO9luzNUUVhXNZyHp5IDwIoAMSDAKJe1xZuJdlF
        96uM93jqugdZtrbuyXkNOPF2/sQLhqg9higOX+QrMrRe2jyarSd+5vKWC21ZWmjG2L2MDB6IB1VNiU0N
        rY2Udn4XyRbswbG3kF/YDRI8oPVD68cacHENqPeP96o/0csp3kr9lEyFbxH1VPbzoAfvajy1YwTAQDzI
        QCS33lixmZ/ZG6owDkhWN0KygmTVecnK3r7maoxZZi+KFHiljkqACDwRD+9n7T0eAIibA+7oecRVbODX
        9k7joDU3kxz+JOdFQxLRniQCSU+/kp6smwqOHqzUUb17bD4fqTsGT6QbPREAiBsBRL1uzYJMS+YhwSNw
        7a0chPkd8HzQDFI5PHnkACXSfCUTCUy8lz8+9p4AkSx4ImrJpRv3N/UpHbPe4IG4UdKU10r27dl0Npmk
        bGURzMMOHtC7XdS70VPKhZ5SJou16okEhvUmASL0t2NvUXZtNsmDHDwRN25wV3gqMBA3I7S1NIpH7njU
        duKGZOWZE6fh25vrV1LyCMNw5npHDBQjc++gkIMhnF2bA0/EzfsbPBA3B9TR8/jhzC88eedY9o+RleXw
        PDwmWTizocC0dqtp3eMA0cH1lPedJdqLBIjwjEPPcGrVbngiHvREwEC6ACjqdWmkJsXzeGZXAI9eM5BD
        rBgAhToXm96v9Q3XiO9PMH8xLncQD4/34ncz/soZdcfhiXjIE4EH0gWJUGKPBI9t57YqnkdI7K0ULHr2
        oKcVdHt4Nz24BtQ6q7C+FJR4H71z7G0qrC9U5u7AE+nChgcPxAbD7uydgzoPpOUiDVi7no1FtoRfN4Tm
        Zs3lwvqTbr//3b2f6O35IGE5CShXqvOQ2VbwPCDZQLLSnmSn3JeCkQgQEXUib/Nh1Im49QANAHECQFTP
        Q7YnQZ0HAAOAoT3AuLKnI9rBCyYSkHgPf561iLPq8+CJuMkTgQfihCQosUY2RpS9raTnISvMUefRg1q3
        yeod4Ku4ttbUOpEA0YcuNOkB+iznI6poOq/M5oEn4sQGCA+k6x6I7KorGyPKk45sT2LELBZo+trV9LHe
        uua5+Vv78AtJT1JESQQLEIEn4oQCc8VKdL2ZNt39fh09j2wxz0O2ZJdddeF5QMKChKUXCevigUD2zgqN
        vomeT3qSE0pi+QLVok6kC3Ui8ECugsCO8zwKG4v428wPeZqY52FvyY48f9Q5gIHqsFBTzhORTGT2r36c
        WBzD9ay0PFHZiFtN5u4+8Hb368EDuYoEKLFFPorri2h57rc0WcwwH2sbBoXeVvAfsAZ0ugbU+3fkyt/T
        m1tDaGvZJsxYd9EKAQPpQAOsbK3hhJMR9hnmospchycueBrwNNAZ4MqSK2asd60uDgDSDkAcPQ9JB+Nz
        f+apa+8jZe4ATHMAKA4QhuqtZbH254D422n8kcmcW58PU91JUx0AchUAWVOxnl/aLvpbrfxfzLPAPAt4
        Xgb0vEJFx2y/mEH0WOKN/GHOB5xjAxHFE1E9UHd2ruhuj8LTrwcPpJ32J9dNoygUPFRzmCYeCKEnEgbS
        ODGwBjn4ruXgI26Im6bXgPAzZfPFcRFe9PjGW2lJwTdU01qneJ/2s6WL7oA5/gwM5AqULa8un2ZkzuCQ
        hLs5WMwXgIcADwEegvHTtkVRME/aMpy/LVralpXl6RO83p8fANIOQHIbC3lx/hcUknCPmCsgZpjbe+lg
        AzH+BoK6Dv3VdbgzqSU40osDogfxa9sstL1yF9e3NsAT6cATMT2AOJrmjdzK1sL/8sSNQ0lhHmJBuXOB
        YoMy9waF66/96x8oWMiENbfTgrTpnHXhSFt5CDwRNRSXZm2Z3gNRtc5mMUF5a9lmemvrOPJe+SfF80C9
        B/R7Tev3Oq3D0HJM5T0fGNGffMN70XfZn1N+w8k2L0S4IuYwNpz4lKZnIBJXm6mFTtWf4rmbfFnmhcPz
        gOcBydK8kqUy0VBknD2y9V5eVry8LSurjY50ofWH3j2P9u/f1ACiroOSxlJ68dgrHJxwFweJvHB5CsEG
        Yt4NBAcIcx8gVAAZGz2An0kL4BXlEWh1clHBuqTVi6kBRMakrPkc//fUTzQi6Q72j/FimReODcTcGwiu
        v8mvv3qAtA7ksXE38uy9U0VafwaL8dUw1duZ6qb0QFTfQ36PLYmhSdtHUWjEIBKmOeaZQ1dHzQ/WQJsH
        GhjeR/TAu4c+ylxAJ+sKUR/Szh8xJQNRK01z6gv4s31z2MfWIBGVxgasNEYWXdfmZyB+N7Ls3ivjsPV0
        IjdyCzwRBw/IdADimLb71Z43eNyaW8UCGQAAAYDiAIEDxG+k7YuRuFGDOGSPHyedT2kDELQ6YTYVgKgX
        vKqlmqxlUTxt/UPss/rPMM3tWSeoU9B+nQIYQfczKtVUf3RtX150dAGfaCqGqW431U3lgajex4HK/RS8
        ewwFrb2NQiKF9wHNFzHAGsAa+K01YJ//YwnrQ9M2PUHfFSzB/BC7F2IqBiJBU04WlMOhlJnmokU7TnTd
        f6JDlpPJs5x0zHgxP6RdJbrRCls6+jzr8lbw+Lg7MNMcngc8D3geTh8g5fwQUS9Gzx19kU83lpg+rdfw
        DMTRNN9Rs5fnpU3FfA8dnwDBGMEYe5TBijoxUS9GT2+8k8NOr+JzLRdMbaob3gNRfY/Kliqad/QN8km8
        k0IiBkLvheaPNYA14PwakH6IqBeTdWPP7wyk5PINF3tl2dQdU30ZnoHI44EEjw1nN/DLG4ezn7U3Ks3B
        QJC2DQmzyxKm9+preNmhRVxLjaadH2IKAMm9kEESPEKjb1aNc2wg2EC6vIEg7dmcac9qrzxRpc4Tt47g
        /ytZbtq0XsMDyJnWc7zixL9JMo/AiAFOm2bQ3KG596jmLoAer6/RrDUxL2hk7EB+Zc9EpZu36OptOlPd
        kB6I2rdf+h/J5Un0wi6LXevEbHPUvGDGCdaAm9aA8EMCwnrTs+seoqWn/kXlTWdNN0fdkAxE7XVVQ42K
        Rim0SkhWkKwgWSFt1+0KRKhgIT5xN9HQtKGcUZ1hPgbSUd2E3n7umLb7fyU/KBql7KiJZoloFgnPwpye
        hUclQJHWGxjtRWPX3sxf533OOY0nTJXWa0gGok4YfGX3RB4lNMoQkXYHAAGAAEAAIO72NIMlq4sSab2C
        iUzcOJTjToaZqluv4TwQKV+VCS1SapJSm5QapbjIzud7I0ceMcMawBroxBqQWVmS5Yxa8Xv6dO9rlN94
        yjRzQwzJQI5UZyiapNAmWZ4MPEphkSWD+KKuBgxf7ANB1n48actw/rZoqWnqQgwHIIJ98OoTPymaZGC0
        aJaIEbXY4LHBY4PvhiSS4Cgv9o0awH9LnUo1zTVtU8RlabrDSPFLZorrzWNu/34NASAybVe9QAnnknji
        niBFkxQtB1hqlGAgGs2jR1aQ27OC3K3x4/mc2z/8w27gZ9Y/RMuKl/PZ5grDZ2UZwgNR+13VUQP9I/dj
        umu98D3kqbMT+iVy4t2UE49Ywy/AGhDzhbzIP+5m8k59nA5VphveCzEGAxHGuYT67ZW7eEHadPYN7wXK
        3g2UHVlNyGoCQ7mcoagz1BNORnBlqyJlQcLSsoYnL1CjKBr8JG0mB8fcJPtdKQCipNhBwoKEBw8EB6pu
        PVCJsgHhvU7ZHypmqP9q6LoQQzCQhtYGOlJ9hGduGMZjVl+LGefYMLFhduuGCY/Nsc5MnaH+ZPxA/jlv
        qbEZiN6b10v2caaxlL4o+JKmJj5MgdZ+0KKhRWMNYA303Bqw14X4rPwTfbFvjqHrQgzBQFD3gRMgOg2g
        04DWPDkz1IXoHkBK7XUfvqj7QLNAeF7w/DTkeap1IQtEXUhVc5Uh60J0DyCJFZtE3Ucg6j6geQNAAaCa
        A1C/sF48I/FRiiiN5vPNyvx0YxUS6tEDsV8DJcf62/xv6I71vVD3Ac275zRvxB6x/601EDmQQtbeSc/t
        G0+5Ndm2uhDxf0b50iUDUfOqc+oL+LN9c9gn7Dpk3YCBgIGAgWiOgUhfRq0LOVC2XZWxDFMXojsAcZz3
        8X3pf3nqttEcFN4XdR8AEAAIAESTACLr0qQf8u/cxXyi8ZSh0np1ByB2CKf6lnqev/8l9ll7k+h5ZSsc
        1FoWBt4PCjlRyOpcLyljxss2j8iyeyzLXn2qgqL2WNRzs0Xd9cKSwa9rrad9F/bRrA3DaexqRb6CBgsd
        HmsAa0CTa0DtyXfX+htoSf7XbXPTVS9Xz36ILhlIUUMxLcxdyJPWP8BBEf3RqgOV52CgYOCaVyDGhl3P
        i/bO5PTaI/BAeqI3lkr5curyaMQBb/aLv5VDIgYBQAAgABAAiOYBJDC8D8/Y4cc/l4W3AYjc03QtYekt
        L7mRmjm5dD0NT7qd/WK8OBQDowCgAFAAqA4AVHi1HBB/Gy86+Aa1cqvtDC6gRNcAoif9TYY7o+4YfXrs
        PRoX4UXSPMe8c8zzwEwXrAE9rAHp1Ypmr/R60igqqCugJmpu80P0tA87vlfdeSBxZxPYkuZtS9sVqXHG
        zNpAbytk1SGr0IhZjAHWvjx9w2O0vGg5lzeV674yXRcA4jiQJSz7Ox4dba/7EPIVAARpkhhZjAOHXg4c
        wREDOSjhTgo9MpHzRCG03iyE9u9XVwBS3FzK3+yfx96iTbJeFgwADgAHgAPAte1X4tDrHzOYRm+8h3ef
        3aH7ynRd1IHYGQjFnV1Ps1PHkX+4beY5HogB1gDWgK7WgPBBLKI/VmjEIFqR9y8qbirVtQ+iKwbyceFn
        HJQylC3W/mAgOsg6MaKGDUYJRtl1RmmrTJ914FneekFhIbqtC9ENgMiZ5wtSp7BPVD9pngNAACCaz/sH
        gKKVzZUOHOrI24e23cu/lIbrurWJLgCkXsw8P1R1iGcnPc1jw67DzHPUPeAAgQOEbg8QbQAS14uXZn+h
        bwai9fxjSe9KG8vou5Pf0bOJj5BIg4P3Af8HawBrQL9rwN67z3fVn+mTPa9SZt1xZRvWY28sXTCQvLp8
        mpE5g0MS7maZBtd1DRJZIchiQ50FJLaeldgCZU3ItjH8U8kv8EA80RtL7X2Vf+Eoha67l4OivSR4AEAg
        YUHCgoSlWwmr7QBsHcijNt3L8/Lf021vLM0zkBaBTKmnk0gpwIkcgMJBpQIfDAoMCgxK9wwq0otHxPbn
        2XumUG1LbdsZXE+9sTRdByI1wfyGQvo++ytF77RN9kLeO2KANYA1YIA1ILwQ37Drld5Yh6sOk0wW0psP
        onkGIvOkXznwLHpfQbLQv2SBkbNQENopCHrvjaV5AAkri+JhqY/aNG/0vsINCAkPEqaBJFxLxAAev34I
        vZ7zVz7RcFJ3vbE0CSCiLrPNVPo5byk/trYfAAQMBAwEDMZwB6hg4YMErbmZxm95kvOqsvQHIFqsA1F1
        wDpuoh8OfkDeK/9o8z4w+xweEDwwrAEDrQE5IyQwYgDJ9kyHy3YpHoiefBBtMhB7bxgxO1iZISxmCSNt
        EwwEDAQMxHAMRErzQaK5ovyecDKCK1trdFWZrmkAiSxfw6/ssHBAeB8ACAAEAAIAMSSAyOxSCSDfHv8H
        59TnA0C6msesdqdcVPgp+6c8zMHovgsABYACQA0LoLbmsDMPTuctlan6AhCteiASRGYdfpGeSvCi0Egx
        /9xAuic+iwFy+LEecU+6eQ2M3fIwRZdEwgNxFwOZn2LhMaL7LiqvUXmOynNUnuu+8rwDBjVy9R/ZenSJ
        vhiIFmfyNrQ2UmZ1Jr+e7M2+4b1YZl9hA8EGYvQNBJ+vZ5sb9lz8bfvb6NXX8PcHF3I11eumuaImTfTz
        zRcotjSWX0x6iv2tfcBADFQ4hYl+6GUGReHKioLINuWP985m2d7dE81p2wawq11q7f9DVxQjzfXCkt7H
        mcZSWnxiMU1LHEqB1n7QWt2stcKDgQeDNaC9NeAXfgPN3TmJkio262Y+iCYZSGF9Ic3Nmsvj1w1hWeqP
        Ews8EEiYkDB7TmLqnvtPj/NBNAkgWbXZ5HcwiAPib+eQiEEAEEhY8MCQxmz4NGZRrqCULXxQ+A/9SFha
        MtFVaS67MpN8koewf8xgpYEiGEj3nICMfsLD5zOrSa2T+0f0xRod58Vv7X9RNwOmNOWBqH1gjoieMKER
        gyhI9IhB/yvtabXQz3FNsAY8sAZEtumY1dfS28n+1CgyUfXQF0tzEpbsBSN6wiiShegRY8jWBWBUOjkR
        GrbyGfHXqqc2VpQtzN3kS6fqT3EzyXmsIqvIjVlT7n4+zQFIgeiJvyz7GwVARI8YAAjmX0DChAdmGg/M
        N/wGnp3sTQcrD7KYUAgAcRbxDtVk8N8zF9gAJAoAgroJ1E2AsZqHMcm6t+eTniTrGStXNFdoH0C01AtL
        srXtlTtp9sEZ9toP9MCC1uwBrRl1Nait0ugaCBKNYyevf5A+zP+QihtOa74vluYkrLizCWxJ88YMdKRt
        Gj5tE1lhyAprrzAoI27XDVHq4ArrtT/iVnMAElEey6N3PWUHEJHGCw8AHgA8ANN4AGa/34MjBrIl4S6a
        mDGVc+rytC9hOetRePr3wwt+4qfX3YQZ6GAgYCDIAjPfAVLUggSuuYksmx/h45WZ2gcQrXkg1oxvaOSK
        32MGukY1Wngy8GSwBjy4Buwz0oNFDVz22XR4IM4yFmvmEhZ98UHZwUDAQMBAzMdAxDUPtM9Izz53UPsM
        xNkN3hO/r46wPd1UxosPzBdDpP4MAAGAAEAAIKYEEFFArex/m4vjuZ6bND1gShMmugog2WKg/Kf73mCf
        sOsAIAAQAAgAxKQAMkjZ/2IKV/C5lgvaBhAteCD2an3KqM2ij/a+SmKwCvLU4YFgDWANmHINiA4cyuf+
        Je97Km46o2kfRFMMJLEimefsnMhysIpWe9WYPc0Qnx+V8aiM92xlvAQQeZ8tzvqEj9flapuBeMLTcLb5
        lyphRZ2N5VdSLewf3hsAAgkLEhYkLFNKWJYoL2X/ezdjDu+rTgeAdAQoABDPnmhwYkR8wej1M9FRBZC3
        j8zmPdX7tQ0gWvJA/nNmBT233YcCw/uaUvtEfr0H8+vhJ+Ce0s0asPUAfP3QC7Sjchc8kM4ykPl57/KY
        5PtYFtHgxKSfExMYDhgO7ld33q82CUv0BOS1Z9dpm4FoyQN5O/cd9k6+V8xBt+VBo9kcms3BtIdpb9YD
        yujUxzmiLBoAAgaCEyoOBDgQ4UDYuQNhiL156NM7HmFraZS2AURLHsj8vPdISFgUbBWz0HWjV0K3x7XC
        GsAacP8aGJn6GFnLouGBgIGAgYCBgIGAgXSOgaiS3cgdj2qfgWjJA5mfOpnHRPXF/AvMv4AHBg/Q9B7o
        yKjebM3+l7YlLE0ByKZAHrP6Wg4WLY1xYsWJFSdW506siJdB4mXf/0au/AOL8RbaBhBNeSApFhojGilC
        T3W/noqYIqZYA/paA3KshfXoEnggnfZAUiyilft1kLAgYYGBQsKChLX6jywARNsMRFMSFgDElL1/zJrn
        D8nJIJKThw58goEAQDoDUGovrPkAEACIOHkDUJC1Bw/0RjmZVfsAAg9EX7oodGxcL6wBc6wBeCDKRF9m
        eCA4UeJEiaw6SHbOSXa6YCCd2eA7AoCu/hwSFgAGAAOAAcBcCjAAEDAQeBrwNODpeMhkNjrg6AJA4IGY
        Q0+Fbo7rjDWgrzUADwQMBAwEDAQMBAzEpbomXTAQeCBIG0XaLDwoeFDa86AAIGAgYCBgIGAgYCDGZSDw
        QPSli0LHxvXCGjDHGoAHAgYCBgIGAgYCBmJcBqIlD2QB2rkDcAA4AByzA469nfuoFX/giIzFaKbYUaGh
        Wkg4Z+90fjp2AIdEermE2EbPC8fnc66SF/FCvOQa0FuSiDoT/Yn4Abwq/9/aBhAteSCv5c6j4cl3UmjE
        QMwEwUx4rAGsAVOuAQkgEvQe3XE//VIajnkgnWUg8/Pe5THJ93FwxAAwEMyDMP08CDAoczMozER31kQH
        gMAD0aHkoDeJBO9XH3U/ABAnAeTt3HfYO/leDhESFgqbtFfYhBOxuU/EuP7dc/1VD2TE9qEcXhoJD6Qj
        n8Xe8Z3ey19Evpvup2DrAFNqn8jvN0d+P64zrvPV14CXsv/57RxBMeVx8EA664F8e2opT9oynIOs/cBA
        4IHAA7GvAUhO+pCc3MfQbFmosw48y1sv7NA2A9FSHciqMiu/uMOfA8L7AEAAIAAQAIhJPUEbgMw7/Aqn
        Ve0FgHSWgUSUx/DM1CAAiNkLqfD5cYAy9QHKDiBHZnFatcYBpCN/ojt+rnoga87G06upIeQf3hseCGoA
        sAawBky5BixRg5TPvTDzTTpQcwgeSGcZyPbKXbwgbTr7hvfCCczUJzCzad74vMi6vJh1aYkcpOx/y3O/
        5cLGIkhYnQWQY3U5/Mm+19gn7DoACAAEHgg8EFN6ICqArMr/gUuaygAgnQWQ7Pp8/nTfGwAQeAA4QOAA
        YdoDRJCdgUSf+IXPNp/XNoB0h8fR0WuoHsjppjJafGA+jQn7sym1T9QHoD4AawBrICjS1gswpTie6rkJ
        HkhHDMTx59bMJSwHqUATRSW6+/Lq4THgftLP/RQoAERer+xzB5VeHs7sn939+7/r7hfs6PWsGd/wyBW/
        B4BAwjCthIHCQXMDfqBsJhsxgLPPpgNAOgKM9j8PL/iJn153kw1Aogab0kTDBmLuDQTX38TXP9KLA9fc
        RJaUR/h4Zab2AaQjf6I7fy7ZWkR5LI3e9RQ8ENQAYA1gDZhvDYhGspaEu2hixjTKqcvTtP8hsUFzElbc
        2QS2pHkrDCQ4ygsMBO3NdTdRDgzCxAyii/erRUhX49cNoblZc7mw/qT2GYizEpOnf3975U6efXAGAAQe
        CDwQ1IGY7gAZaO3HUxIfpI/yP+LihtMAEGcB53BtJn909G8KgIiSftMtID3OcMaJGyduZHm5J8srwNqX
        Z2x4nH45LWpAms5pH0C60+Po6LWkB5JfX0hLs79UtE9ZkYm8eOTFYw1gDZhlDfiJPoCvbHyatlRsoeqW
        GnggzjKQ0uazLDKxFAYiKjLBQLqoqYLRSC8NDAEMwT0MwdP309jwXvxa8hjKqM7ghtYG7TMQZzf47vj9
        g6WpNC7CSwDIAA7GBooNEACAuiiTeIJjVl/LbyX7UV1LnQIe3bHfdqVQUVNZWOKDKAE7XplBI5LuYL+Y
        QRwqakFwgsQJGidofZygPX1CN/TzixoQ7zgvfnv/S7aNUGr6Yk/sygbvaQD6XUe+RHf/XMYss+YYPblv
        BPmuvYVCI23zgfFADLAGsAYMvQasA8g35UF678THyrZrww9tf2mKgaiom1eXTzMyZ3BIwt0cHDEQDAQS
        DiQck0g4hmYYHaRlB4kU3klbhvO3RUvbGIinGURXn1+TAFLUUEwL8xby5PUPcJC1PwAEAAIAAYAYvi5I
        TGLlOTsn8vpzGwEgbQ6QnYc58++K5gqyllj5+aQn2d/aBwACAAGAAEAMDyBikJ4yUO9oXbZ+AERrCpvE
        m/rWBjpSdYReS/YmOd5WZGLBA4EPhDWANWDoNeC9+hr6/uAHVE318ECcYRyXZRkIEKlsqeR5mwPYJ/x6
        MBAwEDAQMBDDMxAxB4mtR5cotkSX9k81nbUb0oA16YHIALZQC886/CIPWzeYZSYW0jiRxokBU7Y1gLR2
        Y6W1i7EVyv42bNPdHFa0sg1AVBzQdBpvV114d/+9PWgKAr9b8CGP3Xw/B4v0NgAIAAQAAgAxJoDaDsiT
        9wdz4vlN+mIgWvNAHPOf/1Oygp7b5kOB1r6G1j4NndsO3R5rF2vgqmtA7fn3sWgiK5rJ6qL+Q8UNzUpY
        Eoa3V+7iBWnTWRrpYCBgIGAgYCBGZCCi55+yv8lprLIXIDyQLpo4agDPNJ/jfx5YwGNXXWObD4L5CNDA
        4QHAAzFYUkmQfQa66AGoeucw0buSReCIwMtyvuGH4uwMBDPSASAAEACIkQBE9L8KWHMjBWx+iHOrjinb
        ppZN8/bvT3O9sBw9GRnL/55ZRQ9su1vREGW2AvwCxABrAGvAMGtAso9199BzR1+kvPoCXfkfmpyJ3h7h
        NlZs5mf2hmLELeoADF8HAI/HfB6PnEA4fcNjtLxoOZc3leuPgWidMh2ry+YvsxbZRtxiwBQkLEhYkLAM
        ImFJT9c/rBfP3vA0pZ5P5ZqWWgCIuwGpmup4Q1E0hYiuvEGRA7GBYgPFBmqQDdTsjCs0cjA/taYPv5AW
        Sucaz4nyc5t3Dg/ETcUldjOdMir2kSXhLgqMFgU38EHgA2ENYA0YYA2ERgyiJzbeRjOz5yjehx073LR7
        ds/TaLIOpD0CZ9dmU8jBEA6Mv4NDIgbhBIoTKOqC4Inp3hPT4/yPy7KwtEyZ1HKS0w0l9En+P3hK4kMc
        KIauoBeQsXoB4XriepqxUNgv/AZ+K20ap1zYppu6D10BiFpLUt1SQ9sqtvGspBHsJ0wn2d7djAvO7Jox
        Pr/5spSMWHkuPpOyf41a+b/8r/T3uIrq9Asg3aOUuf4qii4oHhVNFTRnWwiNjuwNH8QA+q9h8vhxLeDH
        uLgGxkT3pzU5P+rS+9B0L6z2Hohamf7q8Td4WNJtLM0nMBD0xgIjASPRJ0Oxdd8V9W0s69z01PtKdxKW
        Y3v3n0tX84ztvhwY3gcAAhNV9yYqANCcACi778pr/3nWIjG+9jgAxNN5yypCH6/P40/3viaaK16L5ooA
        EAAImovqsi4sULQvCYrozynF8dzAzfoGENfdie77SzU/Wn7/8egXNDzyevTGclF3hfeAPlJYAz25BrzI
        Ikz0yesfoMLK47r2P3TRC6u95vZzyUoeuvUem4SF7ry6PIEhbRdpu2b1MCXzmCTAY2HuQi5qKNZd5bnu
        PJD2b3hP1QGef/g1W2+sKC9soGhtgrogFJbqwhOVva/8wq7n2UkjaW/lPq5rrQeAdHch4oXWGo4/GU6W
        iAGiN9YAAAgABAACANEFgMjeV8PX9OVZeyZRfYsNPLp7/3T362l6Hkh7l0XtF3O0Ip0mrPuL0BJ7UsvE
        a0NLxxrAGnBiDVgHkO/mB+m9Ex/rtvdV+z1ZF72w2md5FdYX0tysuTx+3RCWTASaOjR1s2rq+qyDMOd6
        9Q3vxQvSpvP2yl26rTzXtQei9sY633yB1pTG8ouJjyv99NHaxJw3JOoozFlHobcDo9q6ZMQv/4+Xpr/L
        NdwIAGkT8Ow5tt357xZqpZKGEn5t71QeHSeM9EhbZSc2FGwoOJHfCEauUU9oYvIjvO5UhK7rPi5jIN1X
        zeG+V1K9kE9PLSbLr4+RxdrP1o9H5FdDk3VCk0UtCdYL1oBH14BkH7LyPDjKiz7P/jsda8jVfe2H406u
        Sw9ErUwXWqKiKQptEQwEDAwMFJXpmszKFJNUlf1p6+lEbuQWYzEQd6d1dcfzOTYf+zrvC75z/Q0oLASA
        AEAAIJoDkGA5hnvtnfTcvvF8vDqrLXO3OyV/T7aa0iUDcQxIkuhmOWFvkK03FgoLNXcDwZOAJ6E309ud
        79c/7AZ+PvExiiiN5vPNlbqv+zCEB6JqcJKJlDafpfD8H0lUpZOdKnpU04THAo8FawBroLNrwCeqH729
        YxJVNVcZpvZD9x7IZTPTz6UrDCRQ0kVUZiMLR6NZOMgSNFeWoMXan4NShvLHhZ8ZJm1X13Ug7Uv/1bqQ
        U3Unaf6R13hiwn0chMJCAAgABEklPekJ2kfW+q66lv+2azqnVu1pAxC5Z3nSk+gOD9rx/eveA5EBq26t
        pa2VO/ilDU/y2NXXSRaCG6gnbyBs4Fh/Jl5/oku4cv2HJXjxspyvuYlbjMtA3Fed0TPPpNaEtFALLdr1
        PAVEeyk5153VKPF70LOxBrAG3LYGlFo02/4zcZ+Fks6nGKruwxC9sH5rZnpEeQzPTA3iAIy8xQnYxCdg
        d2YRwVN0PosuyD6yNrzgJxZJPoaq+zCUB2L/MG0XqEJ0mVlyYD6P+OV/sIFiA0VdCOpCuj+pJtKL/eNu
        Jp/Upzj9wn7D1X0YDkDaf6CkojX87KanKFRcSFkXIoe44ESGZovolYZecd2RBRcQ3psnr7ufPjvxJZc2
        lRuu7sNQdSBXmhdysqmE/n3iO/JdezMFRg8iaWi5Td/EcyGWWANYA7+5BrzIP3ogvbl9POXU5lBja5Oh
        /Q9dzkTvTJrakeoMGpo2lH3ibmIbE8EJHCdwnMC74wRuZs8kyNqPJ20Zzt8WLTVs1pWhJSy1LuRMYyl9
        nv8FT024nwPD+2BeCAAUnhg8MY95YmrZwOgVf+DP9r7O+Y1Fhq37MDSAqI6VpI45NTk8c/cEMS9kEOaF
        AEAAIAAQjwGIqnBYkv7C0SdWGDrrytAeiGOPLFkfsuT0Mhq/ZRgFhfdVdFt5UoAfAk8IawBrwF1rQJ33
        IWd+fJj1Dh2uyzK872G4Xli/VRdS0lzOS9IX8JiwP+MEihOox0+g8BjM1etKvd7qvI8DZdsNn7ZrCgnL
        cV5I1GkrB215wt7ufXD354UjjRhJDJAQDXmAkyUCgeF9+dn4+2lx1idcUl9sAxDR7kpFks4k/ei5N5Yh
        emFd7QKcaCrmpblfU4C1LwdFDgCAANAAaAA0twBaaORgHr6mHz+XZqHjdbncRM2Gr/swhQfS5oXYTgKU
        dyGTpm94zOaBRIo+NfBC4AWhngNrwOU1YPNSLcJbDUx5hP5x6mtDzvroTHdDwzMQiZhlTeW0vGg5T9/w
        KEsmgroQ1MWgLgZ1MV31rIS3qnisZ8RQO7NIVqbwQFRJS60LaRX/T7loKzDz8PM8Yt1NHBIhKtRhKsNU
        Rq8oSLpOSrrS9wgRKsa4CC+evH00x5+JNVXarqkApH2zxcQLKTw7NZR9Vl0DAAGAAkABoE4DaGjUYPaN
        GUSPb7iJvy9cysVNZ9oARD2w6tkUd9b0/11ndC69/470QewXlSKzl5El9paL+i/8EGjhLmvhqKdwVz2F
        Hp5H8VAjBlBg/O0UcniCMM6zbd6HbcigKb9M4YE4nggO1WTwR5kLFAZiiRJV6k5SWPw+uhvDQzOvh+Yb
        fgPP2jiSdp7fyTUttabLujKdhHUlSpZakUreqY/Lvv1Sz4SpjrROSJqQNH9b0rSPyA4O78cTNj7MX+R8
        QrV28HBW8jHa75uKgaga5fnmSlpWvJynrLuffcOuxwx1AAgABADymwCizjh/KPZ6nnf4Vc6oV9qVqOxD
        0a9Mm4VlNuHOXqVOtc219HHayxQccxNZIgeiVxZ8AHhBWAOXrQFb/zwvsoiH965hFFEe29bryszeh4ob
        pmIgDqcE5cSwvXIXL0ibzr7hvXACxQkUWVnIyrqiJ6r2uko4GcGVrTWmTts1vQdiZ5sKgMj//OfUjzw6
        5S9KXrfih8BUhycESQ8HKjuYBgnfY2LcXfT2kVc5V4yIUJUrhxIBc0tYRjN1nP08+Q2F/Hn+p/RY4o3s
        FzOIZZ43smzMm2WDLDtk2clWR3IdjIsYxN6xg/j53SG0u3ofN1Cj6bOuLmMgZvNArjRHPac+j8Yfmazk
        d1tEnjfmhqC+QQ91CXiPnlmn0jSXsfWJ7k+hO0bS0tPLTdvrqiN8MKUH0j5roqG1gTKqM/i1ZG/hh9wA
        BgIJBxKOiT0xNevq3pSb+fMTX3F9S71ps6w6UnRMDSAO2XckQIQji8L4lRQf9l19HTYQE28gkDDNLWEG
        CRUiILwPf3b0fc6oPQbT/CppyqYGEAcjTDlhnGut5H/lfsP+6++mkEhRpR4FUx2eADwBMwGqJaI/h665
        hWamBvGBit3qZChb0o293MPMdR/wQK4i6sk1cqg2k/52bB75rb2VgkTut6KHol8WaiRQI2H4NSC77AZE
        D6IXto4R9R4xVNVaY6r55h35HVf6uekZyJU0vqM1x2jUvlEsQESk9g6CJwJPBJKmCSRNi7U/B6UM5Y8L
        P4Pn4Vg0Bwmrc60G1Dg1tDbSnsq97L/Hh4eu7cPjIs2tCZtJwoBkZz7JTjXN708axB/mfMBnmsrQqgQA
        cjECzmiWjoWGv5RZ+dmto3nsqmtxAjXBCbSrE+rw97Yph3o7cARFDqCx4b14wZE5vL/2cJtpDs/Dtode
        bf80xTwQZ7U9e5E6NXErhR3/jkJjRX1I5CClJw5qRDyTe4+aBsS1u9eAvJdlm5JxMTfTa8ljKKviIOo9
        nNws4YF0gLDH63J5cdbHtvkhMjNLhycsvZ0I8X4hmXbXyGnJPCR4yDowmcrf0YkbP7+UkQBAOgCQFpHI
        d7w6ixZnfcJT197H/uG90f4dpjokTR1LmpJ5SIAas+oafnmzN0cVhSl1YG2Nrkzcnt1ZgASAXAVA1HXU
        KlRAyUTm7X9BGUIVZO2HDUTHGwgYjskZjpCjRcsifm7TcF5VsJzLW87DNO+kaY46ECc1PruBpGijsRWJ
        9NreaWRZc7Pih9g3IsPnx3e3No3Xgx/iiTXQNtsjejCNXzeElp/4FxU3l6LWw4U90dTzQJzJymqPuBsr
        NvMze0MVBiJABJ4IPCHdZR2ZmYFJ5iHBY27WXC6sPwnPowMJvyNJCxKWkwGsaqnmDeWJ9OzecRwSexsH
        i+Ijtf0z0jj1mcZp5g3VDEkhqucRFNaHgxLv5XePvU0SPFqoBQDi5P53mYTVEcLg5xezDlRPpLKlitae
        XcfTdvnzGDEvIDRioI2RYKIbGBkYmaYYmXJPyqQPkUHps/52XnR0AR+pw0xzB8ujSwOxUAfipP6n1oiQ
        CPvSkuU0IdWbxkYLAJGLFH2z4AehZ5Z21oDMthLXQ/a0k73tZmW8RHtq0uF5OLnnXe3XIWG5QOHsIKKA
        +LLi5fzI1nttWVlimqEZJAFIPibPYtJTGrdgHhI8ZG872Z7I/oVeVy5mXUHCcgEwHE13RcYS9EON/7nm
        Cg47vZoEiLBv9EApZ8ET0dMGA8lJU5KTWw5g6kja8AH8xNr+PG6/ReltV9taZ7ttHe5fSPRXb1XSUXzA
        QLoIKDLAAkRIMpHxqaOFJyIys6w2TwSmOkx1t2yIAGSn7idFThYHuacTbuRXDk7nxPPJYBxuYhyXMRA3
        ymGmfCrVE5Hfl535L03Z6Uv+MfYaEXgi2tHD4U0Y/1rYPQ+LqPMIjL+Dnj/0LG2p3NHW38p+VjTlPuWp
        Dw0G4gYG4ihxWUujeOSOR+GJgIGBgfZEVqJgHhI8Qg6GcHZtjk2xQmsSjzEwAEgXF5hcm44LtF701Flf
        to4EiLBfjGi+aB2A3lmQYJySYJCk4FySglrnERLej4fHe/GMQ8+QBI/2dR5oz263gNwIqACQLgKI4wlH
        vS4CREgykefSLOwbJ7r4oncWNlAwMg8yMi+lt5Ws83j7yOucWrUHva085HnAA/GUGOjwvKovEnY2ml7c
        PY6C19yC3lnwIIzvQXTzNVZ6W4k55sH23lZvZL5KYiAU6jy6YY9DL6xuQmj0ztLfhDpISM5JSD0ZL/S2
        6lmPBxKWGyUsFZMcPZFGMddw27ltJBowcmDMjRwY3geeCDwRSHpdkPRUz8Nn1bU8KfkRXpL/pb23VStM
        cw/vZ5dJWMhS8ByCq56IABGSTOSd9Fk8LuEe9gvrhQ2kCxtIT554UdfR84xSjqH1Db+BZ6aM4f8WfM95
        jSfheXSTogIPpBv1QfWlVE8ktWYvfXhoLk2Ou0fMYsaMdU/MfMBzGneWiNLXKnIAhUbfTLM2jqTIotV0
        tuUCPI8e2NPggfQQYmPGes+fYMFg9ONxtGd8knlI8Nh5fifXtNRCsupmyQoSVg8HvIVauaA2n8ILfuJJ
        a+9h75V/5HEikwTt4NH6Ba1vrtz6JkTeHyJN94EkL557eCbvK99BKnhAgvecBH8lTxcA0oMA4lC/Q6XN
        Zzku9z/80vZAfiJhIAWLCtoQTDhEN2M0d7ykuWOwAA6/qIE0Jvk+XpTzPu+uOcAtonTXYXNDpbkbCwOd
        BWTMA+kB/VD1ROT3NRXraeKBEApJuJtkDx+Z126b3WxcLRufDdf2amtAXf8WYZaHxNxMz/z6NM3Pe5eK
        G0+39bXqgdsWL3mFCCCNtwcZiXqKOlRzmGZkzuAQkaElmQg0ev1q9MjScp/HFWjty9O3jeGfSn7xWC8n
        Z0/c+P1LJTMAiAYApLG1ifLq8nlx/pc8ceNQHr3yj0jzRZqvB1t/aBOg5fjZcVGi9U94X/JefQ0v2PsC
        by5P5sqWakhWPZT00xFgAkB6EEDsjRiVayT/k9t4gqNPruL3tk8ln/DrWZ7A5JRDcWMBUAAohgUUtTAw
        WDQefSqmN/tufpCWHVrEeyp2cQ01tN0faIZoQxEtdReGB6IhZVP1RvafS6N5mwNo3Lr7KGCN7Pcja0aU
        UyO8EXhDhloDF/2OQTQh7i4K3jGC3j/xCdVSI/wODe1Nv/VWwEA0hui24xZRZUslz8tdwD7JQ4QvMgAM
        BAzEsAwkOMqWxv5q+nROqtjErdwKz0OjkhXSeLUIGHZu7pjmK++g0qZyji2J4Td2TyGfsOtkW3gOhaSF
        JAO99xJTZ5ZHevGYVX/i8XF30vLcbzmj6gjXtda3SVb2zUpTko3WJKSefj9gIBoDlPYDqqqojn8t30Sf
        7Z/D3puG8LA1fVhoxWAkYCQ6ZiReFCgOQ4/HD+CXRR1UbO6PVNhYdPHMLSi4Ch49vUHi9a/uucAD0bjO
        qPoiOfUFNL/gAwrdMVLRitt6aWHuuqE8AWPWyFz07mQjRJkUMi3xYZqWPpFiKxIxs1zje9DV3h4YiMYY
        yJVOPGqWltCGFY1YaMW21ieoXEflus4q1yXzkODxVeFXXNJ4RnNZRWAczmV5AUA0DiCqPaLy+9rWOj5W
        lan00vLfPZofX9uPLWF9IGlB0tKspCUryv1EE0TvX+/nT7MW8uGze0mCR6voC2f/gmSlE9McJrrGAeOq
        J6CLuSlKL611FRv5w6N/46mbHqex4b04SJzuUDfivkpoNDe8cnPDjjolqHUdFtFVYaxI/giKuZHm7JzI
        P51azscb8mGS92DvKnczLHggOtQfVV9Efj/RVExLC5bQ3E2+NN5eN2IRdSNydoJ8SL3ZmLo6+klp7rrK
        7CqlTsdL8ejGx99DzyU+Sot2vUCJFcnUYkvPxfwOHe45qAPRKUXszImhubWZTtWf4rk5b/HYTX9B3Yje
        01x1//5tdR2z02dwXHkCVzZVoq7DoPsPPBAdS1qOdSPN4nx3WujKW8qSeWHGm3TP5pt4VFRvkfLbHzPY
        db8ha7N3lSrxqZJVQNgN/OjavtKbUzw64dVxdUuNpBzoZQUAcUjTNpCG15kTvpZ6z7R/v+1N9mYxLeFA
        zSH69tR3/Nf9M5QZ7GNWX0MWMVdBSB7IWtJZ1pLWu/sKuZSFQU5jhNcxK2Usf5n1d06oSFI8Osc9E3Ud
        xtw/4YEYSI+0A12bzry1Jo2+zHiHXtkwTPgjQ5R5IzIjRtXO0VsLPoqzPkpb7yrhcwRG9KfQuNtpRtIT
        ND8lmKKLrFTRqnTOhddhsH0FHohBKWRnGFRGTSbNzZrLE9YNYTsTQdov0n67nPYbEN6HZ6YGcUR5DDwO
        k+4v8EB07IG0JdFf0kRLUZwvuaEbRGfTwvqTfPBsGi/O/gdbtj6hzFvwF5q16PQLjwQeyVUPFKrHIYsA
        R6/8Xw5YM5jePvIqbyxew/nVx/l8C0zyS/Q6E0n8ABCDAYgjI2k/b0T+LKfhBK85HaXMW3g51cL+8bfy
        2NV/pqCI/qhst7OSjuocDP9ze7PD0Egxi0bOJBceh5xPM3XzU/zxvtkck/sD7a7ex3Xc2HaGgcdhTI+j
        I4UDHohJtMr2/oictxBxLo7eS5+teCST1j8gPJIbRf7+ACWPH3UkJvRH7HUcIeL6y1oin1ixDtbdQy8l
        PaXMp/n+xD8pq6ngEo9DmT2AL9NGAAzEwAzkShJX+xNFfUs9763cRwtzF/Lk9Q+wjYloO20U78+z10c5
        PAg29uCvd/KMoy/y+vL1ynwatfWIlrMSOzox4+fO9brqKF4AEJMBSPu0X7lAxAwGKmoo5vTyXfxT3j/5
        2f3j6e7Ng3l45PXsv/p62SKFxkV4qW1SADAGAVg5g1yRqcR4AF/RCmfsqmuUOo4xu4bT4qxPeGN5EufU
        5XGVmEl+qUuOdutm9TzaAwoAxGQA0t4jsd8IbfvDqaYSTj7/K/27+Ef++vC7/E7adJ6y9Wl6JNGLvSN7
        syVc9NuKtFUao1eUa72itMCgZDaeTKIYEdtPmUG+QFznL/bN4X9lf8UxZ+PpeF0uy+LU9uuj/byajk6o
        +Ll7T/xaiyc8ENOql5d/cImljo/y5graUZVGS0//QNOPvkAvbfGhKeseoIC4m4VXMlDRyTGrXeNeSZuv
        ofaoGqDUA8m6oJcSn6CXdo+n9ws/oe2Vuyi/4aRkGpd6HLb9D1+IwBUjAAZiYgbSGY/E8QSaXpXOi/I/
        4rE7h9kYCCrbdVfZL5nHhHV/UeqC1pTGcklDiXKohSRjziyqrjIaAAgApMOZ0+oGUy/mVZ9uLJGzq2nr
        6UT+4NgCtiT9hYf/8j9KXYmc+SD0dB4XaTNhpcau9VYcRnt/SsyFRyM9q0BrX+FrXMtPRlyreFqz0qdz
        dOEvnHX+oFIXdL75ArfYZnIAQBwQFEkC7Syvq9S1AEAAIB0CSPsbSoasUfTcSq/N4PiT4bzqyOdKXcnb
        ac+wX8pDPHRtH6VuwD9ceCYiqwueSTdkTYnZG7LQzy+sF4+M6KV4VtO3+fBX+9/kFVlLFE9r64VUPtdy
        AYBhokK/rjKMjv4eHgi0Tacj0N4rkf+WdSVbKnfQQqGnP5M+WakbeClpGE1Y/xfhmdyieCYXfRMvm3eC
        eSXOzWpxmLdhiRqkeFCybicwWvSlir+DnkkcSq9vHE1ztocontVPJSuUeTFXul5OX3T8ASJwhQiAgYCB
        OM1AOqL4ol5AqRtIKEvgudnz2G/nCHgmnspaE8zDknAnhRwM4SUnvuXDVYe5UYA5PA14Gp31ODu6n6/2
        cwAIAKRLAHKluhIlpOI/F5or+WTDKT5anUkHyrZzwskIXnz8E345fRqN3PEoPx11g9JbySfsOpKN+ZSR
        vGJDHGdPEzajh6J6GKERgxQ/ScZEthKRHtOoFb/nYQlebNkzlj7KXMA/5v6Tt5/ewPkXjlJ2bQ6faSzl
        +taGyyQqtTeaqtx0ZcPoSNLAz42dttv++gJAACBdApD2C0rZpNo1c1RN2srWGs6uz+MtF7aTtTSKI7O/
        5/8c/oT/se91kl1dJ2x5ikck38WPxvdT5kvI4jZ/ax+p7dvmmQhwkRurKH7TrUnfBhCRojBTgoT4TKL6
        nwKE4e1n7a3MEB8VeQMNS7pN1Gfcz5O3juB5aVMVjynsyJccXvAjx51LpMM1mXyysZib7TV9joxDjTcA
        wxYVAGbnTXFn4wUPBMqmxyNwJQ1e/d8k3GTV55JsCf5N0T/p9dy3aMbBacp8ideTx9CLog/TNKHtK/NM
        Eu4i3/hbaWzsYAq0eyqqryL9AOkLyD5etofdY+lmn8U2E9xWcyEfF70K6VfYfKCAqIHkE3cT+cffRiEJ
        d4s+ZPfT9A2P0csbh9Nfk8fSWzsm0avH36D3ChbRd8XLaPOFrYrH9Ftx9PgFxAsgAr8RATAQnFA0d0JT
        T9CZ1ZkcK2oVvjnxjVK3MPnwZB6+fyQ/tnWIbj2VUME8/NbeSkPThvLYA7783JHn+N2cd2l50XLeUL6B
        i+uLkSWFLCndeFgAEABIjwGIwz5xyQ2jAkhDa6NSqyC0faVuIVf0ZTpac4wzRR1K9rmDvPtMCq87Gck/
        5/1L6d30fsZflVqHCbv9FI9l5M4neOS6m3nkit/TyNV/ZIeHe/+96n9tz5cyhJ/e+Rj7pD5Fz+wN5TcO
        vch/F16FaA+izAjfWBTLB0tTOfv8YcqozuCs2uOcV5fPpxqKqLypnCubq9T2IVeMh11e6LHr1R2mrLMS
        Cn6/ZyU6AAgARPMbkgooDjq/ssHK/0hfpbjxjNK7ScyC522i1mHd2Q2Kx2Itj2FrwX/YmvENWY8uYYeH
        e/+ducT2fMWrObwsmqPK1tDGis2cWpnGh2oyOL++UJkRXkuKwX0Zw2j/+aDZe06zB+C4F3DggUDd1G0E
        ruataPlnug043jgi0C4CYCBgIJpnIDiR40TuwD6xXjXkEQFAACC4ITV0Q0Jica/Egnh6Np4AEAAIAAQA
        opusHwCCZwHB2fjCA4GqiQggAogAIuBSBMBAwEDAQMBAwEAcU/ywHjq9HgAgABAACDaMTm8Yzkoc+H1t
        SU7uvh4AEAAIAAQAAgABA2mLgDNZj/BAXFL+8EeIACKACCACYCBgIGAgYCBgIGAgrjEQd2tieD5ja564
        vri+zkgcWC/GXi9gIGAgYCBgIGAgYCCuMRCoeIgAIoAIIAKIgCsRAAMBAwEDAQMBAwEDcY2BQKM0tkaJ
        64vrC88CzSg91YwSDAQMBAwEDAQMBAzENQbiiu6Fv0EEEAFEABFABMBAwEDAQMBAwEDAQFxjINDIoZFD
        I4dG7imNHPuLsfcXMBAwEDAQMBAwEDAQ1xgIVDxEABFABBABRMCVCICBgIGAgYCBgIGAgbjGQKBRGluj
        xPXF9YXHBY/LUx4XGAgYCBgIGAgYCBiIawzEFd0Lf4MIIAKIACKACICBgIGAgYCBgIGAgbjGQKCRQyOH
        Rg6N3FMaOfYXY+8vYCBgIGAgYCBgIGAgrjEQqHiIACKACCACiIArEQADAQMBAwEDAQMBA3GNgUCjNLZG
        ieuL6wuPCx6Xpzyu/w9rObp7bMXXWgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="GASTOS_POR_CONCEPTO_por_año.Text" xml:space="preserve">
    <value>CREATE procedure [dbo].[mostrar_gastos_por_año_en_comboboxAño]

AS BEGIN
SET NOCOUNT ON;
SELECT DISTINCT  
      DATEPART (year,Fecha_del_Gasto) as año
FROM           GASTOSVARIOS 
WHERE GASTOSVARIOS.TIPO ='SALIDA' 
end

</value>
  </data>
  <data name="TXTGASTOSPORMES.Text" xml:space="preserve">
    <value>CREATE PROCEDURE [dbo].[mostrar_gastos_por_MES_en_comboboxMES]
@año int
AS BEGIN
SET NOCOUNT ON;
SELECT DISTINCT  
      datename(month,Fecha_del_Gasto) as mes
FROM           GASTOSVARIOS 
WHERE GASTOSVARIOS.TIPO ='SALIDA'  and DATEPART (year,Fecha_del_Gasto) =@año
end
</value>
  </data>
  <data name="TXTMAYORESGASTOS.Text" xml:space="preserve">
    <value>CREATE PROCEDURE [dbo].[mostrar_mayores_GASTOS_POR_CONCEPTO_por_año]
@año as integer
as

SELECT    top 5 CONCEPTOS.Descripcion  , convert(varchar(50),SUM(Importe))    FROM GASTOSVARIOS INNER JOIN CONCEPTOS ON CONCEPTOS.Id_concepto =GASTOSVARIOS.Id_concepto 
WHERE GASTOSVARIOS.TIPO ='SALIDA' and DATEPART (year,Fecha_del_Gasto) =@año
GROUP BY CONCEPTOS.Descripcion 
Order by SUM(Importe) desc
</value>
  </data>
  <data name="txtCrearMostrar_usuarios.Text" xml:space="preserve">
    <value>CREATE proc [dbo].[mostrar_usuario]
as 
select USUARIO2 .idUsuario,USUARIO2.Nombre_y_Apelllidos as [Nombres] ,USUARIO2 .Login as Usuario,USUARIO2.Password as Contraseña
,Icono ,Nombre_de_icono ,Correo ,rol
from USUARIO2

</value>
  </data>
  <data name="txtCrear_base_de_datos2014NORMAL.Text" xml:space="preserve">
    <value>CREATE DATABASE [BASEADA]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'BASEADA', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\BASEADA.mdf' , SIZE = 5120KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'BASEADA_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\BASEADA_log.ldf' , SIZE = 2048KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)

</value>
  </data>
  <data name="txtCrear_base_de_datosEXPRESS2017.Text" xml:space="preserve">
    <value>CREATE DATABASE [BASEADA]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'BASEADA', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.SQLEXPRESS\MSSQL\DATA\BASEADA.mdf' , SIZE = 5120KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'BASEADA_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL13.SQLEXPRESS\MSSQL\DATA\BASEADA_log.ldf' , SIZE = 2048KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)

</value>
  </data>
  <data name="txtCrear_base_de_datosEXPRESS2017NUEVO.Text" xml:space="preserve">
    <value>CREATE DATABASE [BASEADA]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'BASEADA', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\BASEADA.mdf' , SIZE = 5120KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'BASEADA_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\BASEADA_log.ldf' , SIZE = 2048KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)

</value>
  </data>
  <data name="txtmostrar_permisos_por_usuario.Text" xml:space="preserve">
    <value>CREATE proc [dbo].[mostrar_permisos_por_usuario]
@LOGIN VARCHAR(50)
as 
select USUARIO2 .idUsuario,USUARIO2.Nombre_y_Apelllidos as [Nombres] ,USUARIO2 .Login as Usuario,
USUARIO2.Rol 
from USUARIO2 
where USUARIO2.LOGIN =@LOGIN
</value>
  </data>
  <metadata name="FolderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>461, 56</value>
  </metadata>
  <metadata name="ContextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 95</value>
  </metadata>
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>281, 95</value>
  </metadata>
  <metadata name="Timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>370, 95</value>
  </metadata>
  <data name="PictureBox7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAB8
        GwAAfBsBXGEEDQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAFqYSURBVHhe7Z13
        vFXFufdfu74qCNKr9F4VRAQTozHGFK9XE0P0vqbca2K514K9xnYVxYa9V7qIqKA06SogAtKiscRezznU
        U5LovM8c9sYDnLL32jNrzcz6/vF8jgl7rz1r5jfP7zuzZs38H6XU/yGoAzSABtCA+xooWdRoL4nfSoyS
        mCnxsUSxxDcSX0qsk3hS4myJARJ70q7ut2tSbYT5A0BoAA2gAcc1IEbeSuIGia8kVB5RLp99TeL3Ersn
        ZTT8rpsQQsd3vOPTcdzsOLQL7RKHBsS0h0hMlPhnHqZfEyB8INc4nVkBtJvVLgAAAKABNIAGHNOAmPSu
        EjcZMP3qYOAjue6ZEnvEATH8hrvAQcd3rOPTWdztLLQNbROHBsSY60m8aMn8qwLBK/IbDeO4J37Dzb4D
        AAAAaAANoAFHNCCG3FFibQzmnwWBv8lvtcGg3TRo2+1Cx3ek49tuaK6fzg5Ou/vT7mLEh0gUxWj+WQh4
        lQWC/ujEZJ8GAAAANIAG0EDCGhADbiKhX+nLZ4W/yc9eZ9JYuJYfQEHHT7jj01H86Ci0E+1kSwN69C0x
        N0Hz1yCxQWIfW/fIdd3sPwAAAIAG0AAaSFADYrx3JGz+2ZmEUzBqN43aVrvQ8RPs+LYaleumqxPT3v62
        txj/MEfMX0PAA2jJXy1FaTsAAABAA2gADSSgATHc+hL57uxn8rn/jtd6PIqJ8B1/oYGOn0DHp8P422Fo
        O9rOlAbE/G9xaPSvYWC0qXvjOn70EwAAAEADaAANxKwBMdsOEhWOAcAdGLcfxm2qnej4MXd8Uw3HddLV
        UWnvsNpbjP9Zx8xfzwBcg87C0lld7QkAAABoAA2ggRg1IEbb10Hz1wBwfV2Gwb+HBQh0/Bg7Pp0nrM5D
        e9KeUTQgRvuoowDAI4CU+QEAkLIGj5Kw+A5GhwbMaECMv5FEmaMAsIJ2NtPOvtQjAAAAoAE0gAZi0oAY
        /+WOmn/2lcAWvpgX5SwcVuj4MXV8xFq4WKlD6tB3DYj5r3McADgTIEWeAACkqLF9T56UHwDwWQNi/F0c
        N389C1Aq0drneqbsuecJAAAAQANoAA3EoAEx1os9AAANAc9J7IKR5m6kvtYVHT+Gju+rOCh3+AmANo6v
        jcVUX/cEADQEXI024tNGUnUNAAAAaAANoAHLGhBDHeKR+WsA+E7i1KSMid+NBz7o+JY7PkKOR8jUM/Xs
        sgbETBd4BgBZCLjS5XqlbIX1ewAAAEADaAANWNSAGP9xHpp/1ZMC9bbFbTHbwszWxfqj41vs+C42OGUK
        rxPTpu62qV5MJ7HccwDQMKA3Lxoh0aE2vcm/7y3RQ+J4ibMzcYb8/YHE7mjVLa0CAAAAGkADaMCSBsT0
        Tg7A/KvOBuj/1nsZ3CsxMgMFD8nfORIfZ9YO7Pj57P/eIP/+lEQ7QMANEKDjW+r4CNwNgdMOtENSGtAj
        Xol3AgSAmgw+1/+/XOrkJom9kmobfndrXgAAAAA0gAbQgAUNiMH9F+bfqDYoeFXqpylmnByk0/EtdHwE
        nZygqXvq3gUNZJ6F6ynxXEfFaf3cR1JH7V1oszSWAQAAANAAGkADhjUgpnY+5p8z/KyRuqqXRgNO+p7p
        +IY7ftINyu8zAkYDyWpAzGwfia8AgJwBQM9+TEW38esWAAAA0AAaQAMGNSBmdibmn5f5Zx9//BIIiBcC
        6PgGOz7ijVe81Df17ZoGxPh3lXgXAIgEAGul3nZzrU1DLg8AAACgATSABgxpQAzsRMw/kvlnZwGODtlw
        Xbs3Or6hju9aw1IeRsdoIH4NiPn7dOKfi28e3IZu49MtAAAAoAE0gAYMaEDMfyij/4JG/xpIlgMAAAAJ
        yUBCoiPF15Goa+pazOt5AKBgAHifvhRfX8JoMVo0gAbQQIEaEOPvKvEdAFAwAHwCAAAAJKQCExKdKL5O
        RF1T12L8D2P+BZu/fgSwlv4UX3/CaDFaNIAG0EABGhDTaiahD7hxcVGdb2WaAgAAACSkAhISHSi+DkRd
        U9di/Ddg/sbg5xb6VHx9CqPFaNEAGkADETUgxr+vRDEAYAwATgcAAAASUsSEROeJr/NQ19S1GP9/Yv7G
        zF8/rjiSfhVfv8JoMVo0gAbQQEQNiGEtBQCMAkArAAAAICFFTEh0nvg6D3Wd7roW4++H+Rs1/39Kfe5C
        v4qvX2G0GC0aQANoIIIGxKzuBwDMAgDmH5/567qm40fo+Ig0XpFS39S3axoQ499PYiMAYBQAvnOtnUMv
        DwAAAKABNIAG8tSAGP9/Yf5GzT+7X0Gn0E3Xpfuj4+fZ8V1qPMrCyBgNJKMBFv9ZMX8NAeeh6fg0DQAA
        AGgADaCBPDQgJtWf0b81AFgIAAAAJKQ8EhIdJr4OQ11T1yz+s2b+2ccAP6WfxdPPMFqMFg2gATSQowZY
        /Gfd/DUErJLYDQiwDwF0/Bw7PmK0L0bqmDp2XQMs/osFADQE3Oq6FkIoHwAAAKABNIAGctSAGNMbPP+P
        DQJ+H4LJunwPdPwcO77LjUjZGDmjAfsaYPFfbMafXQvwD6nzP6Bte9oGAAAANIAG0EAOGhAzeoDRf+wQ
        oGHgFtYE2IEAOn4OHR8CtSM+6pV69UUDmcV/mwCARABAQ8BaiV/6ohdfygkAAABoAA2ggTo0IObzR8w/
        MfPPPhLQf9+UuFpioEQTiYYSjTP/e5j8vVLiCYlFEl9KlEroLZs/kXhU4gSJPXwxaNvlpOOT/NEAGkAD
        dQPATADACQCoCgNR//tv0pa/sm2uPlyfjk/yRwNoAA3UooHMCPNfAEAwAJAFh+nSpg18MGpbZaTjk/zR
        ABpAA7UDwJ8w/+DMPwsB70jbdrFlsK5fl45P8kcDaAAN1A4AswGAYAFAg4BeH9DcdbO2UT46PskfDaAB
        NFCDBjILzZj+XxQ0AGgIeF1ibxsm6/I16fgkfzSABtBAzQBwBqP/4M0/+zjgepfN2kbZ6PgkfzSABtBA
        zQAwBwBIDQBskbZuYcNoXb0mHZ/kjwbQABqoRgNiBs0kvgUAUgMAeibgLlfN2ka56PgkfzSABtBA9QBw
        FuafKvPXAPCpxC42zNbFa9LxSf5oAA2ggeoBYB4AkDoA0BBwsItmbaNMdHySPxpAA2hgBw3o18KY/k+l
        +WsAGGbDbF28Jh2f5I8G0AAa2BkA/tv30X/xwkbqk5dbqC/nNI26ZW5av3eqi2Zto0x0fJI/GkADaGBn
        AFjgKwC891wbtWBULzXhosPV0+ccURmjzx2qJl16mFr8YDf11VyAoI62/a0Ns3XxmnR8kj8aQANooIoG
        xBxaSnznGwB8M7+Jmjmi3zbTz5r/jn/HXTBELX6gm9IzBL7dY0zlHeyiWdsoEx2f5I8G0AAa2B4AzonJ
        aIwZ8Bezm6kXrhlQp/lXhYGFd/U09vu+1Vcd5W1sw2xdvCYdn+SPBtAAGtgeAPRZ8t6Yox7JP3floXmZ
        fxYE3nysizf3GVObrHfRqG2ViY5P8kcDaAANZDQgJtPKt+n/VaM7RjL/rWsDjlAfTWsJBHwPfEtsma2L
        16Xjk/zRABpAA98DwHkxjTSNmG7xwsbq2csGRQYADQGv39/dSFl8qrdayjraRaO2VSY6PskfDaABNPA9
        ALzmk5G9M+mggsxfA8Czlw8CAL6fAfiLLbN18bp0fJI/GkADaEA0kNn736vV/6vHdCgYADQEfDi1FRCw
        FQKGu2jUtspExyf5owE0gAa2AsB/+DT612V98/HORgBg3fj2AMBWALjUltm6eF06PskfDaABNLAVAJ7y
        DQD0+/w1ve+fz/+/4olOAMBWABjholHbKhMdn+SPBtBA6jUgiX8XiS98A4AlsrNfPkZf02f1DoG+3bul
        8vIWgC3a4Loq9YkWDaABFzUgZtLHkqFYNdZlj3YxAgB662Af799CmfUaEDYCcrGTUibMAw2gARsakKR/
        gQUzsW6qK5/qZAQAZt3S13pZParfq2xozMVrMiJl+hcNoIHUa0DMaYZHBrXNrNeMNfMWwNTrDgEAvn8V
        cJN+I8RFwzZdptR3fNMVyvUYoaIBvzQgyX5viTIfAeCvE9sZmQGYzF4AOwLQ2DT0YwCA0R8aQAOp1oAY
        /zE+mr8u87uT2xoBgAkXDWYGYOfzHy4LHQJS3fFDb1zuz6+RKO2VTHuJkY70FQA+eKG1GQC48HAAYGcA
        0AsCTw25XwIAjP7QABpItQYkya/0FQA+frmlEQAYfwEAUIMGNARcHSoEpLrjh9qo3FcyI0nq3b9614u9
        fDV/Xe7PZzU3AgDjhg9hBqD2I6Cfk/puF1ofBwAY/aEBNJBaDUhS927736rA8vXcJkYAYOz5QwGA2gFA
        10+FxK0SXWsDAfn3RhKDJU6TuCITl8jf4/SCU5cgIrUd36VGoCz+jRxpszDaTBKyd9v/VgWA4oWNjADA
        mPMAgDxngt6Vzz8icbfEnRJPSyyRKKnjOlvk30dLdHQhhwAAjP7QABpIpQYkCevtfz/PM/E7N1LWo/dC
        twMefe4Rzt2X7+1SR/n/If8+SmKfJEEglR0/yQrnt8MYOdKO/rejJN/eIZiMHr0XCgD6+yHUhYf38IaU
        uVVS+QQAYPSHBtBAKjUgidfL7X+rmtyXc5oaMf9xF7AIMEF40LNQiTwSSGXHT4q2+F3/R420YThtKEnX
        y+1/qxrVR9PMvAY46dLDmAGoexGgzTpaK+1aL+78AgAw+kMDaCB1GtCrsSW83P63KgD87VkzOwE+f/VA
        m+bGtXODiykAAMk4dck4btHze+GM4qO2pZjojxOc8jVmiKtGmzkMaNr1HAbkiB6Oi6rpKN/DbAAONIAG
        UqcBSfa3OJLwC4KBNx7pamQNwMwR/QoqRwh16cg9rJFy7BbFzKN8J3UdP0ol8R1GjGggLA1IkvV2+9+q
        RrXo7p5GAGDu7X0AgNym6eOopyPjyjcAAKM/NIAGUqUBMVCvt/+tCgCzR/Y1AgALBSQcGQFTDpmdAgBI
        yqlKynEJnt8JayQfpT3F6E4Nxez0s3sTewAsfbgrxuvODMDiKLqO8h1MBtBAA2ggVRoQ878rFACYfPkg
        IwCwZmx7AMAdAFgVxcyjfCdVHT9KBfEdRoxoICwNiPm/FgoA6FP8TMwAfPBCawDAHQBYG1fOAQAY/aEB
        NJAaDYjx7x7C+/8aYL6eZ+YkQA0QX77SFABwBwAWAgAk5dQk5bjEzu+ENZKP0p5inH1CGf1/OLWVkdG/
        nkUIpU4CuY8nomg7yncwGUADDaCB1GhADOKPgZiEWvFkJyMAMOWqQwEAd0b/ui2ujGLmUb6Tmo4fpXL4
        DiNGNBCWBiS53hcKALxyax8jAMAmQI1cA6BhceUdAIDRHxpAA6nRgJj/0lAAQB/gY2IB4Kv39HDNANNe
        ngEAAEk5NUk5LrHzO2GN5vNtTzH+PSUqQgCAz2Y2N2L+GiBWj+mQdsN17f4b5KvtqJ/HZAANNIAGUqEB
        Mf6DQzB/fQ/atE2M/vU1Pn65pWsGmObybIpq5lG+l4qOH6Vi+E66R4u0f3jtL8b5p1AAYP6oXkYAQL8B
        ULzQuWfgAEBMgxIAIKaKxlDCMxTa1K82FfN/KBQA0Cv3TcwAcAywc/BTGmdeAQAAADSABlKhATH/5SEA
        wFdzmhoxfw0QLAB0DgD07EfbuCAgFR0/rsrkd/waEdJe6WkvSap7S/wzBAD468R2xgBgzVgWADqoiT/H
        lZsAAEZ/aAANBK8BSfKHOpjoIz3rfu2+HsYA4JOXW0QqQyh16eh9zAIASMrBJ+W4RM7vpGekX1NbS6I/
        y9Fkn7cBT712gBEAeOaSwXn/dih16MF9HBVH3sJkAA00gAaC14Ak/Mc8SPp1GrI+tGf0eUONAMC8O3rX
        +Xsh1Jmn97BCyr2rbQgIvuPbrkCuz+gSDbivAUmmqzw1gu1M+s3HOxsxf70AcM3Y9gCAW2cA7NgeI23n
        FgCA0R8aQANBa0CM//9K/CsEAHj+6oFGAGD0uRwB7IkeTrMJAUF3fJsVx7XdH/XRRrSR1oAk+sM9Sfa1
        jsj//qKZ43/16P+FawYw+nd79J9tn3+Idk+3lcsAAEZ/aCBwDVSs2/cAia4SR0oMkzhf4maJBySulzhL
        4kSJwRLtJfaxlXCSuK4k0HNCAICFd/U0MvrXAPD6/d0BAD8AINtOd4mG9zTdf0j+gSd/04Lheu6PqsXA
        m0j8TuIZiQ0SKkJ8KN+5V+JnvgOBJM6nfAeAogWN1fgLDzcGAO891wYA8AsAdHu9L3GyyRwMAAAAaCAA
        DYhJ95O4UmKxxHcRDL82SCiV670g8WeJViYTUBzXkqS5zncAWDuuvTHzn3DR4ez/75/5VwU2reebJIZK
        tJFoIdFUooHEfvm8PUDyDyD5x5FE+Q03R/5iyMdJLDds+LXBgIYLPbPQ1QdNSDLcX+Jb3wFg+o39jQHA
        AjlIyPf6oPy1bmH8jdTP3RKH1NVHAQAAAA14qAEx4CESC2I0/h2h4F/y249JtK0ryST575IEf+C7WXw+
        q5nSq/ZNHP6jr8H0v5P7/9uCslG1rR0g+XuY/JNMqPx2sjMBYrh9JKYmaPw7gkCFlGWURFMXtSHJb7jv
        ALD04a7GzJ/d/1Jl/lmoWCJ9oHF1/RMAAADQgAcaEIPdS+J+C8/3oywQrO47m6VsZ7gGAZL4xvoOAJMv
        H2QMABbd08PWSJPrur2uYJH0g7137J8kfw+Sv2tJlfLEOwsgxtpc4jWHRv21QcODUk7jrytF1ZwkvXd8
        BoB3J7c1Zv56+v+DF1pj1G4btc32GQMAYPhAn0caEDMdKPGpJ+afBYOFLjwSEOPfy/cFgKYO/tHm/+xl
        g2yaC9f2AyyGVoUAzMAjM4g6CuJ78Y7YTdW3mOhpEuWemX8WAj6Wcte5CtlUXVV3HTH/7j6P/teNN/fq
        nwYAvZbA5/qg7EbWL8wAADB9wM9hDYhx7iZxu6fGX/XxQJncwyk2Tb62a4thnOCraRQvbKwmX2Hu2f+Y
        84cqfZKgr/VBuY2Yf7b9B2X7DUbgsBEklTj53eRmDDLm/3QA5p8FAb1vQCKLA8U0LvbVOFY82cnos3+O
        /jVqoL6D1FQAAOMH/hzTwOYHW+5RsXbfkMw/UQgQ83/ERwD4el4TNfHiwUYB4MOprXw3Lcpvdo1Bfw0B
        mIBjJsDoO7nRd5J1r81//Zld3t10Z2tTr+W5dp3YZwLE/Bf6CACLH+xm1PynXX8I5mnWPEOoz4cAAMwf
        AHRAA1nzL/pBf1V0ZD9VOrWRa+ZtqjyxQoCY/1e+AcAXs5upccOHGAUAvZjQt3qgvNYfWawGABxI/kmO
        Ovnt5GcbtjN/DQASxSf0UuXL6pkyXdeuEwsEiIEc4KOJ6H36TW35q68z6dLDOPiH0X91AKjPx9ifESAQ
        gAYS0kB15l85CyCx4ZzOrhm3yfJYhwBJbgN9A4BPXm4he/4PNQoAK5/qxOgfAKhJA0eS/BNK/oy+kx99
        J9kGtZl/FgI239PKpOm6di2rECDm/x++AcCsW/oaNf9nL5PR/4LGAAAAUJMGLgEAAAA0ELMGcjH/Sgg4
        qp8qm36ga8ZtsjzWIEDM/zqfAGDdhHZGzV9P/7/1dEfMH/OvTQOTSf4xJ/8kR538dvKzDjmbf+ZRQMlJ
        sh5g+f4mTde1a1mBADH/8b4AwGczm6vxFx5uFAD0AULFC60vJAMw/AaM5QAAAIAGYtJAvua/bT3A8E6u
        mbbp8hiHADH/5T4AgN7xz+R+/9kFhKvHdMCc/TbnONpvBck/puTP6Dv50XeSbRDV/LetB3iohWnTde16
        xiBAjH8XiS0+AMBr9/UwOvLXAPDclYcy+sf8cwEIACBJU+C30wEFGfN/L2vmkf4eLesBZjV0zbRNl8cI
        BIjxt/TB/N+ZdJBx89cA8FdZT+DD/VPGxB/RzGUGgBkANGBRA0bMP7se4OSeqnxF0OsBNFAUDAFiLIe5
        bi56w58JF5l97q/Nf/qN/TF/Rv+5auBOkr/F5M8IPx0j/Jra2aT5Z2cNNl7SwfSo28XrFQQBYv6/dhkA
        9OK8l2442Pjof8x5Q9Un01vkmvz5HKDwewAAAEADFjRgw/yzELDl8eYumrbpMkWGADH/4S4DwJKHzO71
        n1349/r93TF1TD1XDZRLH2lG8reQ/Bn5M/KXg30Ke+afmfavbr1A8TF9VdncBqYN18XrRYIASWy3uwoA
        7z7XRnb7O8L46F9v+fvN/Ca5Jn8+ByhwGBBGnW6jttH+Nkf+VWGg5JQequKt/Vw0bdNlyhsCxPyfcREA
        PpvRXD1zidljfrOjfw78SXxBnU9Q9Z30jy4cBsTonxkggxqIy/y3rQe4sr1ps3X1enlBgCS3xa4BwKfy
        bF6P0k0e9JO91oybWPjnWns7Xp7J2cEPBmDQAGyMKLmmH7MUcZv/tvUATzdz1bRNlytnCJDk+5lLCVgf
        8mNr5K/fJNBvFLh0v5TF+dmIwQAAxg/8GdJAUuZfeXTwsbIeYMEBps3W1evVCQFiPntI6KNOnTDFj19u
        qSZebGfaP8l3/r+Z10TpWY33p7RW+vHDyic7qTcf66z0DoTvPHOQ+mhqSyfq3xUdOFSOB6oOKjEBQybA
        SN2PkbrpdkrS/LOzACWndVcVq1KxHqDOfQIk0bZ1Jdl+NM2u+c+7s3ckky2a37hy1kDPTHzwYmv1t8lt
        KzcPWiPmrY182WNd1JIHu6rX7uuuFtzVU829vbeaeXM/9eK1hyh9wuDY4bkdWTz1ugHqb8+2jVRGV9ow
        sHLMlvvZHQDA9AE/AxqoNP8z7K32z2fHwI3XtnN11G6jXDXOBEiCG+JC0v5waisrG/1kn/s/K4f9fC2j
        8Oy9fvlKMxmNt1Er5QTAV+/toeZo0x7RT710/cHq+b8MVPrzE+TAIb1XgI11CLVd8+X/7b9dWV1onxSW
        4W255wY7DoAwAgNGYHpUyfXcn01wyfy3rQcY39SG2bp6zWohQJLcb5JO7h++KOZv+HS/qgarXyN8U0bp
        r97TQ027/hCroGEKFqYLBBQtaMxsQDKPpoqkT3SqzlcAAAAADeSpARfNv3I9wHF9VPmr9V01bBvl2gkC
        JNFdmCQA/P2F1saP9t3RhEefG/8o3gQIzLmtDwAQPwB8Kv1hQE2DSpJ/nsmf0bn7o3ObbeSq+WdnAdb/
        oZuqWJOa9QA7rQmQZDcqKQDQh/uMu2BI7FPsJsw5rmt88HwbICA+CFgofaFZbfkQAAAA0ECOGnDd/LMQ
        sOnGtjZG2y5fc9tMgCS8Z+MGAL23/+IHulnZ4S8uY47rd/Rji7jbJ6W/d49+I6auwRDJP8fkX1dF8u9h
        zwz4Yv6VEPDD/qp0UhOXDdtG2SohQJLe0jgT/pevNFUv/6/5g33iMuS4f0dvhlQiwBRnG6Xst4rlfk/L
        1Y8AAAAADdShAa/MP3OGQPHPZT3A4lStB6h8HLBlef1X4kr478m+/rY2+InbmOP8vc9mcGKhBY3q7X0f
        lmicq/mzFTDmj/kHaP7b1gOc3lVVrN3Xxmjb5Wt+t3l5/XkWEuy2UetXc5uq+Xf24ln/OdEONfpqTlNm
        AMyuA9CzXgPzMX52AsT8Mf+AzX/beoCRbVw2a1tlswYBa8Z2sLqzX5wj8UR+S15h1GsmbAJaiq69TO71
        JIldo5g/MwBAABBQgwYqp/3/7MYmP/lsCLTTZ4+U9QBTGtsyWpevaxQCPp/VTE2/sT+j/oij/ixsjJf9
        EVJk0Lbuda7U4U+imj47AWL8GH8tGgjG/LPrAX7ZW5UvreeyWdsqmxEI0Lv68aw/2nT/jrMM80f1tGWK
        oV/3czH9ERJdTRg/jwCAACCgGg2EZv7b1gOc1SWN6wEqFwYWsiZAH2wzbjjv9pt4XKC3If58VvPQjdr0
        /X0hpj9MYrs9/E1BACYACKCBjAZCNf9t6wHubG1rpO36dSNBgN5ff+z5mL8J89fXWHQPo/88H3+Mls8f
        aMrs2QoYs8fsQ3/mn5n2r3bdwJH9VOm0Rq6bta3y5Q0B+lAdU+aX9uu8MrKv0qcQ5mmAaf38Z1JPx9s0
        fh4BAAPAQEpG/lVhoPiEXqp8WSrXA+T1OIDRv5ln/hp89LHCbP6T85sPT4j573Rqny0YwAQAgVRrIPRp
        /+pmAjac09nWKNuH6+Y0E6Bf90v7qL2Q+9enIeq9Et6d3Dato/h87/sTMf6f2TJ6DgPC6FNt9NV1gDSa
        fxYINt/bygeztlXGOiFgmRy3W4gBhv7dsbIw8tnLB6mp1w1Qs2/ppxbc1VMtfairWvl0x0rTL17IdH8e
        jzselc/Wj9v82QcAKEgtFKTZ/Csh4Kh+qmz6gbYM1ofr1goBr90X5vN/vahx4sWD1XNXDFIvXjOg8hyD
        Wbf0VXNv711p4q/JuoclD3ZTyx7polY+2VmtGt1RrR3fTum3Id6f0lp9Or2F+mZ+k3xHt3y++p3/PhLj
        PzYJ42cNAOaP+de2YC4F/1ZyUk9Vvnx/H8zaVhlrhIBFd/f0bgZAG7verEgb+ZuPdVZvi2l/NK2l+mxm
        c6W3L2ZUnvNzeNvA8i8x/nsl6iVp/swAAAGpg4DMyP/9gnbXCwgONlzQ0Za5+nLdaiHgnUkHOQ8AY84f
        Wmn4+nHFR1NbstDO7P76tiBguhh/z6SNnxkAzB/zD8jICwGazQ+18MWsbZVzJwgoWtBYjbvAzT0AJl4y
        WL3xSFfFoTrOjOhzgYW1Yvw/dcX4AQAAIFUAwMhfnvvXBDxHy3qA2Q1tmasv190JAubc1sepWYDJ8tx+
        9ZgOSsNJHgvM+GyyMwNfS1udaWsnv0KBIlUmUGhl8X3lpV4w/1rMPwMFJSf3VBUrU70eYKd9AvQBQBMu
        OjxxCNBb6L5+f3c20knWyPMFqXIx/ZuTWt2fq1d5mdBzvTk+56dhm2w3zL9u88/ODGy8tIMvo3Wb5dxu
        JkC/0qYNOKnX+l689hBZyNcqX/Ph88nCwkQx/vYm85itawEAPAoIVgOYf+7mn4WALY83t2muvlx7Owj4
        4IXWatKlh8UOAa/e00NW7nv1nDvt4LFEjH+ILbO2cd1gk7+NyuKa/swoYP75m7+GgOJj+qqyuQ18MWqb
        5dwOAvSCuyUPdYvlWODR5x6hlj/ROe1m6tP9Lxbj/4WP/gAAMAMQnAYw/2jmn50FKDmlh6p4az+b5urL
        tXdaGKjfpf/wxVZq3fj2auVTndTzVw80OjMwdvhQ9deJ7XwyvzSXdZ4Y/499NH7eAsD4gzN+LWrMvzDz
        37Ye4Kr2vpi07XLWumPgvDt6GwOAcRccrvTjBlb4O//YQ7/LP9Rn4wcAAIDgAKDS/P/UlU1+DO1vsGV0
        M9vm6sv1a4QAvU2uiQWCelOf96a0wfyTXbxXV/0/L8Y/MATjBwAAgKAAAPM3M/Lf7ujgY2U9wIIDfDFp
        2+WsFgL0Frujzy3sLQH9/bcnHlSX+fDvycDBt2L6EyT6hGT8AAAAEAwAYP7mzX/beoDTuquK1awHqFi3
        7077BGSn6ucX8hhAFvytlgN3mPZ3btq/VNrkEYmuIRo/AAAABAEAmL8989+2HuC6drZH1z5dv9ptg/XJ
        elEeBehDezB/p8z/bWmP8yQahGz8AAAA4D0AYP72zX/b/gATmvpk0rbLuhMEfC4n7k3MY9fAccOHqDXj
        2mP+yUzr71jv+nS+ZyWOltglDcYPAAAAXgMA5h+f+VfuD3BcH1X+an3bxurT9auFgFdurfv8AP3q4CfT
        W2D+yZv/Z2L410i0SpPpV71Xr00grY2W9vvG/OM1/+wswPo/dlMVayqfhRO1rAl4X1bzvzKyr3ruykMr
        FwjqjX30f+tXBt96uiN7+idv/HPE9H8lsUfacykAwEyAVxrA/JMx/ywEbLqpLea/PQDVuk+APrnv63lN
        GO0nb/ofiuHfGPqivnyBxqvkn+/N8Xl/tu7Npa0w/2TNvxICfthflT7bBAjIAwJY5JfYIr8iqfv79aY9
        aXu2n0s+1Z8BAJgB8EIDmL8D5p/ZYKj4F71V+WLWA+zwKKTWmQAgIDYIKMu8t3+8/N0zVyNM6+e8SP5p
        bRzue+sMRsb8P6i6SQ3/nSwQyI6LqmItawGAgNiMvbbHKHqznpkSv5OoR97MfeYXAGAGwGkNYP7JGn1t
        oLVpZBseBey8IJKZgHie91eI2c+QOFuiOaafu+nzFgCm77TpZwW66Za2e8pIk5G/ob39jc+aHCnrAZ5v
        BAQAAXEtcvxGzP7JzAp+RvoGfMwLI4DuotGdz/WG+bs78t/uvIDjZT3A0npAABBgCwL+KoZ/S2Yh324+
        5zQXyw4AGKAoFxvW5zJh/n6Y/7b9Ac7qwnqA6vdG4HFA/o8DtojZz5IYLtHZ5zzmQ9kBAADAKQ1g/n6Z
        fxYCNo9qzSwAEBBlFqBYjF4fs3uhxCA254l3ttep5O8DMVFGewLF/P00/0oI+FE/VTrtQCAACKgLAj4V
        kx8ncaZEL97Pt5dPc/EqAIAZACc0gPl7bP6ZRYol/95LlS/bHwgAAqpCwDti8vpYXf2KXvtcTInPxAcF
        TiR/Gjy+BnexruVd6t02XtphlfFV6q6ung+4XBvO7QQA1HxWQuhrAvT7+CskRmVW6jdzMd9Qpu/9BgBg
        BiBRDWjzl3i6bMEBqvgnfRUQ4P9MwOb7WgEB6YAA/VreXImbJI6TqI+5+jWYSzT5Ixa/xGK6vbLmn91N
        bcvTzQCAEGYHjuqnymY0BALCgYD1Yu6LJB6U+B+JoyQY3QcweAQAAmhE08Ycx/V2NP8sBGy8sj0QEAAE
        lPyqpypfznqAWo5OdvFxwCYx9sUSj0qcL/ETiVZx5AN+I5nBIAAAAMSugZrMvzJZvrWfKvltDyAgAAjY
        cGFHZgFqngXQdZMUBHwlxr5U4gmJiyR+JnEQK/KTMeEk4Sf25J/kzfLbyQu8VvPPJMuyuQ1U8TGsBwhh
        PcTmh1sAAfFBwHdi4l9IvCExWeIuiYslTpH4gV6FL7EXeTD5POhKGwAAzADEpoFczH/beoDHmjMLEMAs
        QNHRsh5gNusBankUUNNMwGYxa/3O/DqJ1yWmS0yQeEhipMSVmefxw+TvkMwInuNvyed55fO8PuwKtVAO
        /wg2H/PPJssNl3QAAgKAgJLf9FQVK1kPUBcElK3e7wox8oYSu5Pj/MtxPrYZAAAxWtdAFPPXybJ8xf6q
        5OSeQEAAECD7PPAooPZHAZUzARJn+GgklNlPYLGe/BGGn8Iw1W5RzT87Wiqb1VDpaeQQnoen/R62PNEc
        CAAC8ByHBp00hkONYcp0XblOoeafhYDND7YEAAKYBdALO/UCzzqmwvl3ZgLwpZh8iYqOqaJdMeW4ymHK
        /LetBxjeCQgIAAJKTu2hKlbth8kzE4D3OOA9NIIDjRCXKcf1O6bNv3I9gGwqU3JSLyAgAAjYeFV7AKBu
        AGBNALnZuj9b/4G4TIffcWOtgQ3z37YeYPqBqki2mU37s/QQ7n/LmGZAABCA/yQMOTRAwg0QErjYNP9t
        6wHuaQUABDALUHysrAeQA6BYDyC7X9YNArwdQJ624tVWLhqSqXEvuc0sxGH+29YDnNMZCAgAAtaf1l1V
        rGY9QA4AwOMAAMCKV1u5KKaZm2mGUk9xmn/leoBl9VTxCawHCOFRwMbrD8plBMxnts4SMBMACBj1bKMX
        C8XQuI/cASZu88+OlkqnNlJFR7IewHsI+GF/tWVCEwy+7scA2ToCAoAAY75t7EKYZu6mGUpdJWX+WQjY
        dGdrHgUE8Cig+Lg+qvzV+kAAEIAfxQw3VHjMFY7557ToKTczWLuvWn9mFyAgAAhY/8duqmKNQW3kbqa5
        ac296zETQO4u2L8LvkAohsZ95D6DkfTIv+qiqfIlsh7gl72BgAAgYNNNbX0146TKDQQAAQV5eEFfxjRz
        N81Q6sol89+2HmBKY1kP0B8I8B0CZD1A6bONkzJTX38XCAACIvt45C+GYmjcR+4Q46L5b1sPMLINAOA7
        AEj5i3/RW5UvZj1Ajq8GsjAQ8y/Iwwv6MuaZu3n6Xlcum39lstTrAU7vCgQEAAHr/9y1sj3zNMG0f56Z
        AGAgbz/P+wu+Gxnlzx9anDf/zAKt8tfrq+Kf9wECAoCATbe2SbuhR7l/IAAIyMvT8/ow5pm/efpeZ76Y
        /7b1AJOaqCJ5luz9+/EBmHhBbSBrOkpfaBTFBNP+HSAACMjZ13P+oO9GRvnzhxffzH/beoAbDwIAAgCI
        4uNlPcAb9dJu6FHuHwgAAnLy9pw+hHnmb56+15mv5l8JAWv2U+v/0A0ICAACNpzdhfUA0fYgAAKAgDr9
        vc4P+G5klD9/ePHa/LPrAWRnOb3DXEHT0AEYaAj3v3lU6yijYL7D2QH4Wx0QRAVBidtpIATzzz4K2DK+
        KQAQAsT8qJ8qnXYghs5MAH5l2K+oUMMV6vuMg5jn7SG9frXx2nZAQAAQUPLvveQUyP2BgOgQcILvuYny
        5z+bW1edAQAAwDYNiPGfFpL5V97Lqv1Uyf/rDgQEAAEbzu0EAEQDAF1vmyR61mUI/Lt5k3W5TgEAAKBS
        A5IcBkqUBwcAkjDLFhygio/tCwQEAAGb72sJBESHgHelfzd02ZAoW7wAAgAAANr8m0t8GqL5b1sP8HQz
        ACAAACg6qp8qm9EQCIgOATP1Oh+MNl6jdbW+AYCUA4Akg70kXgvZ/LP3tvHK9kBAABBQ8queqnwF6wEK
        6LO3uWpIlCteMAEAAID7C0gkfo3E3pL1AL/tAQQEAAEbLuzol/aij9ht3ecwzDZes3WxvgGAFAOAGH8f
        Cb1hiK0k49x1y+Y2UMXHsB4giP0BHmnhnL486kv6kd8+LpoSZYoPTACAdAPAVI8SlrFkv+Xx5swCBDAL
        UPTjvqpsNusBCujDF2K28Zmti3UNAKQUACRpDCkgcRgz46TKsPGSDkBAABBQMqyHqljJeoCI/ahIvlff
        RWOiTPGACQCQXgBYEDFpeG/++r71IrKSk3sCAQFAwMbLOgShyYT643WYbTxm62I9AwApBABJNMcllGyc
        StRlsxqqoqP7AQEBQMCWJ5o7pS2P+pfeIKiJi+ZEmeyDCQCQTgBY7lGCsprYNz/UAgAIAACKfyLrAeY1
        sKqVgPvMHZitfbN1sY4BgJQBgCSxfgEnskgGsGF4JyAgAAgoOVXWA8jWz+g777d6itkcCAAABlIAA9LR
        ryRBbp8gy5fLeoCTWA8QwquBG69uDwBEe613qIsjVMpkF0ww/RSYftVOJOa/GADYeYRUNv1ApbeZDcEE
        034PW8Y0AwLyh4ARmK1ds3WxfgGAFAGAXuyTto1/8oGdzfe0AgACeBRQ/FNZD7DwACAgPwhY7aJBUSa7
        UAIApAsAfpePIabxsxvO6QwEBAAB63/XXVWsZj1Ann34IAzXruG6Vr8AQLoA4Jk8E0LqRlHly+qp4hN6
        AQEBQMDG6w9KnX4L7N9nu2ZQlMcukAAA6QKADQUmiFQk1NJpjVTRkawH8H4twQ/7q9KJTVKhWUP9egqG
        a9dwXatfACAlACAJ4gBDSSIVCXXTna2ZBQhgFqD4Z31U+Wv1U6FZA/17hWsGRXnsAgkAkB4A6GogQaQn
        ka7dV60/qwsQEAAErP9jN1WxJu9349Oj9e8XC36B4do1XNfqFwBIDwAcCQDkZwLlS2U9wC97AwEBQMCm
        EW3TaOj53vO3bAgEAAAFAUKBdOxhAEB+AKDrq3RKY1kP0B8I8B0C9HqAyY3zNcQ0fr65a6NUymMPSjD7
        AM2+ug4jZnY+AJA/AOg62zSyDQDgOwBI+Yt/0VuVL2Y9QB15oD+Ga89wXatbACA9AHAzABANACr0eoDT
        uwIBAUDA+j93Vbo96Qs11sFxrpkU5bEHJABAegDgAZJe9MRf/np9VfzzPkBAABCw6bY2AEDNuwQOw3Dt
        Ga5rdQsApAcArgcAogNA5XqASU1UkTxL9v79+ABMvKA2kDUdpS80AgKqh4CjXTMpymMPSACA9ADAWQBA
        YQBQuR7gxrYAQAAAUfxvsh7gjXpAwM4Q0BPDtWe4rtUtAJAeADgRACgcACrW7KfW/6EbEBAABGw4uzPr
        AXYGgANdMynKYw9IAID0AMBgAMAAAEjCLH9V1gMcx3qAgqbhHQGIzXe1Yhbgewj4h+SIXTBce4brWt0C
        AOkBgPYAgBkA0PW4ZXxTZgEcMfGCQORH/VTpSwcCAVsh4CPXDIry2IURACA9ALAPAGAOAHRdbry2HRAQ
        AASUnNhLlb+5PxCwbt8lGK5dw3WtfgGAlACAFp6Y1odAgEEIWLWfKjmtOxAQAARsOLcTALBu36dcMyjK
        YxdIAIB0AcC9AIBBAJBZgLIFB6jiY/sCAQFAwOb7W6YdAtgDIEV+oOEKAEhRg4v5/wwAMAsAlesBnm4G
        AAQAAEVH9VNlMxqmFQL+JVpuwIjb7ojbtfoFANIFAHodQCkQYB4CNl7ZHggIAAJKft1Tla9I5XqAea6Z
        E+WxDyMAQIoAILMO4AUAwDwAVLwl6wFO6QEEBAABGy7smMZZgIswXPuG61odAwDpA4A/AwAWAECvB5jb
        QBUfw3qAgl7LcwQgNj/SIm0Q0N01c6I89oEEAEgfALQSAPgOCLADAVseb84sgCMmXhCI/LivKnulQVog
        4H3M1r7ZuljHAEDKACDzGGAiAGAHACr3B7ikAxAQAASUDOuh9KOdFPSVc1w0J8pkH0oAgHQCQFdJanrV
        bxqSW/z3uHJ/VXJyTyAgAAjYeHmH+PUTb7/Ue4PshdnaN1sX6xgASCEAZGYBHgMA7AFQ2eyGqujofkBA
        ABCw5cnmIUPA7100JsoUD5AAAOkFgLYCABVAgD0I2PxQCwAgAAAo/omsB5gf5HqAddL/d8Ns4zFbF+sZ
        AEgpAGRmAUYBAPYAQNfthuGdgIAAIKDkVFkPIFs/B9ZfTnTRlChTfEACAKQbAJpKQtscWFJzKkmXL5f1
        ACexHqCgFfmOAMTGq9s5pa0C++1SjDY+o3W1rgGAFANAZhbgjAITSUhJ0cq9lE0/UOltZkMwwbTfw5ax
        Ta1oJOY+qHcD7e+qKVGu+MAEAEg5AGQg4MGYE1AISTSve9h8bysAwJGRfCEQU/zTvqp80QF5tb2Dfeu3
        mGx8JutyXQMAAIA+JnhPiYUOJirfE+125d9wTmcgIAAIWP+7bqpitbfrAW522ZAoW7xgAgAAAJUaEPPX
        6wE+BgLsLQosX1ZPFZ/QCwgIAAI23XCQj3D6svTvXTHZeE3W5foGAACAbRqQ5HCIRBkQYA8CSqc1UkVH
        sh6gkGl4J777w/6qdGITnyDgHenXB7hsRpQtfjABAACA7TQgSeIUCc4KsLgb26Y7WzMLEMAsQPHP+qjy
        1+r7AAHrpU93w2DjN1jX6xwAAAB20oAkC/1mABBgCwLW7qvWn9UFCAgAAtb/p6wHWGNvxsjAbJw2/0Nd
        NyLKlwycAAAAQLUaAALsJvXypbIe4Je9gYAAIGDTzW1dnQXA/MnvtXo8AIBAatQAEGAXAkqnNJb1AP2B
        AN8hQK8HeK6xaxCA+ZPb6/T3Oj/A1EwyUzOu1DsQYBcCNo1sAwD4DgBS/uJf9FblS+q5AgGYP+afk7fn
        9CFXzIhyJAMjQIBFCNDrAU7vCgQEAAHr/9xFVUh7GnhuX8g1MH/MP2dfz/mDmG8y5utKvQMB9hJ7+eL6
        qvjnfYCAACBg021tCjHvQr+L+WP+eXl6Xh92xYwoRzIwAgTYg4DSSU1UkTxLduId9wCMOLF6lDUdpS80
        KtTIo3wf88f88/bzvL+A+SZjvq7UOxBgDwI23dgWAAgAPor/TdYDvBHregDMH/OP5OWRvuSKGVGOZGAE
        CLAEAWv2U+v/0A0ICAACNvx35yij+Cjfwfwx/8g+HvmLmG8y5utKvQMBdiCg/FVZD3Ac6wESm8I3CB+b
        724VxdDz+Q7mj/kX5OEFfdkVM6IcycAIEGAHAraMb8osgEEjTgwmftRPlb10YD6Gns9nMX/Mv2D/LvgC
        mG8y5utKvQMBdiBg47XtgIAAIKDkxF6q/M398zH2XD6L+WP+RrzbyEVcMSPKkQyMAAEWIEDOmy85rTsQ
        EAAEbDivUy6mnutnMH/M35hvG7sQ5puM+bpS70CAeQgoW3CAKj62LxAQAARsvr9lrgZf2+cwf8zfqGcb
        vZgrZkQ5koERIMA8BGwZ3QwACAAAio6W9QAzGxYCAZg/5m/cr41fEPNNxnxdqXcgwDwEbLyqPRAQAASU
        /LqnKl8RaT0A5o/5W/FqKxd1xYwoRzIwAgQYhoC3ZD3AKT2AgAAgYMNFHfOdBcD8MX9rPm3twphvMubr
        Sr0DAWYhoGxuA1V8DOsBEnulzyB8bH60Ra4QgPlj/lY92urFXTEjypEMjAABZiFgy+PNmQUwaMSJwcSP
        +6qyOQ3qggDMH/O37s/WfwDzTcZ8Xal3IMAsBGy8tAMQEAAElAzroSrk0U4NRwdj/ph/LN4cy4+4YkaU
        IxkYAQIMQsDK/VXJyT2BgAAgYOPlHaoDAMwf84/Nl2P7Icw3GfN1pd6BAHMQUDa7odKvlSU2hR2A+bpS
        d1uealYVAjB/zD9WT471x1wxI8qRDIwAAeYgYPNDLQCAAECk+CeyHmB+5XoAzB/zj92PY/9BzDcZ8026
        3ksWNdpD4sCy1ftdIcnuuxqefda1MIp/X/c9RGy4oCMQEAAErP/Pbv+U/nBo0n2U309fbgYAoM68NCAm
        /n8lukgcJfE7iYskrpe4S+IJickSsyXekHhH4guJUgmVjc3L688DAgqfDShfLusBTmI9gCvT+VHKITMA
        38nBT3/AfNNnvi60eV7J34UCUwZ7HUUMem+JjhJHSvyHxGUS90m8KLFCoqiqkRfy3wIB84GAwiGgbPqB
        qugo1gNEMd+kv4P528tl+ERudQsApGwGQEx7F4mDJH6WGb3rUftSia8KMfQo3wUCCgcA/Shl872teBTg
        2aMAzD83g8LI7dYTABAwAIgpt5L4icT5Eo9KLJbYFMWsbX0HCDADARvO6QwEeAIBmL9dUwMacq9fACAA
        ABBzbiahn8n/j8SDEosk1tsybdPXBQIKh4DyZfur4hN6AQGOQwDmn7s5YeT26woA8AwAxHzrSxwncZPE
        XIlvTBtyEtcDAgqHgNJpjVTRj1gPkPSz/Zp+H/O3b2hAQ351DAA4DgCZ0f2v5O8oCb0Q79skDDqO3wQC
        CoeATXe2ZhbAwVkAzD8/Y8LI46kvAMAxABCjbS+hX697REK/Rrft9bk0/DcQUCAErN1XrT+rCxDgEARg
        /vGYGdCQfz0DAAkCgBi6XpHfS+JMiXESn6bB5Ou6RyCgMAgoX1pPFR/fGwhwAAIw//xNCSOPr84AgBgB
        QIxP74Y3SOJCiecliusyw7T+OxBQGASUPi/rAY7sDwQkCAGYf3xGBjREq2sAwDIAiIF3lhguMUtiS1oN
        Pcp9AwGFQcCmkW0AgIQAAPOPZkgYebz1BgAYBgAxut0khkrcIvHXKMbHd7bbNpgdA6vs/5/XGQp6PcDp
        XYGAmCEA84/XxICG6PUNABgAADHsehJ6pf6TEkG8lucShDATEH0moHxxfVX88z5AQEwQgPlHNyOMPP66
        AwAiAoAYZHOJsyVmSFS4ZJghlgUIiA4Bpc82UUU/ZD2A7f0BMP/4DQxoKKzOAYA8ACAz0tev6M2UCPZ9
        fFcBQiBgAQcIRQOBTTe1ZRbA4iwA5l+YEWHkydQfAFAHAIgZ7ilxvMQEiTJXzTEt5QICogFAxRpZD/DH
        bkCABQjA/JMxL6Ch8HoHAKoBADFT/X6+Xsh3v4SxI3DTYtK27xMIiAYB5a/KeoDjWA9g8lEA5l+4CWHk
        ydUhAFAFAMS4ukrcKPGhbRPj+rXvcPjV3KaqaH7jGndBBAKiQcCWCVKvFkbBabwm5p+ccQENZuo+9QAg
        Rqw359Er+OdgysluO/zBi63V6w90Vy/8ZaB6+twj1NPnHKEmXDRYPX/1QLX4we7qm3lNtgMCICAaBGy8
        rh0QUCAEYf5mDAgjT7YeUwsAYvatJK6R+AzjT9b4ixc2qjT+rOlr468uJl48WK18spMqXvj9zAAQEAEC
        Vu+nSk7rDgREhADMP1nTAhrM1X+qACDzbP9o+fusxL8w/mSNX9e/nuqfflP/ag2/JhCYd0fvHWcCFvJ2
        QH4gULbgAFV8bF8gIE8IwPzNmQ9GnnxdpgIAxGgaSJwn8Tamn7zpZ9vgazF/Pb1fk9HX9v/rmYCqbSkz
        AUBAnjsGbhndDADIAwAw/+QNC2gw2wZBA0BmUZ8+VrcU43fH+HVb6AV+U687JJL5azAYc95Q9cELrYGA
        PE1/x62EN17VHgjIAQIwf7PGg5G7UZ9BAoAYTB8J/d4+m/WI2boGP0ULGqvpN+Y37V/dbMCOjwL0fTIT
        kN+jgIpVsh7glB5AQC0QgPm7YVZAg/l2CAoAxAAGSuhjdp0zPcq0tU30gr/Zt/aNPPKvCgITLxlcbTsD
        AflBQNncBqr4GNYDVPcqI+Zv3nQwcnfqNAgAEGPRm/ZMx2TdBh+9en++LOCL8sy/pu98OLUlEFDgYwD9
        WGDL482ZBdhhFgDzd8eogAY7beE1AIjh/1hiHsbvtvHr9vlmfhM146Z+Rs1fQ8Gie3uot585SP39xVbq
        i9nNWBNQAAxsvLQDEJCBAMzfjuFg5G7Vq5cAIIbyC4nFGL/7xq/bSBvzi38ZYNz8q5sVmDmiXyUMZLXB
        44A8Hges3F+V/KZn6iEA83fLpIAGe+3hFQBIUh8isQTj98P4dTt9/FJLNemyw2Ix/6pAMOvmfpWzDiwM
        zAMAZPagbHZDVXR0v9RCAOZvz2wwcvfq1gsAkCTeXmIixu+P8evn/W882kWNHT40dvPPgsCsW/oyExDh
        kcDmh1qkEgAwf/cMCmiw2yZOA4AYfn2JmyXKMX9/zF/v6R91gx+TCwT1tV67rwcQEAECNlzQMVUQgPnb
        NRqM3M36dRIAxOx3lzhT4muM3x/j/3h6CzV/VC81+tzkRv3VAQRrAvJ7DKDfCihfLusBTkrHegDM301z
        Ahrst4tzACCG/1OJtRi/P8b/7uS2asYI2dgnc4Kf6VF8odd77b7uvB0QYRagbIasBzgq7PUAmL99k8HI
        3a1jZwBADL8n7/L7Yfr6AJ91E9pXjvafTWCBX75AMPnyQTvtFSBvByziAKG6ZwY239cq2EcBmL+7xgQ0
        xNM2iQOAmH49iXslOJ3PgR0M9eI9bfCfzWyuPprWSr03uY166+mO6rX7u6vZt/RTU64+1Lkp/lyA4NMZ
        zYGACLMA+nHAhnM6BwcBmH88BoORu13PiQKAmP6xEh8x3V/4yF/vr//5rOaVB+S8M+kgtXZce7VqdAe1
        4onO6o1HuqrFD3RTr8qCuPmjeqq5t/dWeoX8y/97sHrxmgHquSsGqYkXD1Zjzx+S2Ir9XEy8kM98Pmv7
        TYKq7BPATEAdYFC+TNYD/HuvYCAA83fblICG+NonEQDIrO5/FOPP3fj1iHzV6I6VZr7onp7qlVv7qJdu
        OFg9d+WhavyFhwdr3IWYftXvakCqSW88Dqj7UUDptANV0Y/8Xw+A+cdnLhi5+3UdOwBIEv6ZxCeYf93m
        /+UrzdSyx7qoqTJKd3WBnSmDtnmdcRcMqfNwKCCgbgjYPKq117MAmL/7hgQ0xNtGsQGAGH4DiScw/rqN
        X9eRfqXOhwV2No3b1LXn3NanTgDQdQ4E1AEBa/dV68/q4iUEYP7xGgtG7kd9xwIAklyPl/gM88/N/N+b
        0oZpfdnExwQA6D0JPhGYylV7QEDtEFC+tJ4qPr63VxCA+fthRkBD/O1kFQAk6R4oMTrX5MvnGqmv5jRV
        esrahPlxjSPUPDl+OF9dAQG1Q0Dp841U0ZH9vYAAzD9+U8HI/alzKwAgCVfv5DdM4ot8k2/aP/+6vG6H
        cZsZ/eu3HL6eu/VAoHwDCKgdAjaNbOM8AGD+/hgR0JBMWxkFAEmyXSVGSHyeb8Ll84z+TYKPHvkX17Ly
        Pxe9AQG1QIBeD/Cnrs5CAOafjKFg5H7VuxEAkGT6E4m5uSRVPlPzaHSNvLtv0gTTeK1xw4eo5Y93znvE
        X5MugYCaIaB8cX1V/Av31gNg/n6ZENCQXHtFBgBJmLtKnCSxDFPPf4q5ujpbLpv2pNG0Td3zrJv7VW6G
        ZFqPQEDNEFD6bBNV9EN31gNg/smZCUbuX91HAgBJsAMllppOtGm/3uIHuwEAEVb/T7r0MPX2xHbGjb+q
        HoGAmiFg001tnXgUgPn7Z0BAQ7JtlhcASEJsLPGwxHdpN2sb9693+DM1Gk7Ldebd2Vt9Mz/aQr9821Ag
        YD4HCFUDAmtkPcAfuyUKAZh/skaCkftZ/zkDgCTL0ySK802afD73xwNrx7cDAHKcARh7/tDKrZFj1tcS
        AYAzgICdIaD8VVkPcFyfRCAA8/fTfICG5NutTgCQBLuHxD0xJ9q4E7sTv6dHsmPE2NIyeo96n/p434+m
        tUyizSbppAUEVP84YMuEprGvB8D8kzcRjNzfNqgVAMT0m0ksxPxzH8UXWld6IVtUY0zD92ZK/UR9t7/Q
        tpHv35lNdkBA9RCw8bp2sc0CYP7+Gg/Q4Ebb1QgAkuwGSHxqIGkmMVLz9jf1qX8TLvLzdD+97a5NCHll
        ZF9VvLDmU/1i0OoFVRMXEFANBKzeT60/rbt1CMD83TAQjNzvdqgWACSRdpIoiiGhemvUNuvmvclt1Jjz
        7JppoUaty6ePIp59S7/K9+5njLA7c6EP9CleGN9MTA3t+5sdEx4QsDMElC04QBUf29caBGD+fpsO0OBO
        ++0EAJL49Kl9b9s0OK5dt5H9VV5rm3jJYKsj6h0hYPS5R6jxFxyuJl02SE25+lA17bpDxNj7K22+C+7q
        qZY90kW9/Uw79cnLLbYbia8Za3cDo7m3O2H+GlYPry55AQE7Q8CWMc2sAADm7455YOT+t8V2ACAJTu/h
        PxuDrtug46ijr+c1UfrVwFxmA/RnnpH34V/4y0A1/ab+au7tvStN+7V7e6glsr+ANu8VstGQXjmv3zZ4
        Z9JB6v0prWUxXavKzXMqn6tHGGHr72poKHRGoabvV27pG6FcltqnTU1JDwjYGQI2XtXeKARg/v4bDtDg
        VhvuCAAPWEqcTPVHOJAm2xZFsqf9R1NbqjVjO6ilD3etnHLX2wbrRwWfvNSy8gTBpNrtpRsOtmb+8+/s
        ldh9VVOf32pAri2BAQE7QMCq/VTJqT2MQADm75ZxYORhtMc2AJDkNjgpE+F33ZhxyLcdlj3axZr5Lxjl
        lPlrEPk0l6QHBGwPAWVzG6jiYwpbD4D5h2E2ufQfPhNvW1cFgMn5GgCf99O4TbSbfg8/l0cTUR4NLJRH
        FybKaPgai3NNTkDA9hCw5YnmkWcBMP94DSFXjfO5MNqlEgAkUXaRYHvfAqbpDZuNiwa4XZmmXX+IldH/
        grucG/ln7/uZfJIeELA9BGy8tEPeEID5h2Ey+fQbPhtvm2cB4KG0GRj3G332YvWYDlbMf+q1A5J+z782
        8Lo93+QEBFSBgJX7q5Lf9MwZAjD/eI0gX23z+TDaR4/+9W5/5RhidENMU93ptwUmXmz+9cTxFx6u9CZI
        Dtfl8ChJDwj4HgLKZjdURUf3qxMCMP8wzCVKf+E78ba9BoDfO5x0XTaEVJZt4d12TixcN8Hucb4GNP7r
        qMkJCPgeAjY/3KJWAMD84zWAqJrme2G0kwaAOw0kx1SaYdrq7cOprZTeLCjKwr7avqOhwoO6PKyQpAcE
        fA8BGy7sWC0EYP5hmEoh/YTvxqsBDQBzPUi+PhhE8GXUOwOaNn+9cZHe58ADDbYsNDkBAVshoHy5rAf4
        1fbrATD/eBN/oVrm+2G0lwaAFR4kXx8MIugy6q2JTZv/uAuGqE+nt/Ch3jZLH9nFRNIDArZCQNkMWQ9w
        1Nb1AJh/GGZion9wjXi1AADw6l9OBvz81QONA4DezdAT+FxuMjEBAVshYPN9rTB/eQ3bpLa4FvWZjwY0
        ACz3JAn7YhbBlXPdePOH/Ti2zW9dbTY+n06Vy2eBgEoIWL/5nlYn5lJffAZjQwPmNaABgB0AmQWo1QCn
        XHWo0dG/vl7RfC+e+2fr5TobySflELBe7v9QG/XKNc0bBXUaZp1qALiEGQD2AKhJA3qa3vSz//entKlr
        xO3av59qKwGmFAIwf6b+efThgAY0ABwJAAAA1WlAH8P73BVmR/+zbu7nmrnnUp6BtgBAXzdlEID5O5D4
        beqZa/szW6ABYH8JfdRpLomQz6SontYaHv2PPneo+uRlL1b976jzA2wntZRAAOaP+TPyd0gD2bMAVgMA
        ANCOGphq+L1/B4/4zQVov7Rt/tnrBw4BmL9DiT8uTfM7bs8GcBhQikb0+UCe3vXP5LP/ccOHqC9mN8vF
        cF37zII4k1igEID5Y/6M/B3UQBYA+udjDnw2/NmCeXf0NgoAix/s5pqx51qeh+MEgADXBGD+Dib+uDXN
        77k5E7CNysTUp2Ls4Rt7Lm381Zymauz5Q40BgD498Ot5TXI1XNc+d1ESyUtmAk6Q2KQ3zPE43pGyd0ui
        /vhNNw2HdnGrXaoCwKBczIHPhA8JbzzSxZj568cIK57s5Jqp51Oef0sqaYl59pR411MAeFnKbX3xZFJt
        w++6ZWS0R7T22O65jJj7DAw+fIOvrY31q3+TLj3MGABMvmKQKl7o1aY/O8JBoiNYMdGGEjM9g4Cbpby7
        kpSjJWXqjXqLSwM7AsBQACDdAPDOpIOMmb8e/etthD3W1L+k7HvG1Rlr+h0x090kbvMAAkqljL9Nur74
        fQwUDeSmgZ1WZkrCG+NxwvbZbJwo+9zbzS3+00f9eq6lt11KJGKuwyQ+dRQElkq5+rtUX5QlNxOgntJb
        T9UBwN6StBd5nrh9N55Eyq/359dH9Jp6/c/zZ/+6DUa7lhzFZPeRuFCiyBEQWCPl+HfX6onypNfUaPvc
        277adzMl8TWWWAIEpOtxgMlT/8bIWwRfzW2aCMgY1O15riYTMd36Etcl+KbAB/Lbp/GsP/dk66qWKFd6
        27DGzRn0s0+JUQaTqe9mEHz5Z93S19jo/5Vb+4RQX0NdT45iwE0k7pAojmlG4G/yO2dLJL42wvW2oXzp
        NVZf2r7O3ZkEAA6RuFviG2Ag3BmBr+c2UXrUbmr6/2/PtvUdAPT5GPv50pEzCwWHyt8REqsNwsA/5Vpz
        JIZLdPWlPign5osG6tZAnQCQrURJhrvqhCjRQKKpRAuJNhL6zYGbJNYBCP4CwqrRHY2Zv36NUL9O6Lke
        1vicQMSsD8qM1KfI3xUSX0h8WwcYVMi/fySxWOIJiV/rRw0+1wNlr9sEqKP01lHOAJCLSCThnyzxvueJ
        33fjilT+mSP6GQOAxQ94u+1v1bp7IhfN+/SZzCxBc/nbX+I4Cf1WwdESPSQOlNjFp/uhrOk1LtreTNsb
        BQDdKJm1A3cBAf6MgIsXyOp/OazH1PT/pzOaR4IQxzTz3yQZM0mGeqQe0YCbGjAOAFUeGZwuCf0fjiX1
        EIzJ+D2891wbY+b/0g0HGy9fQho6jKTlZtKiXWgXNGBGA9YAIDMbcFpCyTsUE4rlPl6/v7sxAFg1ukMs
        ZbasK70D4D4kGTNJhnqkHtGAmxqwCgAZCBhpOVmHYDiJ3sOL1wwwAgD6McI387099a9qG6wkYbmZsGgX
        2gUNmNNAHACg3x5YAQS4uSbgSzn6d/S5RxgBgHl39E4UZAxq7BGSjLkkQ11Sl2jATQ1YB4DMLMBRBpNz
        KCbjxH2sGdfeiPnrBYRr/T74p2p7nEHCcjNh0S60Cxowp4FYACADAbOAAPdmARaM6mUMAL6Y3cwJqDGg
        swEkGXNJhrqkLtGAmxqIEwD+bCAxh2IwztzHC4ae/0++fJAz91SgzvSbK3uRsNxMWLQL7YIGzGkgTgBo
        W2BiDsVgnLkP/f7/mPPMbP+rjxEOpH2XkWDMJRjqkrpEA+5qIDYAyDwGKA3EJIIwu7+/2MrY9P9bT3cM
        ok5Enw+QsNxNWLQNbYMGzGkgbgDYBAC4sw5g5VOdjAHAJy+3CAUA/osEYy7BUJfUJRpwVwMAwCJ3DDlu
        OJp/p5kFgBMuGhyK+ev76EfCcjdh0Ta0DRowp4HYAEASqz5FMCSj8P5eXvjLQCMzALNu6et9XWS0WS5/
        9yDBmEsw1CV1iQbc1UCcADAAAHAHgIoXmlsA+OZjnUMBgCUkK3eTFW1D26ABsxqIEwCGAQDuAIA+sc/U
        6X9/f6F1KABwLwnGbIKhPqlPNOCuBuIEgCsBAHcA4N3JbY0AgN7/X88mBNK2fyBZuZusaBvaBg2Y1UCc
        APBEICYRhNm99VRHIwAQ0PG/ul17k2DMJhjqk/pEA+5qIE4AWAgAuDMDYOoI4IAOANJ7VOxGsnI3WdE2
        tA0aMKuBOAFgLQDgDgC8cmtfIzMAGiQCaddXSS5mkwv1SX2iAbc1ECcArArEKIIwvBevHWAEAFY8Ecwb
        AKNIVm4nK9qH9kEDZjUQJwAsBgDcmQGYcNHhRgBgXThHAP+W5GI2uVCf1CcacFsDcQLAzQCAGwBQvLCR
        EfPXrxG+P6VNCDMi34k2m5Cs3E5WtA/tgwbMaiBOADgSAHADAL6a09QYAHw6PYgzAJaTWMwmFuqT+kQD
        7msgTgDYTQBgDRCQPASY3ATom/lNQpgBGEGycj9Z0Ua0ERowq4HYAEA3nJj/cQBA8gDwoaFjgPUmQIG0
        59EkFrOJhfqkPtGA+xqIFQAyEDAlENPw1vxM7QI4+fJB3tZBFQ3q9//3Ilm5n6xoI9oIDZjVQBIAUF8S
        LnsCJHgy4roJ7YysAZh2/SEhAMDLJBWzSYX6pD7RgB8aiB0AMrMAHQUCPmcmIJnHAW89bWYb4NkjgzgG
        eDjJyo9kRTvRTmjArAYSAYAMBLQSAHgDCIgfApY/3tnIDMDCu3uGMAPQi6RiNqlQn9QnGvBDA4kBQAYC
        9hEAGCXxD0AgPhBYLrv3mTgKeNE9PXwHgM9IVH4kKtqJdkID5jWQKABkG1TMXz8SGC2xpQ4QKJF/XyLx
        tMSdEndLPCLxLgCRO0CseLKTEQCYf2cv3wHgCZKK+aRCnVKnaMAPDTgBAFVAYO/Mq4KXyN8rMnGa/B0s
        0ag2Ucm/d5W4VaICGKgdBlY+ZQYAXrm1j+8AcCqJyo9ERTvRTmjAvAacAgATDSzm307iOSCgZggwtQhw
        5oh+PgOA3v63qQnNcQ3ziYk6pU7RgH0NBAcAVWYTrpYEr5O8zyZlpeyrRpt5C+ClGw62Ur6Y2mwFCcZ+
        gqGOqWM04K4GggWAzCLDU4GAnQFo9ZgORtYAvHjNAJ8B4BYSk7uJibahbdCAfQ0EDQAZCLgsphGlN2a4
        ZqwZAHjuykO9uedqNPBjEoz9BEMdU8dowF0NBA8AGQgYCwR8PxPwzjMHGZkBmHTpYb4CQJnoYW8Sk7uJ
        ibahbdCAfQ2kBQCaScLfBARshYC/GzoMaPyFh/sKADNILvaTC3VMHaMBtzWQCgDIzAJcBQBsBYDPZjY3
        MgMw5ryhvgLABSQmtxMT7UP7oAH7GkgTADRmQeBWACha0NgIAOjdBIsXNvYRAnqTXOwnF+qYOkYDbmsg
        NQCQmQXQuwj6aFjGyzzugiFGIOCruU2Nl81yG30h19+FxOR2YqJ9aB80YF8DaQOAEZbNxRsznHzFIDMA
        MMc7AHiKxGI/sVDH1DEacF8DaQOASwGArTMg0647pGAAGH2ufgTg3YzKf5CY3E9MtBFthAbsayBtADAc
        ANhq2HNv71MwAHj4FoDeGbIZicV+YqGOqWM04L4G0gYAfwEAtgLAuvHtCwYADzcCeo2k5H5Soo1oIzQQ
        jwbSBgD6yGFvntPbLOs385qosecPLQgClj/e2be6PI/EEk9ioZ6pZzTgvgbSBgC8BVAFgObe3jsyADxz
        yWBVNN+rVwD19H8rkpL7SYk2oo3QQDwaSBsArLc5qvbt2l/LLICextfv8+cbK57s5NvofxFJJZ6kQj1T
        z2jADw2kBgDEnPVGQL6ZlvXyfvJyC5XvngDLHu1ivVwW2up/SEp+JCXaiXZCA/FoIE0AMNiCqfhohDuV
        +ZPpLdT0G/vXOQswRtYMrB3X3sd71tP/LUgq8SQV6pl6RgN+aCBNAPBbAKD2GRD9ZoAGgYkXD94GA/pd
        /2nXH6L0gr8vZjfz0fx1meeTkPxISLQT7YQG4tNAmgDgVAAg90cgX77SrPLUQP03gHo7m6QSX1Khrqlr
        NOCHBtIEAMMCMLIQzDjue/iWzX/8SEaYBu2EBuLVQJoA4GAAIPcZgIDqai5JJd6kQn1T32jADw2kCQB2
        EVP7NCBji3sk7evvnUky8iMZ0U60ExqIVwOpAQAtLDH/uwCAVM0C/EvauwlJJd6kQn1T32jADw2kDQBa
        iCFsAQJSAwGzSUR+JCLaiXZCA/FrIFUAkJkFuB4ASA0A/ImkEn9Soc6pczTghwbSCAB7CwC8DgQEDwF6
        +r8xiciPREQ70U5oIH4NpA4AMrMAzcUcPgECgoaAmSSU+BMKdU6dowF/NJBKAMhAQBcBgHeAgGAh4L9I
        RP4kItqKtkID8WsgtQCQgYAGAgDTgYDgIOCf0qYHklDiTyjUOXWOBvzRQKoBICtUMYtfSfwNEAgGBF4m
        CfmThGgr2goNJKMBAED2B8jMBuwhAHCCxKOZ9QEb5W+pxJcSiySekLhSQm8pPFAvMJNoqN8zz/zvq+Xv
        m0CEExDxOxJKMgmFeqfe0YA/GgAAMgBgSrQCAL+UWAsIJAYCG6Tu9zXVnlzHn2RGW9FWaCA/DQAAhgEg
        M5uwm5jQLUBAIhBwL0kgvyRAfVFfaCCdGgAALABAlbUFfxAI+AcgECsI9CWZpTOZ0e60OxrITwMAgEUA
        yMwG/B4AiA0AlpAA8ksA1Bf1hQbSqwEAwDIAZCDgViAgFgj4I8ksvcmMtqft0UB+GgAA4gEAvSZgFRBg
        FQJY/BeDlkmw+SVY6ov6clkDAEBMSVPM/6cAgFUAuM/ljkbZMAI0gAZc0wAAEBMAZB4FLAQCrEEAi/9i
        1LJriYzyYK5oIH8NAAAxJk0x//MAACsAwOK/GHVMos0/0VJn1JmLGgAAYkycYv6dAAArAPCfLnYuykTS
        RwNowGUNAAAxAkDmMcB3QIBRCNBbNrPzX8w6djmpUTZMFw3kpgEAIObEKWalT6pThLE6YPFfzBomueaW
        XKkn6sl1DQAAMSZPMf1dAABjxp+FqH6udzLKhxGgATTgogYAgHgBoBUjf6MAsNTFTkWZSPZoAA34oAEA
        IF4AOBIAMAoALP6LUb8+JDTKiPGigdw1AADEmEDF/E8HAIwBQDGL/3Lv6CRF6goNoIEdNQAAxAsAHBFs
        bgHkDSQ0EhoaQANoILoGAIB4AWAKMwBGZgDKpR6b0vGjd3zqjrpDA2gAAIgXANYCAEYA4CGSF8kLDaAB
        NFCYBgCAeAHgEwCgYADQGyl1oeMX1vGpP+oPDaABACBeAHgfACgYAJ4jcZG40AAaQAOFawAAiBcAlgMA
        BQPA4XT8wjs+dUgdogE0AADECwC3AQAFAcCrJC2SFhpAA2jAjAYAgHgB4GgAoCAAOIGOb6bjU4/UIxpA
        AwBAvACwmwAAbwJE2wvgbam7XUlaJC00gAbQgBkNAAAxAoAWrZjYL5kFiDQLcDqd3kynpx6pRzSABrQG
        AICYASADAVOBgLwg4Aupr71JWiQtNIAG0IA5DQAAyQBAPTG0NUBAzhDwP3R6c52euqQu0QAaYAYgAfPP
        djwx//YSHwEBdULA36WO9iRhkbDQABpAA2Y1wAxAshDQVMztVSCgVgj4PZ3ebKenPqlPNIAGmAFI0Pyr
        zATsJQBwk4Q+4EYR29XBOqmP3UhWJCs0gAbQgHkNMAPgAARkFga2E7N7SmJDLRCg98H/WGKOxEMSIyRG
        StwrsTpAeDiRTm++01On1CkaQAPMADhi/lU7o5j47hI/kDhD4uxMHC9/e9S1El7+vbXEdRKlAcDAUpIU
        SQoNoAE0YE8DzAA4CAGFCj4DApM8h4BjCq0Hvm8vcVC31C0a8F8DAECAAFBlfcFlAgH6sYFvawvmkFz8
        Ty60IW2IBtzWAAAQMABk1hb8WgDgW88gYBCJw+3EQfvQPmjAfw0AAIEDQAYCLvEIABaRWPxPLLQhbYgG
        3NcAAJACAMhAwERPIOACEof7iYM2oo3QgP8aAADSAwAtBQC2eAABHUks/icW2pA2RAPuawAASAkAZGYB
        9CuCLi8IXE3ScD9p0Ea0ERoIQwMAQLoAoLnjAHAxiSWMxEI70o5owH0NAAApAoDMLMByRyFAb17UkKTh
        ftKgjWgjNBCGBgCA9AHA7Y4CwEMklTCSCu1IO6IBPzQAAKQPAK53FAB6kTT8SBq0E+2EBsLQAACQPgC4
        xkEAmEBCCSOh0I60IxrwRwMAQPoA4E7HAEAfg9yOpOFP0qCtaCs0EIYGAID0AcBoxwBgBMkkjGRCO9KO
        aMAvDQAA6QOAxxwCgK+kLPVIGn4lDdqL9kIDYWgAAEgfANzvEAAMI5GEkUhoR9oRDfinAQAgfQAwzBEA
        uIOE4V/CoM1oMzQQjgYAgPQBwD4CABsShoC58vu7k0jCSSS0JW2JBvzTAACQMgDI7AZ4bYIA8LH8dhOS
        hX/JgjajzdBAWBoAANIJALuJCS9IAAKK5DcPIYmElURoT9oTDfipAQAghQCQmQXQxwOvixECVstvdSBR
        +JkoaDfaDQ2EpwEAIKUAkIGAA8SUZ8UAAc/Jb+xHAgkvgdCmtCka8FcDAECKASADAbuLOZ8p8ZEFEPhO
        rqnXG+xCkvA3SdB2tB0aCFMDAEDKASDbscWk95Q4XeIDAyBQIdd4SmIAiSPMxEG70q5owH8NAAAAwHYa
        0K/nSfxe4jUJvU+/yiM+lc9eKdGU5OB/cqANaUM0ELYGAAAAoEYNZGYFBsjfsyWezCwa/FL+fiNRnHls
        8LL8HSlxooYHEkbYCYP2pX3RQDga+P9TvuRirECYdQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="txtCrear_base_de_datos2017NORMAL.Text" xml:space="preserve">
    <value>CREATE DATABASE [BASEADA]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'BASEADA', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\BASEADA.mdf' , SIZE = 5120KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'BASEADA_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\BASEADA_log.ldf' , SIZE = 2048KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)

</value>
  </data>
  <metadata name="Timer3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>261, 18</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>